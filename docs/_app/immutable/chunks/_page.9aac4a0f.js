import{s as b,n as A}from"./scheduler.fd3686c2.js";import{S as $,i as z,k as D,m as I,o as L,p as V,q as _,r as F}from"./index.a4ac66b3.js";import{c as U,a as W}from"./stores.18c7fe24.js";import{R as Y}from"./Runner.368d24d4.js";const f="Pyroclastic Flow",g="17",m="2022",v="Puzzle description",y=!0,k="Result",O="Result",S=["TODO: OPTIMISE","TODO: WRITE DESC"],x=!0,E={title:f,day:g,year:m,description:v,longRuntime:y,result1:k,result2:O,keywords:S,visible:x},j=Object.freeze(Object.defineProperty({__proto__:null,day:g,default:E,description:v,keywords:S,longRuntime:y,result1:k,result2:O,title:f,visible:x,year:m},Symbol.toStringTag,{value:"Module"}));class c{constructor(e,t){this.x=Number(e),this.y=Number(t)}static fromString(e){return new c(...e.trim().split(","))}copy(){return new c(this.x,this.y)}}class P{constructor(e){const t=e.split(`
`);this.coords=[];let s=t.length-1;for(const o of t){if(o.length!==t[0].length)throw"Input line has different length to first line!";let n=0;for(const r of o)r!=="."&&this.coords.push(new c(n,s)),n+=1;s-=1}this.canUndoLastMove=!1,this.lastMoveWasHorizontal=!1,this.xChange=0}setMinimumXValue(e){const t=Math.min(...this.coords.map(o=>o.x)),s=e-t;this.addXValue(s)}setMinimumYValue(e){const t=Math.min(...this.coords.map(o=>o.y)),s=e-t;this.addYValue(s)}reset(e,t){t===void 0&&(t=2),this.setMinimumYValue(e),this.setMinimumXValue(t),this.canUndoLastMove=!1}addXValue(e){this.coords.forEach(t=>t.x+=e)}addYValue(e){this.coords.forEach(t=>t.y+=e)}moveHorizontally(e){if(e==="<")this.xChange=-1;else if(e===">")this.xChange=1;else throw`Horizontal move string ${e} not recognised!`;return this.addXValue(this.xChange),this.coords.map(s=>s.x<0||s.x>6).some(s=>s===!0)?(this.addXValue(-this.xChange),!0):(this.canUndoLastMove=!0,this.lastMoveWasHorizontal=!0,!1)}moveDown(){return this.addYValue(-1),this.coords.map(t=>t.y<0).some(t=>t===!0)?(this.addYValue(1),!0):(this.canUndoLastMove=!0,this.lastMoveWasHorizontal=!1,!1)}undoLastMove(){if(!this.canUndoLastMove)throw"Unable to undo last move. There may in fact not have been a move at all!";this.lastMoveWasHorizontal?this.addXValue(-this.xChange):this.addYValue(1),this.canUndoLastMove=!1}}const X=["####",`.#.
###
.#.`,`..#
..#
###`,`#
#
#
#`,`##
##`];function N(i){const e=i.map(t=>t?1:0).join("");return parseInt(e,2)}class M{constructor(e,t){this.moveOrder=e,t===void 0&&(this.rocks=X.map(s=>new P(s))),this.cave=[...Array(100)].map(s=>Array(7).fill(!1)),this.currentOrigin=0,this.highestOccupiedSpace=-1,this.totalRocksDropped=0,this.indexHorizontalMove=0}shiftCave(){if(this.highestOccupiedSpace>this.cave.length-10){const t=[...Array(20)].map(s=>Array(7).fill(!1));this.cave=this.cave.slice(20),this.cave.push(...t),this.currentOrigin+=20,this.highestOccupiedSpace-=20}}findHighestOccupiedSpace(){for(let e=this.cave.length-1;e>=0;e++)if(this.cave[e].some(t=>t===!0))return this.highestOccupiedSpace=e,this.highestOccupiedSpace;return this.highestOccupiedSpace=-1,this.highestOccupiedSpace}getNextHorizontalMove(){const e=this.moveOrder[this.indexHorizontalMove%this.moveOrder.length];return this.indexHorizontalMove+=1,e}checkForCollisions(e){for(const t of e.coords)if(this.cave[t.y][t.x])return e.undoLastMove(),!0;return!1}addRockToCave(e){for(const t of e.coords)this.cave[t.y][t.x]=!0;this.highestOccupiedSpace=Math.max(this.highestOccupiedSpace,...e.coords.map(t=>t.y))}dropOneRock(e){const t=this.rocks[e];for(t.reset(this.highestOccupiedSpace+4);t.moveHorizontally(this.getNextHorizontalMove())||this.checkForCollisions(t),!(t.moveDown()||this.checkForCollisions(t)););this.addRockToCave(t)}dropRocks(e){let t=0;for(;t<e;)this.dropOneRock(this.totalRocksDropped%this.rocks.length),this.shiftCave(),t+=1,this.totalRocksDropped+=1;return this.highestOccupiedSpace+this.currentOrigin+1}renderCaveAsString(){const e=[];for(let t=this.cave.length-1;t>=0;t--){let s;t+this.currentOrigin===this.highestOccupiedSpace?s=">|":s=" |";const o=`| ${t+this.currentOrigin}`;e.push(s+this.cave[t].map(n=>n===!0?"#":".").join("")+o)}return e.push(` +-------+ ${this.currentOrigin-1} max: ${this.currentOrigin+this.highestOccupiedSpace}`),e.join(`
`)}getCaveState(e,t){const s=[];for(let o=this.highestOccupiedSpace;o>this.highestOccupiedSpace-e;o--)s.push(N(this.cave[o]));return{rocks:this.totalRocksDropped,height:this.currentOrigin+this.highestOccupiedSpace+1,state:s.join("-"),index:t}}compareToStates(e,t){let s=-1,o=0;for(const n of e)t.state===n.state&&(s=o),o+=1;return s}dropRocksCyclical(e){const o=this.rocks.length*this.moveOrder.length;this.dropRocks(o*2);const n=[this.getCaveState(20,0)];let r,h=-1;for(;this.dropRocks(o),r=this.getCaveState(20,n.length),h=this.compareToStates(n,r),h===-1;)if(n.push(r),r.length>20)throw`Unable to find a cycle after ${r.length} tries!`;const a=n[h],u=a.rocks,w=a.height;console.log(a),console.log(r);const d=r.rocks-a.rocks,R=r.height-a.height,p=Math.floor((e-u)/d),C=R*p,H=e-u-p*d;this.dropRocks(H);const T=this.currentOrigin+this.highestOccupiedSpace+1-r.height;return w+C+T}}function l(i){return i.trim()}function q(i){return new M(i).dropRocks(2022)}function B(i){return new M(i).dropRocksCyclical(1e12)}const K=`

`,G=">>><<><>><<<>><>>><<<>>><<<><<<>><>><<>>";function J(i){let e,t;return e=new Y({props:{part1:q,part2:B,preprocessor:l,metadata:Q}}),{c(){D(e.$$.fragment)},l(s){I(e.$$.fragment,s)},m(s,o){L(e,s,o),t=!0},p:A,i(s){t||(V(e.$$.fragment,s),t=!0)},o(s){_(e.$$.fragment,s),t=!1},d(s){F(e,s)}}}const Q=j;function Z(i){return U.set(l(K)),W.set(l(G)),[]}class it extends ${constructor(e){super(),z(this,e,Z,J,b,{})}}export{it as default,Q as myMetadata};
