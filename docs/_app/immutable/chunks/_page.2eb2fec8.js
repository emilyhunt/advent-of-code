import{s as m2,n as q2}from"./scheduler.82952e60.js";import{S as z2,i as S2,k as j2,m as M2,o as E2,p as b2,q as N2,r as A2}from"./index.4f02d16c.js";import{c as C2,a as I2}from"./stores.7b94593c.js";import{R as T2}from"./Runner.63361570.js";const Fe="Monkey Math",De="21",Pe="2022",ke="Oh no, the monkeys are back! Now for a fun adventure in doing some math operations.",xe=!1,Be="Value root will get",Ge="Required value to shout",Ve=["nerdamer.js","symbolic maths","TODO: COMMENT"],He=!0,O2={title:Fe,day:De,year:Pe,description:ke,longRuntime:xe,result1:Be,result2:Ge,keywords:Ve,visible:He},R2=Object.freeze(Object.defineProperty({__proto__:null,day:De,default:O2,description:ke,keywords:Ve,longRuntime:xe,result1:Be,result2:Ge,title:Fe,visible:He,year:Pe},Symbol.toStringTag,{value:"Module"}));var U2=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function L2(l1){return l1&&l1.__esModule&&Object.prototype.hasOwnProperty.call(l1,"default")?l1.default:l1}var Ie={exports:{}},Oe;function Ne(){return Oe||(Oe=1,function(l1){var j1=function(m){var a="1.1.13",y=new Un,h1=m.bigInt,K0=m.bigDec;K0.set({precision:250});var N0={},I1=[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997,1009,1013,1019,1021,1031,1033,1039,1049,1051,1061,1063,1069,1087,1091,1093,1097,1103,1109,1117,1123,1129,1151,1153,1163,1171,1181,1187,1193,1201,1213,1217,1223,1229,1231,1237,1249,1259,1277,1279,1283,1289,1291,1297,1301,1303,1307,1319,1321,1327,1361,1367,1373,1381,1399,1409,1423,1427,1429,1433,1439,1447,1451,1453,1459,1471,1481,1483,1487,1489,1493,1499,1511,1523,1531,1543,1549,1553,1559,1567,1571,1579,1583,1597,1601,1607,1609,1613,1619,1621,1627,1637,1657,1663,1667,1669,1693,1697,1699,1709,1721,1723,1733,1741,1747,1753,1759,1777,1783,1787,1789,1801,1811,1823,1831,1847,1861,1867,1871,1873,1877,1879,1889,1901,1907,1913,1931,1933,1949,1951,1973,1979,1987,1993,1997,1999,2003,2011,2017,2027,2029,2039,2053,2063,2069,2081,2083],V0={},U={callPeekers:!1,init_primes:1e3,exclude:[],suppress_errors:!1,PARSE2NUMBER:!1,SAFE:!1,IMAGINARY:"i",FUNCTION_MODULES:[Math],ALLOW_CHARS:["π"],USE_MULTICHARACTER_VARS:!0,POWER_OPERATOR:"^",VALIDATION_REGEX:/^[a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ∞][0-9a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]*$/i,IMPLIED_MULTIPLICATION_REGEX:/([\+\-\/\*]*[0-9]+)([a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]+[\+\-\/\*]*)/gi,ALIASES:{π:"pi","∞":"Infinity"},POSITIVE_MULTIPLIERS:!1,CACHE:{},SILENCE_WARNINGS:!1,PRECISION:21,EXPRESSION_DECP:19,DEFAULT_DECP:16,VECTOR:"vector",PARENTHESIS:"parens",SQRT:"sqrt",ABS:"abs",FACTORIAL:"factorial",DOUBLEFACTORIAL:"dfactorial",LONG_PI:"3.14159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214808651328230664709384460955058223172535940812848111745028410270193852110555964462294895493038196",LONG_E:"2.71828182845904523536028747135266249775724709369995957496696762772407663035354759457138217852516642742746639193200305992181741359662904357290033429526059563073813232862794349076323382988075319525101901",PI:Math.PI,E:Math.E,LOG:"log",LOG10:"log10",LOG10_LATEX:"log_{10}",MAX_EXP:2e5,SCIENTIFIC_MAX_DECIMAL_PLACES:14,SCIENTIFIC_IGNORE_ZERO_EXPONENTS:!0};(function(){U.CACHE.roots={};for(var e=40,t=40,f=2;f<=e;f++)for(var l=2;l<=t;l++){var S=h1(f).pow(l);U.CACHE.roots[S+"-"+l]=f}})();var X=N0.N=1,k0=N0.P=2,D0=N0.S=3,Y0=N0.EX=4,F0=N0.FN=5,x0=N0.PL=6,O0=N0.CB=7,e1=N0.CP=8,M0=U.CONST_HASH="#",D1=U.PARENTHESIS,Q1=U.SQRT,M1=U.ABS,N1=U.FACTORIAL,x1=U.DOUBLEFACTORIAL,Q=[],s={},h=[],u=[],p=function(e,t){if(!U.suppress_errors)throw t?new t(e):new Error(e)},v=function(e){var t=function(f){this.name=e,this.message=f!==void 0?f:"";var l=new Error(this.message);l.name=this.name,this.stack=l.stack};return t.prototype=Object.create(Error.prototype),t},b=function(e){return h.indexOf(e)!==-1},T=function(e){for(var t=e[0],f=1,l=e.length;f<l;f++)if(!e[f].equals(t))return!1;return!0},L=function(e){u.push(e),U.SHOW_WARNINGS&&console&&console.warn&&console.warn(e)},_=function(e,t){if(t=t||"variable",U.ALLOW_CHARS.indexOf(e)===-1){var f=U.VALIDATION_REGEX;if(!f.test(e))throw new a1(e+" is not a valid "+t+" name")}},G=function(e){var t=Math.sign(e);if(e=Math.abs(e),/\d+\.?\d*e[\+\-]*\d+/i.test(e)){var f="0",l=String(e).toLowerCase().split("e"),S=l.pop(),E=Math.abs(S),M=S/E,P=l[0].split(".");if(M===-1)E=E-P[0].length,E<0?e=P[0].slice(0,E)+"."+P[0].slice(E)+(P.length===2?P[1]:""):e=f+"."+new Array(E+1).join(f)+P.join("");else{var p0=P[1];p0&&(E=E-p0.length),E<0?e=P[0]+p0.slice(0,E)+"."+p0.slice(E):e=P.join("")+new Array(E+1).join(f)}}return t<0?"-"+e:e},n0=function(e){for(var t=Math.floor(Math.sqrt(e)),f=2;f<=t;f++)if(e%f===0)return!1;return!0},q0=function(e,t){var f={};return f[e]=t,f},j0=function(e){return/^\d+\.?\d*$/.test(e)},f0=function(e){for(var t=0;t<e.length;t++)if(!j0(e[t]))return!1;return!0},R0=function(e){return w0(e)?R0(e.multiplier.toDecimal()):e%1!==0},w0=function(e){return e instanceof A},n1=function(e){return e instanceof pn},X0=function(e,t,f){if(f=f||{c:[],add:function(P){this.c.indexOf(P)===-1&&isNaN(P)&&this.c.push(P)}},w0(e)){var l=e.group,S=e.previousGroup;if(l===Y0&&X0(e.power,t,f),l===e1||l===O0||S===e1||S===O0)for(var E in e.symbols)X0(e.symbols[E],t,f);else if(l===D0||S===D0)e.value==="e"||e.value==="pi"||e.value===U.IMAGINARY||f.add(e.value);else if(l===x0||S===x0)X0(z(e.symbols),t,f);else if(l===Y0)isNaN(e.value)||f.add(e.value),X0(e.power,t,f);else if(l===F0&&!t)for(var M=0;M<e.args.length;M++)X0(e.args[M],t,f)}return f.c.sort()},g1=function(e,t){for(var f=new A(0),l=0;l<e.length;l++){var S=e[l];f=y.add(f,w0(S)?S:y.parse(S))}return t?Number(f):f},d1=function(e,t){e=y.expand(e),t=t||{};var f=function(l,S){t[l]||(t[l]=new A(0)),t[l]=y.add(t[l],S.clone())};return e.each(function(l){if(l.isConstant("all"))f("constants",l);else if(l.group===D0)f(l.value,l);else if(l.group===F0&&(l.fname===M1||l.fname===""))d1(l.args[0]);else{if(l.group===Y0||l.group===F0)throw new Error("Unable to separate. Term cannot be a function!");f(X0(l).join(" "),l)}}),t},X1=function(e,t){t=t||e.length;for(var f=0;f<t;f++){var l=e[f];l||(e[f]=new A(0))}return e},s1=function(e){return e instanceof K1},P0=function(e){return e instanceof f1},i1=function(e){return e instanceof V1},R1=function(e){return e.group===X||e.group===k0},Z1=function(e){return e.group===D0&&e.multiplier.equals(1)&&e.power.equals(1)},c1=function(e){return Array.isArray(e)},D=function(e){return/^[-+]?\d+e?\+?\d*$/gim.test(e.toString())},B=function(e){return w0(e)&&(e=e.multiplier),e.lessThan(0)},r0=function(e){return e&&String(e)},F=function(e){return"("+e+")"},t0=function(e,t,f,l){return e.substr(0,t)+l+e.substr(f,e.length)},A0=function(e){return e!==void 0&&e.custom},z0=function(e,t){return e<0==t<0},k=function(){var e=[].slice.call(arguments),t=e.shift(),f=t.replace(/{(\d+)}/g,function(l,S){var E=e[S];return typeof E=="function"?E():E});return f},c=function(e,t,f){var l=[];f=f||1;for(var S=e;S<=t;S++)l.push(S*f);return l},N=Object.keys,z=function(e,t,f){for(var l in e)break;return t?l:f?{key:l,obj:e[l]}:e[l]},x=function(e,t,f){for(var l=5,S={},E,M=0;M<f.length;M++)S[f[M]]=new A(Math.floor(Math.random()*l)+1);return p1("PARSE2NUMBER",function(){E=y.parse(e,S).equals(y.parse(t,S))}),E},H=function(e,t,f){return _(e),b(e)?null:(t=t||X0(y.parse(f)),y.functions[e]=[y.mapped_function,t.length,{name:e,params:t,body:f}],f)},K=function(e){return Math.max.apply(void 0,e)},Z=function(e){return Math.min.apply(void 0,e)},O=function(e,t){if(e.sort(),t.sort(),e.length===t.length){for(var f=0;f<e.length;f++)if(e[f]!==t[f])return!1;return!0}return!1},c0=function(e){for(var t=[],f=e.length,l=0;l<f;l++)t[l]=e[l].clone();return t},g0=function(e,t){t=t||20;var f=[],l,S,E;f.push(e[0]);for(var M=0;M<e.length-1;M++){l=e[M],S=e[M+1]-l,E=S/t;for(var P=0;P<t;P++)l+=E,f.push(l)}return f},E0=function(e){var t,f;if(e.group===F0&&e.fname===""?(t=A.unwrapPARENS(y.parse(e).toLinear()),f=y.parse(e.power)):e.group===k0&&(t=y.parse(e.value),f=y.parse(e.power)),t&&f&&t.group===X&&f.group===X&&t.multiplier.isNegative()){for(var l=[],S=A.toPolarFormArray(_0(e)),E=S[0],M=y.arg(t),P=f.multiplier.den.toString(),p0=f.multiplier.num.toString(),l0="(({0})^({1})*(cos({3})+({2})*sin({3})))^({4})",h0=0;h0<P;h0++){var t1=_0(y.parse(k("(({0})+2*pi*({1}))/({2})",M,h0,P))).multiplier.toDecimal();l.push(_0(y.parse(k(l0,E,P,U.IMAGINARY,t1,p0))))}return K1.fromArray(l)}else if(e.isConstant(!0,!0)){var I0=e.sign(),M=_0(e.abs()),G0=y.sqrt(M),l=[G0.clone(),G0.negate()];I0<0&&(l=l.map(function(_1){return y.multiply(_1,A.imaginary())}))}else l=[y.parse(e)];return K1.fromArray(l)},a0=function(e,t){for(var f=e.length,l=[],S=0;S<e.length;S++)l.push([e[S],t[S]]);l.sort(function(P,p0){return P[0]-p0[0]});var E=[],M=[];for(S=0;S<f;S++)E.push(l[S][0]),M.push(l[S][1]);return[E,M]},v0=function(e,t,f){t=String(t);var l,S,E,M;if(e.group===e1){var P=y.expand(e.clone()).stripVar(t);l=y.subtract(e.clone(),P.clone()),M=P}else l=e.clone();return S=l.stripVar(t),E=y.divide(l.clone(),S.clone()),M=M||new A(0),f?{a:S,x:E,ax:l,b:M}:[S,E,l,M]},u0=function(e,t){return D(e)?e>=Number.MAX_VALUE?e.toString():Number(e):(t=typeof t>"u"?14:t,Math.round(e*Math.pow(10,t))/Math.pow(10,t))},i0=function(e){for(var t="u",f=t,l=0,S=X0(e);!(h.indexOf(f)===-1&&S.indexOf(f)===-1);)f=t+l++;for(var E=0,M=h.length;E<=M;E++)if(!h[E]){h[E]=f;break}return f},T0=function(e){var t=h.indexOf(e);t!==-1&&(h[t]=void 0)},o0=function(e,t){if(c1(e))for(var f=e.length,l=0;l<f;l++)t.call(e,l);else for(var S in e)e.hasOwnProperty(S)&&t.call(e,S)},b0=function(e){return e%2===0},B0=function(e){return 1/(e%1)%2===0},$0=function(e){for(var t=e.length,f=[],l=0;l<t;l++){var S=e[l];f.indexOf(S)===-1&&f.push(S)}return f},Z0=function(e){for(var t=X0(e[0],null,null),f=1,l=e.length;f<l;f++)t=t.concat(X0(e[f]));return t=$0(t).sort(),t},C1=function(e,t){var f=typeof t;(f!=="function"||f==="undefined")&&(t=function(p0,l0){return p0===l0});for(var l=[];e.length;){var S=e[0];if(e.length===1){l.push(S);break}var E=[];l.push(S);for(var M=1;M<e.length;M++){var P=e[M];t(S,P)||E.push(P)}e=E}return l},u1=function(e){var t=function(f){h.indexOf(f)===-1&&h.push(f)};typeof e=="string"?t(e):o0(e,function(f){t(f)})},H0=function(e,t){var f;return c1(e)?f=e.splice(t,1)[0]:(f=e[t],delete e[t]),f},p1=function(e,t,f,l){var S=U[e];U[e]=f===void 0?!0:!!f;var E=t.call(l);return U[e]=S,E},y1=function(){var e={};for(var t in y.functions)e[t]=y.functions[t][0];return e},T1=function(e){return[].slice.call(e)},P1=function(e,t,f){var l=[];e.each(function(E){if(E.contains(t))var M=E.stripVar(t),P=y.divide(E.clone(),M.clone()),p0=P.power.toDecimal();else M=E,p0=0;var l0=l[p0];l[p0]=l0?y.add(l0,M):M},!0);for(var S=0;S<l.length;S++)l[S]||(l[S]=new A(0));return l},_0=function(e,t){return p1("PARSE2NUMBER",function(){return y.parse(e,t)},!0)},v1=function(e){if(c1(e)){for(var t=new K1([]),f=0;f<e.length;f++)t.elements.push(v1(e[f]));return t}return w0(e)?e:y.parse(e)},O1=function(e){for(var t=I1[I1.length-1]||2,f=t;f<e;f++)n0(f)&&I1.push(f)},o=function(e){for(var t=0;t<e.length;t++)if(e[t].group!==X)return!1;return!0},d=function(e){for(var t=0;t<e.length;t++)if(!(e[t].isPi()||e[t].isE())&&!e[t].isConstant(!0))return!1;return!0},g=function(e,t,f){(t.isComposite()&&!e.isComposite()||t.isLinear()&&!e.isLinear())&&([e,t]=[t,e]);var l=new A(0);return e.isLinear()?e.each(function(S){if(t.isComposite())t.isLinear()?t.each(function(M){var P=y.multiply(y.parse(S),y.parse(M)),p0=y.expand(y.parse(P),f);l=y.add(l,p0)},!0):l=y.add(l,y.multiply(S,y.parse(t)));else{var E=y.multiply(y.parse(S),y.parse(t));l=y.add(l,y.expand(E,f))}},!0):l=y.multiply(e,t),l},q=v("DivisionByZero"),I=v("ParseError"),w=v("UndefinedError"),R=v("OutOfFunctionDomainError"),$=v("MaximumIterationsReached"),W=v("NerdamerTypeError"),e0=v("ParityError"),Y=v("OperatorError"),d0=v("OutOfRangeError"),C0=v("DimensionError"),a1=v("InvalidVariableNameError"),r1=v("ValueLimitExceededError"),J0=v("NerdamerValueError"),S1=v("SolveError"),ln=v("InfiniteLoopError"),fn=v("UnexpectedTokenError"),W1={DivisionByZero:q,ParseError:I,OutOfFunctionDomainError:R,UndefinedError:w,MaximumIterationsReached:$,NerdamerTypeError:W,ParityError:e0,OperatorError:Y,OutOfRangeError:d0,DimensionError:C0,InvalidVariableNameError:a1,ValueLimitExceededError:r1,NerdamerValueError:J0,SolveError:S1,InfiniteLoopError:ln,UnexpectedTokenError:fn},W0={csc:function(e){return 1/Math.sin(e)},sec:function(e){return 1/Math.cos(e)},cot:function(e){return 1/Math.tan(e)},acsc:function(e){return Math.asin(1/e)},asec:function(e){return Math.acos(1/e)},acot:function(e){return Math.PI/2-Math.atan(e)},erf:function(e){var t=1/(1+.5*Math.abs(e)),f=1-t*Math.exp(-e*e-1.26551223+t*(1.00002368+t*(.37409196+t*(.09678418+t*(-.18628806+t*(.27886807+t*(-1.13520398+t*(1.48851587+t*(-.82215223+t*.17087277)))))))));return e>=0?f:-f},diff:function(e){var t=.001,f=function(l){return(e(l+t)-e(l-t))/(2*t)};return f},median:function(...e){e.sort(function(f,l){return f-l});var t=Math.floor(e.length/2);return e.length%2?e[t]:(e[t-1]+e[t])/2},fromContinued:function(e){for(var t=e.fractions.slice(),f=1/t.pop(),l=0,S=t.length;l<S;l++)f=1/(t.pop()+f);return e.sign*(e.whole+f)},continuedFraction:function(e,t){t=t||20;for(var f=Math.sign(e),l=Math.abs(e),S=Math.floor(l),E=l-S,M=0,P=!1,p0=1e-14,l0=1e7,h0,t1,I0={whole:S,sign:f,fractions:[]};!P&&E!==0;){if(h0=1/E,t1=Math.floor(h0),t1>l0){var G0=W0.fromContinued(I0)-e;if(G0<=Number.EPSILON)break}I0.fractions.push(t1),E=h0-t1,(E<=p0||M>=t-1)&&(P=!0),M++}var m1=I0.fractions.length-1;return I0.fractions[m1]===1&&(I0.fractions.pop(),I0.fractions[--m1]++),I0},bigpow:function(e,t){e instanceof y0||(e=y0.create(e)),t instanceof y0||(t=y0.create(t));var f=new y0(0);if(t.isInteger())f.num=e.num.pow(t.toString()),f.den=e.den.pow(t.toString());else{var l=y0.create(Math.pow(e.num,t.num)),S=y0.create(Math.pow(e.den,t.num));f.num=W0.nthroot(l,t.den.toString()),f.den=W0.nthroot(S,t.den)}return f},gamma:function(e){var t=7,f=[.9999999999998099,676.5203681218851,-1259.1392167224028,771.3234287776531,-176.6150291621406,12.507343278686905,-.13857109526572012,9984369578019572e-21,15056327351493116e-23];if(e<.5)return Math.PI/(Math.sin(Math.PI*e)*W0.gamma(1-e));e-=1;for(var l=f[0],S=1;S<t+2;S++)l+=f[S]/(e+S);var E=e+t+.5;return Math.sqrt(2*Math.PI)*Math.pow(E,e+.5)*Math.exp(-E)*l},bigfactorial:function(e){for(var t=new h1(1),f=2;f<=e;f++)t=t.times(f);return new y0(t)},bigLog:function(e){var t=["-253631954333118718762629409109262279926288908775918712466601196032/39970093576053625963957478139049824030906352922262642968060706375","0","24553090145869607172412918483124184864289170814122579923404694986469653261608528681589949629750677407356463601998534945057511664951799678336/35422621391945757431676178435630229283255250779216421054188228659061954317501699707236864189383591478024245495110561124597124995986978302375","369017335340917140706044240090243368728616279239227943871048759140274862131699550043150713059889196223917527172547/335894053932612728969975338549993764554481173661218585876475837409922537622385232776657791604345125227005476864000","24606853025626737903121303930100462245506322607985779603220820323211395607931699126390918477501325805513849611930008427268176602460462988972957593458726734897129954728102144/17750092415977639787139561330326170936321452137635322313122938207611787444311735251389066106937796085669460151963285086542745859461943369606018450213014148175716400146484375","399073568781976806715759409052286641738926636328983929439450824555613704676637191564699164303012247386095942144825603522401740680808466858044/247958349743620302021733249049411604982786755454514947379317600613433680222511897950658049325685140346169718465773927872179874971908848116625","1468102989495846944084741146947295378041808701256909016224309866143294556551407470861354311593351276612463858816796714569499021375899793849136855085849133702029337910502448189055357182595424959360/819363879309286303497217527375463120404739098260200279520788950777458900438307356738082930586032462601215802636320993648007907724899611296693997216938989854861043298494990214825163523387600982777","5896704855274661767824574093605344871722790278354431422729640950821239030785642943033153793245906863203822369276271050164634206965056233097479117980782641839669/3030306850569309344013726745100070601277982132543905537366562638553198167007159067544789592089960911065181606283478843359856123992707598685058297067179343872000","76631772943534985713873427262830314617912556928476573358548256872141516989538374761909611879922349479420014771499018155447198112155515453671128814488139633810493264352294560043912066253026059140653027326566801398784/36852092933388988649396042883218509607503204211148493545892849595498822817623842579026942621098851631842754395231561679671400197056377380063233740202370686144673585955581403046886083948450136247134308381940165804875","3159076083816399509754948610929467278257473888282947311280653574634802580912280940686954763313882823327077171624015737719617373932318151594325834524000275847475866299387913048/1437757485694188822758304467756419845842037623148461107362957994816554782989250555362514354661961482939226272309026092009962414616417412938087494467254146002233028411865234375","22266067259907364984531611601870291368272674573653403965630628996687370994139884833897773468149149664829922302484782423514167405397665098388400450149078982462318781750661005833037235183394221496186539779712428265837926417581952/9670030144664428565128962309657100138096047028794689249320859276197340398920725569428532293373676415359965773460364494998334259893079003125373872108770534788283842907318071170285038777091588292539102269617376180390982915567375","14604654564989239958569331443385369522850975185358647132770022716433280072271007767111036877803328768910274400515590151934676819262085211828028638417329558229123989556376108454497813055/6090614019162516693013973409650613208227889078878781039105047015752493519149314227721984436973374032279421344818329285207124280297611253861173835238379831004010748379874393292231671808","1901241885407696031217292877862925220917660047127261026827869027159993239567933534052663335498281439239753018507182016153657409777749792228538380379703411298411623469292891476969894084838876001545818141543890273256985768690847587711270930688/765116019778838839812655402103512685695769161212360553099732689795578904762091216998790589926057819838537805856579109910198553330075924857419395160755642371550113347465300208422126945265887065434116781678702741657275181694851670325469434625","139459806786604751793737926146840623607010208216289543036026206208962059593900745886202214788747453279179283344350478734275973878932538430194363355795823581315329311220701640235653288975569812161436/54371368534412517053056101353618694718215711767266376573138772968257303578467926450212293233332401067673270853953399269852376592855992724934941173346260129257754416412476202526978443681584633116375","1045669091124493070709683241190022970908640501171378776604126771144008324358233819560649021940145166254659028524319517244711645162132513416238958170819347361185944945680269442845829390112062101255500836072082817820950448463314034677353723256969344/396228259004446234921310936915931611736815598535963504660076315228798989932959459406702091180060429080345146735173591749448509810270759531977278642135591672189002006272326131885315743181289970885337574780897529347356567086535505950450897216796875","9912919238915437302006264477931031611447467070103973106567538528951878797932559935860738745374437522819124347510590800370471910492338584284092534264608801221235029062881964101996762011296996851893455828946521/3660537472668264151218961634689665210933936249986285290553357254224360417386515311493310199319523687171757653216994741150377508234317025158302057758196429623723072084157928224798322861732880034847243894784000","9263710175433181746575186369318246002919895649622127410824041370079225200282403368319370743363303164313395723904510539050157032684710468364067204876434546848634842333436957245275217583248805993142227630297924119330553308466662488683624783307023014909360640/3341177182697517248552428837661919299725031035849865632511882688786226888137634168024976033652753689210700218163621739078534353578510364301481093730054725078138658805025014615651043313990684347632166030359086885561104034510990826655289288319840595753002771","5116082230713622171832327542439052727465114322479570603905499496221224653983960598946033081212909066917137546065542953865612718836914393275681318667667521726785633638189373998191090501201427906618075889744489190209584/1805752553736060443820406101277706970767657006346276183748749630179442318063568286372320188433843729960294965366346522303898609655762491623098453269916163621089005711823488749297418113474056676109581110715068124438875","246569125619713282434448566970352231845414317018379160824176638351574938993535464763890962336882760882398479702237564384291290459961036068916857265499633061660562532011248501476114401629839742058389195725393702000011860799793778295606988057303225493814005789533570432/85307063020836305797178273029353623060860009152114361453434032434699636078115114412588719432277441055049132559782203988387794711585368296817222565434951256788867244687081233632650953850383220864394261763844194948389861147622944651546912394593164406926489862036343375","133672026303452911046163998480860917119290576658330909785707604886881155606725822685088929236266583416708668502760907677019598002175122453170574729028452721476464728566191464897928696630979863154661704374206171469014225143/45398130975270785045482567762871405072140548998125471025451666500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","6041693953360002800224091673336562508913199995987479264605216252220579740134601435770085920869376641180763419907442721705887169884230643795126568815123647603047739799302562095542459344811429882053086550900803768964612193941424128649976704727183797495759082741166938351872/2016766992122395667828553277997478570503475626107286343497917705446132017125079612756035254750822860815515899557855166824523851779156336235294914777307802256439645525835223691751931866188957324792276149549076500784191791380803500156776088683900346065830066370370083309875","705868391597244582764749229356331441978820024796066870551110486625729826111158236686696326058778874201639006234449557592353247542995871491078308187261304930042019640830629526023972693107193897009168955674240659026247094657679060/231848642748474339277532000336338632910990823562381469441716922006107433404523316252618490265927265734670539384485699132080062215196462178933963957679882342083893417545858074378754089719547920901917516016346211301054206383643383","101832160604157943093944673541651013907278188571533075311673249923948856034633446617630054761681006062910980371900782781226979391765818325065031889334563981235894369036439929651260587335544056975715076598739977065390678221999918899003881778449092038750712969437519295878491018112/32944277910571666002449086492515464541550138004002141571670657643770713783329063548790202120805341989608877739811787937782240802963962520261844114327432160788193314874913687387269408387417806176202979244637915812905426565263196954203487934225589622864145960079736633434831996625","10655703119271468913597640479490594180964700448340778168715956712130636958373270202484276402718566314881119559090842449610957974112230306343486091910217340665146602598568991520563987490686996746558858366002301982443029430290679385551/3398412687366638541233365137084722368200311117891192348532156645374786104142009695796409107380345795998400850838706661851176885183144928701608654514812261697598380070746520197171576610572921007069104300695592751543563472456384512000","1903039332876763837419920240543738799531131775028971323439870868730321221615515008394327723508670975623498588291298064320786970626232668956372004004897872810230178526101184611242511193415796638694370503100219710864543168952682617801833318493436174387568067811938490953495819438108686336/598806534367503338307287246320963280558134937382149405305466709787179429317914803617527827862441615350396864359976273212272586892074799651088317544101755361439294687323233086696182687664637422796995789967075271448560870681210580691574924544896656175563265378514188341796398162841796875","525573915563826130963525826191411949262846916750432019596028344808298471293378917508549164993368392834023782480702893643486699787870059946429810070222126260200026332874480239090370088123833491499400991181659445914352500247596757005142623368/163278727324937389095822405034435687776345799835442022795533783889356344755225815267819508608559076191292900367982490827396869405536484846115955581043091229202052407483776587687967125885665493681707461345895999542381476164157058393971431375","9263815657177858787273494705338516861045771674838057329170239610953039987023429736752079544014780707408666628475997291124805562998227296677616204140605356257712022384368492575381355563976330347792504605666631512343447560301417325154003481040250148561839861837778597346623630046623751094400/2843321709948499955095590862256744532227698001408929142548057792217790532624003190447363578048562448168721539177458065482170148482375585867230123873178100117094533143052886527452665480614620123764036974180917207421482431983407742154634391264619615289225747664532332469783301704643254076601","407959339726114455622180187758753007349209016396248763075759257357925636039752474207685682218422721827857994768023399625060206708378433960993946156803948655098667156937949174400873748557248801874735834957795040139401560494087476967548060208243867/123780218751812156744401121690996305978134694678934447237402511116731459214498784497436358160964198336874043702652746834763131444030185151143987331404604087778514863973633941401826334750268416015224906056576641018962863645043976537664227639296000","2547676391598917379516698439971914695230548782904479778605691338364453606537643088857116141939170899135026552016969320061900926954008522781162186995856580955090548471448276736878300717869625651893741316530109438876067419826217901657017506157997588944233677467357220316084583383623602865379325184/764562034757392298786420374672266498815021229519853724850874576419885380830752931701831256959159800764672605004880389358601658343203513177084389490286723240185146570925957286083025676875197029662038213216541352875570101363668917766225709569356861275434470568767077844675593176178611021135573625","186545352286463730559933346565311535598243666022232037054735807289501173444103692309735768703898330430135399033529355360391658728987379385732098960609744313878477967971557204207043802935782878745271859468248704012618254203101767841517569443555143252/55399179641621656233589820996143825959365789093262978988289445625153099592463372579496245442338653053662134699646413817866770218574795378644415019944304868289119443774932782235638737888469746745621382139263856603239588594078668393194675445556640625","664884440164786473344854955309049113269357314957985265728106924238588705533437169796551912202931185746193155801905841712503407258166135075966280435780812714252670362202091663287095423712596462690753468682634261029392794173636943978404002804413009590005984736612421172979101972556772005594499779860608/195485517776407145286424460448995460754674039560651791192647586550615878988380153730602665795647187884543361218962125172808792176382956599256188706636727418572541254480798303566840010217729386905041217793614214518363859058348249961790104618910877813067510758225302884815410347238200133693756493703875","2614957283934314904315471338485451166053664494383241929385424599389309215073267052860464009981063483440201193771607520572077231889699858482582363845275452280606276949653970992719332472370351170732899676316967244504534154616036371979031399425846100527685/761493664432749089312665480773496290658029971027686543404885407644062485746072719559288231362060149626237939029641098328278650939665665969011529293869562636656650999759724704272743235210867676873525147820749560155294022488994426729939894753293900972032","124843380518493746761140367283007507854364503961156704095198010255465940085534099747297600085903814014415830785663764373057896014399822131175202342399536439284123918855893825207202244831315575594886675813256448846863723093240955901916229136393454605455444105444987028391748121054399538064686074523506176/36022228212051654395480210378626648518430280334458144892889271272122662467638331091863215146548048144675657239846337165813938424387499358852301016926312083940212100001220180762189978024821166744964908871443681332664798940660421469519997746775275873085770018269706847741064037876137315001228315806659875","827992369063043155578730871896750570951766628472810506926098505028264552046829097082095665194000002802661600196840639204300804225352337632259980703832713031790922485730615305441309917696044954289187837653933158950774246017223571461858939407386087081525130831392/236805932823686534991153393869288530368011574665859226704279685567723830696754821658770176385138917722808377962346690757191122309876922069867472518117628639913077442806147910884267694879089753138429767401700283014143248445966474839193628309668702223994071394625","17347276886878323736540051321582548724378497839789943634071026331001588645519865992773157565595886250230140452154269197770615097377486013097979087647774513500701793885978192218455687078883766086309728287172567466406449372659680040183273634701092561727514713494914793425407149186041796935055187281744386432/4919325621804683623339606849970832094714371903709195539440424738973575902329797546592497378000858196173718145883783709223158260700365224756081275272021856393735663399552166737690038832550853145831185979094979556715294990257315369124065787473707136464772247917156232366320267601622617803514003753662109375","137984231830526866236186357461458917020538108058615632801298091031540729111527734872044790487396302545910108285921421417358113055522725197998483383380192391312304647004240060970929072498293210057120617332323445379424867965764749534125081131327565507524502163460761/38810445792642817561168950890315210470940006613819790543653745327778579787694809782601777514116858514049585074667085399925278459138508514838268321349069481334967221455722811414399738756151414906092225265355449011152267068726417045644222323488445626292574879744000","746567120547823334914136339633766098626636643449144032626270358619125402826113269699709721071135471625588981126637674402048519990010499180844665151971356149292818375448504122545400227696621572263621729512461528550588108384619064912224884465737417596190735966915167530332762203074440688676123756162572829692160/208334337057923929636884170505570363171441147899816815785150954417598643614152856767186132467069365605496210036171429712485182162940460120834349006784956522600679357307849981862006710239311750261522832996877712350330290831638640913932265004107623954913155144975252743257846945609734368518424172846119306643431","64649371728330695076928013661001819989330953381731372450140483779536126948957993261299287753791770622512248630224724990234903928056275080682537641377393210728546364176267034339221558641084730052304770498929958838997239635790469536857863963589118888238069738647239076/17903951498200212327802847425913723358452100686246224008745414214690047078122925247086521362329833307849817944645647750649290248110509395628305970523384831671737569872597295947593410067364379687588919135621621162007748635920864926867870502568935739725312687094047375","2454918942158003099688922026016393688092399295166304634317616773083386087532869193458590448918958337530406410803840837646465522656670050113548208618655070231274778592766244282964463702354872753657766121825196898916725498553882689210280080206627916046484942827487726300822318764058084323314109595329304407466188383616/674880185931325925966586583820010578979699141814417326552629206140252348822939845006845669570885271576698771404162512001549922909048916000017837898649100825976232784446638776021483802989797501705685620612986771521390439936066527738682396560462899753657942715306792783283782238662155922082005591512296007820682995125","74018558041066162916454010680594042518462756234254788158141115244349044958441521749277686851928706433556285971088455226217644009628399441967508838553345152310730562224910795446341601049647392069373970101491741830623078126344928804029524181578945586663110848142571149861/20204153620006780689923328634586091101021423979622170579036140596085566172775051595588438592742563923428900864000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","2127032036758045513335690185608563023954009095206088224487365541995326714285119384743928987635752931664240752323937321097955456543854943206092931247498833001499955456190701695430459583885125382086777607021670447795321669948733328973350279846928613949120929250312666393359442423066212311060931469017737106028339882830848/576612418511902928757340062840968526862381326698309578771238715462180282212422302261044980131594522407066369222998903808960617461164985318633518680304995784614308979881735537678182134128319596636920719106506829571072447362052319438091347699720147003209417806230149598345068078717948025207635448205253184540936478445125","35289653975561083576641954928762116897061274899517309102784750384002335187117263273488751066569234386120759866204372398611196356888479036949053282301027789530999737306501029700128744408015642211359442183943916106790666114870974212159410284751571905275610921784716184508440/9503006066880728386808143045924119024212377150217533250562188228062174064693375135306438120385877320162710918716613546077156389583384656340709638430674364232343609717735574035535102953482366914421205216675248471695111720986346092738728929878538430662191272737183832556131","102633551023964794485575491065909467125458972250222581133681080524371507544152979467328048718122409841060527545925136196267751819689935599599321090571687632103850847605493223603751038996548520557330016046032671961857623066292962260173840972332108111505971231021442896036760967107060309991355545554631003681544611731245475968/27459658121882266328752886605529964804078316737648012166874496015808620265471203512606463219297059547428855195782384236337998738233668399173746663289852416697917397644234441300570212555870401420579737973722145663287124151049692290432756231390864184491891697469874600345958989433125942336757049639797225309327019275689074625","10034393558388390065766795008210457368713365491566387292163814915435906649268119060550511145023450790393353937124495488860451123302412204483570913557762460385297770427946219119911920640306914453207097103853766023934602534502476962159682750262143380527529536498215384467975023/2667919902603322771586358077760621955455470781865624844984169443739075976572061827709528710108877015489050369589117491611045518221354793418884447632063538994046714401229510497599783726376490260140723032102883617341970952663947646017489439179953454964374887388652792446976000","248528145263843375390386172800048509380966183384567983242213959113927668429802237067505890436957693495616107089384741585283620097982859345081736730899912519273262934785992235852866637878831878448348444611412764161078458068549719800733237024285525816723480868704742804077255242682077291713092790250511567621735004237450946304/65676865669148624809340872151906045781446981664561196686217551358486802274698228825404698950974939545099727242259547145392352658637333562345477931951890984276718673618736565926663528625796412420753961231404680876558659735251469326707567479071881966875336951133475135427640218972722939427821842173216282390058040618896484375","7805448718805635696495809414501206964843262114470109146341305656318015059743127114324245035489577134938579856003956861881125856595981500593426840968087618241785931128978516340812066502964561231235073012672356530509663384739132686548934288703179479011016719045530855033205271548/2050525178024039744126592505352202216905491833360272553169520915020715464206141942151086176509423406413311520838568324134077402841030113427309725873344806030836314500267104070131451720947531994814710189000076651895520222646974590481497382830325485174899169093049299764813276375","3355325071293197839434119105039673324264765809771192815982246040415580387729382404624613875653005261578877047405365032178619450963731719777167015959920645055600439987161800547901539269321100559393048973255388860193948274255340335876890491746900991668165565729269698196233805991206691196045182214641935483083662356666996922240/876402579119117579582569839757462461050855174353108858954282915644790659429341853404829661899850841645529640454766173209897510988090318303454542547519850473808789222552969933222203420847859171250332350076509996295844203965564448154484566493395403967626596213792922784509892086361572955175655987334882030766001799867659814117","218871061991045868372866381545267589365410350294028138778572466235486397478028823720846191998825628156716190463263492304639890659254282445466806224943413446008645087186307985343574807361972238230520975439736199291019544576443791916302825193643774360055545186783819367378492631806297/56849560726416896431557940314760680962653658127458002233782028041537121216487790008085876994020812492987733987414743604239935223783349870516284048368761617736127892160849065895223288023531930411718807065209903593668117085505482007061969339237404945180379460053180570404846043136000","5008685108365226931582937964451700746853986170633433728409171904803795018146152804690759530990140552460596075588463394200510044617816085275660078502126507209302951286606953039953843685800941558212440519542602092919776366067720586295390886070120828199562643208637974347390938772070049344991272621102622931576339988103674070876518912/1293888539680354282541277646947380627241979967611883341823378331667976045287311988103163380651334828012840330710760757271860219584371109472132211215957402251594055009937397184768184517621978947384029376766290498101728971145633139541827544539988344772578184316843734267915665730981857376872622787627370859411909330227080697966353375","15388340113525711660227566446101909585796746979396093776960989868457211684028149502578116456785221720682202816140911944661051001675127262774824593420825587319436537346311831003212424497488485098543512314062112948777572038731823948224734505930748371522309451168088057190162878224801232/3954220582960831691377435160890656173654063611768428458807273708040518769541211737927975894584024448193835165167801976423275767590502552964407494549049777006346189436817215329891530811451811864579644894987864267389290848598289794977382504890216219362031324635609053075313568115234375","5099039333987561374222193551155323470675617979816941646196895589439391685938046865391119484510329634015275893520725135141878751153360264368353595348921951280561029028912953500944814771064409611917475818956659775131751121312316084465321917769679881052144364834485866477379437705913911371481828140817759401117780199246301705600020671104/1303503600297679371136943454060319958680553228879031326679449263682048703103464872914972900105569835004878963701599765030590097739639045890060548760692125546754294514068052902543220382104483822438283040090444827980927544440984823535260277595466339403795403200720622852069244768910603820007632395190204569927612348189089161551951106625","4902837141334073026145827027361937996261324349722726869116185158777439337041263482852376194988371853413467559557923410949898048139830183335197992754748294810838187068126867611615800383834975563313220497573778480109264178673389149671194149749735833378557143135481387904961537942569904075/1247045310545991266291285730016853118981099516935251861146038369985109288084420528171217942065832292739130145780833406014673689119563698528225048800794718789218267628507713621235056538202070171596177775095071513194885568843375526804796016261173388452184505503341132236719484809714335744","38114743522716832107917466438257616720476488812538316101658139632867788464381862291240727309611460187159930652186486096300862388591521625093237019662273764387591494074792574929490381910446287947994150655077877204446864004067956087975012773988833339521775463977233068498404144221045837190392670308437391686081418318624745039402145439223552/9647001083383999453668111809775451078976046488746916070976218645431946648087171586252172936600115032316383427265217993193444199863138429602138841976586190525451324093772097241349417938578878934577091671046050326087898259692917931230974174799815198493279413438192301437068820185757869608523761456160341754512329264442115351926967120404125","573695055225225727008803730767518906490704995929177617646275646884555707960986625481944101622708415415988844740028718027554452662358957933526173824325955904005404113684003841990198157072540659184995738719040024647370869010473254071681533880576462368600901824622431045529064651675640055917092/144509482511118816399089096021290587489594541280398871255876563615464628718527634679330291741479135415168539765887291789615790513527330600394937614433502341116068305347468133950204152174094704092402978083370792135432486240914953928188835819767755172666693219213868545854371103120604946200875","23876960329653589647925126180903391687666378233201794403339630995420215267415575142266707357255726330536094448314199602616026935251126469221925945960901748679919435908556550271504767784553484434363646489174587463466333864577705745452492395785557425904735048180164697040313528831173448025400634629163795223739061661461986923675833880378496/5986312408594306954013526197465608559068621248896320652512228238115589875514604632230098997609482248000888567135685167138762172475788060284232459813998201719590208742091697294562538265829954186149162974972471533202880368317237508987477069872431064075005305838801862900501819963793062041081601844759452202282545840716920793056488037109375","58168289917567723171226992383559866214094157894992327555495441698028867727845766488121900626912848698952863438654895252811583144479300382761129433911280049009362667380001406579175563745824368613319103673817094498117944856004415812877213722455299491145649879676787079744410765053845551958756701/14517067289347903655500020160671113450349743650636953726251191692074385521975132268313263723831804150872238173602847065423463131917373356798750100313145228608894881457107689499956903046984443545789053438946050974567665049237414588435796381674590098629779384355275820782532479708807512981504000","728621890568281859295409481422447012528302594365693410763821707074444799793690738137592101239862736313347273167450056625929591960610208335290882047413011571781161008296084630072829079783328937418641417642857196346026366370059522990813537731394823630207433267854616768658990289454635793326766697884798538576055949457122067828153655416688640/181030730759516991863708593747964787874073354051675597050399087612142539517308720603687322924426591889179726492403913356461908748733972707460063017057809060190437917851790767968877215795679844983288935075688219234885360839984681619084834228226744165610073685719017596630302462070188937998558312507638434329299017584329479516410907786681093","86855946923438322218622470067224691860808273886184997065663554841573982963995340977083049132518812923329423480393306918856650577072525633920456721265953575424233701929892019410099166322511413146891121248381648145391642571638857576890568882512129960291171866772665863159474602604647289052079991768/21485753507365901947528588896402264670781310878547726104482740647554738151100954835784115119035980523529677083504495839730499664052882400915208251594384038810917282207449860876251558307288700200910747338758723324686939379138206117634546981163355060740270734146780942696291669461182599512320099625","2158989152301022938148680102142188531448821359505188055264665167313418619665693092337665573150374231484840948447637297247277576415460889296724813940128955070240137590073233263168835678714131062764247434144994737610229909964847568491446606012581370840699582055341626266533733744293929658949697805855362114229666626620766245630122333733703618176/531794915405164005613733454597931482878479882704956110685223892325074211694837836221759995948610212818642789132749082430059593652854659130217225506942675608692701447738732031302987802196501895840510235161825501235133794449421919927396142470196961877376701957829921152848178076410141813926924749057304222282687697297216661687583257901415465125","139432548574396829074586704387656697097760057897628994548358619815052936481650396157428747411173567801047221928593253479330480454469358220685854351236980383914223693722868233819483137401339800304943891968050399345430243790898955416907228948287367356990263740207046902209563417267686591994743547621/34201151688775214071963206765436083445901621442002061707492082843232231754829227303539041286301398668437202547003300396162741375435703188500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","11008517174872833286150985180322584448162884832099344969609291070844193524816852920942383850580217443209402836100467940651581092350600329145627967515818684442171571156446321228596914355704205623857871497315955269266498229823278800717909321269179839084452384509142712677235552103459737790674103994445173074670347080506698168482564009465276165824768/2689223396936080856855299215659204161946704205931885125148201643087176556822542895325191478283706585400237901215485150928036895428721912118467760766508162631903585126377676412573187912443878232521444786090510891599171741773242011017926658231638022943018461086517502584854390836347781674626615709751386455292026775663545470794167629144456268750125","16108638074211260588800537540680707641986073914251424878121255234668558067988171568946079848860335948991834525552515669040163026131919804987340113244760738846884911038097907756220945883750502673899084880578229601870882631165510396775126850307838505063922101682333806284668762825609556049426829531780/3919363961344261777100658318137884299575193089462944554282218278496298610828757650104922583359642384253066896538203596057302203635134833545580869871333892935330950583664400555463557735723364497947986885146043017010159347046389604172186788902608216894094289769850517098027486468084407618748895626853","34420755849180279597302103726180110022640946692592540634353734157479505420320000324260530767186132260970572450489530034440214259559325114511265075416512316229177952140217732655405289808326341696986755141965043719344169685611217958619102774617224847284122901023774956887687026904767714958090256282893003000752947427857703259704682455375442735857024/8342030311716679826889917494957593165464748884572298173556257652389845294530325764837124998293398445804458613956489096007564811101361266196542129764287084823604897187311540561857741285793447174119667215803837719660675298308873496219385226998078648428368061868944322478384684509466965129972030932418920415308276430355882329457342937549162000252625","345888075261020004071220843714060353763382280664960929903544964118831237876694384053904571498830068831026644303797377762345709976595360421502594656308937649239978525713471393570536680412814805076323426256584504251728507416368609420882442293831684681071553766603478479006495757222912500012444787804577811/83505703731469734628961395063481893801938371516752417759131774530720075262459158384433785006689548434701904106312038822969658455364219435022841597243178757423598248565463985786213156556523685666430799283870548238467817226915680747412191245046634279766450629886904716776719219698922088211154187845632000","1061717830619177527082296723099890392273896386613997004874669053445943252046748251883532634529759169500795452576392700472771365240996842610207274128102329096619028487369622001737128463631016494371635687841733644339636164570819431573829173533941056258744442930643735587780907310433371453992062647737259587563398111688659657406089003293576961475848704/255359631537215747979895955806995352799574790340218399351168178555478073997876110889483456972687438702262017800167048243754141722496276537685853311434069991222324039005160057724073156957530106623908696241268268096879569794431919729620178375212905203484165745866913773304319069321426245521467122472046370356725530914587807274074293673038482666015625","274122944106300296738399632684955400761495830361663966466225652918683099779465438024846903286816813856490888796372134557295699980528187779624865098445756013563535339056233912394908544185885547842235097677765325396255649207317018754967666450708249125316192200151505568416495274671679500594656671785202496/65687592621976546250581560102201535533608158256953087745856906437400149205693427285162333502528793675585022025602144243543064185647792948495372442630333800126269123531636800213405254045262127593759539706750242430153456891792533267948231185296091297979933562727112487057234422009426868531651634706262125","7842680480716516803148821198697967237136721860017131244266974996267074742248599085253569637183007740566941125452215834642683053334607896723447140851344501084122965014242091312411884985569341166545074688756440728922408743841592658677792796881188604773469108807869960161395759837407978596679911066586626885830991556090978327508459276025943279064965688960/1872528612245648675720382138045071131304652050696842872529163720558126655075937845539792108048310219395746259570506175902206215101518698490144716531697689534559827422735649881381597761684154409796315455445459537515308174919488497154409643876490472215352056502193150125644288086294418253309947229151074464928874881827227706992859640236086417889990541889","5300824422251242070074569186825929119848111723012841627275830216301188228660779008353049603527567784119877706984722171178137272986345560485784907345500893648715341273841147320288851034078863843374665850852481747000237834238703248634174397792745914847774297223176674917912406659831206869442510948965571661/1261140476013707338477604677428573831791396352814802149994640617701773078174882455512668089072441176857892331468691160991310474734143842336092636848492066592397892638052212250229129355009939118431643425836944282456647571558383755315238500832868535816144280088644939696339160092963629012001958205063168000","2220223718762215584659309059880106334425515875615107369399767892051551634000614327272260081056973863669004224981561870246078120862256383581012183852291444462730018546753183156982897386563561418424093883164027305254176874653780425452987066512563140531367766900610414277825262239199580925879453806414860409441845631158680721091621460775043562065815179617536/526383206607841251253861841374779803798480623722760367843070466043030228662340154304405180907941079883976168609082254331465595267209149963786388600028701073430773581228212441424400748220833542964971495005714483235359479470452593264280645360131482713147116366500300066771223383007216182988263355451923333319170174755334598973202740108032097242475554128875","521891797109626296684891455959263713257353500867652268541535940159815152120871142196535233326890353914761242025931373491906127275561002910157909306979093246574207104081108188995072105948138299097848175016082947174156278439986705241571619793059501724269644447572323501261424770743329858038040685313621446524/123310256826873923765604825413207481739886340225713108649758575106598510022338480189649787216845041382860899099250547657534972156328080736149239332330143771138115695598493059325064119176038137294863053148618656356436332991079150723235214278848602671333076219529535123842212129829931654967367649078369140625","66086044538329677372986118727999622900471937619891337714357792768200341519193500393739322894033303245376225584865369486696276607060432449792893028061817203932068085863800494054274423512956136695211796751845295921015953538329385253280866669403169919614982155350899648626481405781514434761541281229159396787287553493046927448595964103589100429722948913403008/15562137339474350565671240515273666798063901504051979980452491653975250630723677279081058884163396938548780856293034775459223871281049026140999055923743471466471830572672766633086347312178711643724485955576579988182546105048041649947277672869613992334541438784737993706482731696809943027528882927942967419447250586964258807454003775693567366165507144866375","335377615394100148751647837967017467711612297170079949298328061159559939969228226474615711044891085626519877634842694983669611974807129333052471799687426665556738316626171408219730853872410792831871526174987402129691897433888027072807302411474690613948951673562473758814664346259109886876538510453475290967835/78715592752271462306588358880337347638000605031000575876214116610339827495261512281635361568951675037834544811575026718101166562072917855004822606752296233435017284127594847656529606648345533195437635894948829857913798336356647286032372695130461573940500785137424365840081503133157308796505622439791698116608","20090879701618729602554170716780970848925039917987945471322994867171660307998603515745066411687983450400412739285577269751603921163835619296822801840348319742203974023505186187060251544248644338412667631232247108675504629538319425769464277309915502144443973397371136256151336255138506001292355330875114245901820438821732843540725116728866301271466614762497024/4700223519410528857298732096729483544820841497820611795617923063440946097326817340637303431283005509904481323205480729806879570430868897342398783028649633951362398196137429076844504529051072393709154483678349272930361110568616112723747726853614661953537957117231900032044221535502745676310313569997665352252492568100075191900969170979460298189170486601502625","2904778979985524171206573028445379872240558084236464200857594814631031581387804621371822074061289363372523364167184697785570324832815972970658633551879143187709707164796663015180877412717910872234647704536817108676736661804878068078543241390828229923424191204586313620612539678930999769543756218765870513049986792/677408099044823641581658869221044375312077929976719183424865834811543737800956896926637625166844372424044003929341361734886232742770909683021563822987505236295727478159938135467975522336774471915167606673489722102077041330652185811196423400701795791669780695158730756241178262962515917389382302757366325768069625","31270155809329751863885224732454397292230969002004953832354065319735530624996254695453061851449600345977646455072512400760539747054003851289540339425848681804190284451253462663731135337775088379954403740058084949675460445909826322297817535400604180338201322667139062500269285493417563095365899631360901732684124930296643108551710704785906431324876072470231424/7269578038000504017073007978844992319987411732848567116655821196644382777088703228960020894756722675887473977480537577509061256138261063926845643360849217556370868752909531088361229374467207196928745673402380473721018157327193509586295879051411183657185176812738231456253321187419224704301236205478184115996135940848503487199394612616742961108684539794921875","432538822079707760382094121020421735679118830363764570640789368235407853152380328891350816400541189148550353337874309885334920995713154225799660601389784410911658967499100610376065640785585342035058364676314084595283850213942576431310823836792440218271879354669291052589804956435743500204185107215929849054782893113/100246574739326291035824954677502591279343311051719151327066341370995390423713403739043396503785261917771859220535505691760472395306543276314938287868734009582906895763073519374099272340577921671298878837400921045252035507925021904954445172372479744465666760762909731237634082051855588025732494461939980856983552000","1914333673689206389116942789116917579088664511118582610293383428712902211612554212779880638065888518488492298586641997844141510832940409501694726851666478650414191249534733087933879981733561565249818572204932715347752949087800778646065986244657260832234479202201129845117955957242616947361016603702640821256099895469088229339240402478576285854783063612307200/442333801076281757298117784528962837115323835962460661601905131618341609371649347131724700192551574625400701487125984359494804828935577124602622582550626336986871791407398609915208114339012374456785705161994343348351473385887949809051796407340988735853810174589261300681030826392672282630613354461927208579993042968520650313621522933214063366558703422757071","5704691626402072213006354545292364761246893919997531024861408248746241619817955824682639582830486790618668221530365426203424888737658778881721063941495350237419723855000515747725926735319471480027293210991869255971365522170749568996651406002311020883635577590045650037569906001924971041810547543163363976464780729932/1314240362076792592671773873754757443276256223533339004339330559325754574023619698171225777585408160438834449576526997055649849875516310105297894855264038450585295422343454458568152668980131977005808840141079502436391909349182185596381509091427752151860204235071122788499996991078935216686010888734471173124487937875","451219364084386208718456142329444023337343409261545444643031014769484085278440612677813682892926852469540118625738238137458321112005189595703619178533263706811689687213128887082197330137502064260105387500552856851972124172206996205919556553246133218441769325133725631665593372188755090094541462474970525820334385058333756591222492801647110594428922046641945259392/103648250172203340865458115839764297558925693061798169434516001775068769911768281084188883278842546791612199025413573394167639925287068809631958006622842716869211374513136766899877504136929177267362862319748507372147243911522667591375015611312165464514308451222180272935398828092646393830572838772085366567154646425598388620105539619174837489536378605144891769625","1591076564577634575701791393842535460875733974464805197283632670013516183281542903377750304419996681222758401497321278555686661981435637461350320471258386388843198706277657208526372100698700615835733712519332548607115875288787602084336341594576426630670911478276101702119972195558314357975365863803265163991961173/364433108410193393847203348728981296285742202617988970384277162225847256295865554341611171460436362780497179090329831885853324392923449579538286804729856000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","5307507148709435807261229345132535134848030343901300324623409721698217134932866488937772986386501538026693956121121771089740095760486362654754229904633476234090792827930433598453200536551779789049352131005222659995845427680686677324963223653949277037520711609343166926627713758990384011274777087968799793410506391884872456420041494598273703914689586637995139580794368/1212244290381524115082005575105703496583315188540177702780216570265159923654197746388568151706509243638302707511238539845531608313334248788980188054651601536067740709977678222790481348003085034888244447626347312094586389347535167903408519024105748523384932942441843118813819781347089702286481924493361058339731949844620763272778960860509570622673048786968660129650125","3046577098843580578619955603029073328361298436129791931304665777036152915858575282362742008136721284817899542475666054101957899858138590963789072530710775790433466847100422875906866496318804986202089528198912098377828580031852152997907433335176267300286466072997014023120087988748396598176622765923059385876855303940720/693911859077752895978833241338902695755528613729508555938416419864772385336777924892434701804078893822446727762077537955240605927550548046309823051841326355655848406646248595628715185413852040295631448250459076043816328082561248420925930431777502622148019371383254316636979070731427737764160145097293260938978413488819","155310926743873343426312607182060072939030765297630534544899230213054714482456829198485999782086944271490229412707980997432528653509945301574794242118433868747172279224118534460563400440670015323324602117517342201640016853927923976796453577048995243600967202462466681112804476672348206491490513419336308575442086511015101999847896197546900512764233674747415844045184/35278162986589659300679088538176070649273991865663041616088851923111175518405117391134863644540911005782372831496121355954470744169969774540892096320978686548284501139861783292226140413769665461494668479430833892857992401391262903582109993838728281915806394747833588629467613308837196269424421131934859079260185052081536487462257809987002198437182539441349474426375","46729591025621874782758519074451728476386657576036360734358719976400940301493939192083339293779149127132651616972817165172116269307276487158069293114860391502484125554406945249728802484128756924044633825692779783425628292959170597009935305429239702926898931975023598456207165067568919757902764815108751735753431153581849/10585868084079030838651390738371141142245086465033459640458366146849314274285871375459898014414833295804139979016362796357043372316321872357817727821559232353993714062535883074661734509440994664726425399880995133711038483607773782532430879196405793694658185175583691180757783597895616920432527125993118171361116684288000","3736372348124144720852190769710129461145889011598636925228657393934132828633132357232883470466940330848177425542748100211498184494252714616379450272611850068867816250209867530921278645286769418080018709947826876461419654782341309127709703626401211996255743831998918894661053669189312375159058718767082163156988766821194002596331826150321864927832618126580509732359424/844176851007504003627016945212023239308348428094023437269532743221937069345682900884618378849283002998220513307273333096775669556093005637615012750733216460458689282791632437851364674879152695438589692227159038555722539345972833161146108367329370564838671791241431125003401861887477969954740544092178721327724620450947646209914621007186497081420384347438812255859375","1258774755828991281578968023382624723772927642002016270484090409043454336040857926581316994594109169123354553321469500848146015719851609220423736153365139804086413284787598253618361769125996755159571523632747129480387254164008968993734442164892486441152227433281625391753702577143985047832519062595123255569172968685060844/283659859661671181526547833415653453506477950678651675193210969173130116121017723360258249430884213011988678011357458727603413521688184521573094783291496368005697481333739504490647194454695504722542014845706216224432373442438242355188461951883454664693262684873988061018976711201351382163527093784753398257094429403691625","84932063355292829988908961192574710493098897148701473172754949846455626381329456661808566365329266898990829247446356970454502007127269708487563279536825277374133681167235811080298134899629580318813382668399644553111080625918213250223197440426147821225593304993621451053135332451997633132772608233430131400186571793929377129211228689703376067763625568623535588709576320/19089978133324852910950469658566458037096027722326716800113107848115231563787455584278193954518442601810776347091253561956877155673550458955562102935555510392954425196165785410319126098393353878286400877305164869548380670204577544630353859009177051698096136470072137579698473017257397949994722015089768745013713383769765609613514021200888647472804720456494757423299627","802638881530832431828249604040579750916118423833791608589560402449036920165704012070349537114920882938466635598602387718300074733476150548724726460209016834416094317724261857969955414000155807312852092720310159572547644569797512233899495300028159721348599816083166712365215075728968005941610056018023633235372936903015771583/179951197386119079732438617407921535065140503043429174394605652913879982486051627760652197484142547447000508189455126493868229565647284332735552462525598465192073558793335913005459266977086104359621022691931002488052727597513413492393525660272900161375677499228252863529934576881596384036401784035248649026076581302370304000","25208742399375362881099811032135575360109715964024747212026245529087599633280142314962581193303683759605084995818253124445773115574470717199218828756449187055537877478033129862600982068782249943150019637186466260707552416433010545437321814115233841687700051830170191107127799355485920046505591193770164750886037885397478191534797655616745528343172318318678405576430544896/5637713398995569614196397857525646325234056219513202928587580534159596897880731043336790273040813044077153051260989730372846713618900145444802234629922717464041261370803598799826604841654608724727320798324006129524610666235998113655193642594744544226880944882342204407750193512869672849910003246504052298022468012594459974209940607450480609190841893267203392880360823875","732332637178584560220688900268566130246820235956768724845747830959547501950765063982943061181526237061809052444110437930100210105274824607344902764184151030827266142225894655531497849161692760385938786736436977268616029862577293984376170905024712952813234949508186306774257035535805330366742322777611063402455261391021097128/163377988152179636922409938163005948596822656868040662831003991395905185823836089887990201522673196719628247106777881741843786365701135555917263285268753605514812568258179391272113405920369587922702002732667842511108732068683407168090725712401954314293193572654347237716691784386690948494003094992876867763698101043701171875","22391374854299462107923583267570593886002658786775211597896252879708753450794332301142909715845151746786016535157797023153041007263258732991465037648536702217273897876864351559736449481285518249846264600935543582562018874574655740660800634883403597181876364712521253650744197321080655028374602772696770227741610874399454362583980465225235674816785988164157351243193265401728/4983275997188967758382167867656806681565521964135131710678447245984239733544941881418957694612909599261843693554043504855207170782744518943778096768859337980470219783210191765678908537645270392500777411134164918803949155037581108678968701961544979451081836872425574123683574475790997414488641534074873248802450108535183413970057319247033379016606809226547805269752123746375","21252344995592269775107236774689012760750850598567799560343535731251766780016530978663079386453430272698006977668063208502408607227544322945446079708000304179073184745623740466334127867464883762843346619853325415963062181018736410570113171387891518398846617197097407612852037905687899800932343156979591740310928257766081697645/4718515378484509142377558412184183991357747235892194234377932213613746008373918923611236346330189287336493794499188640380975364991548794341177060325509698404571318037298112293926833877103554546466055612498927474225619680186119313129604319096374924037870803554153458104225741255753314955115645304948564151765516183663634546688","76703085666560609319365659209445044957052359500745196718269665234646121134787807938680787341023203786904308047981099228357850016602203539979246579454229078497537148799349353250167621935384193502383187510928609818011142642954550330069991570983902841318203794113898871515702445720207144863877026526025447819537396146822201819435536435835285098485990260677737192230985069824/16989892821104122916312992616665764943723222199277412857053896319814438961475117951904867066845412639236790762432996309717924037467863024360211163971190006272168845197000304328480920483651558672879967350982199768255256753110375467976246339260326422891913564151453729285191351273342206198366624882195135056176502724912849575385576554208844814085228696838834665339811027625","40153831166521391225489894857551838468150576827129133168972859441122728710165233865309084872159583787083130713473702296122465319276461991457173085312407612757280915853584698420083436946976844240063731333638150599017886937783470942007376523947840104246927580254612991191040951001539641947153847776050138532219595746056076776809812/8873576113581065493273519627544307418139908640325227196912114520903505426722086265723900326735989771660987609604507503750212298754414472822477243293638486047313990878348820573874809636084574108909615044524663712495422565151340037564156235745628465172219286664653343193162657374410926171153516871765680561505768223660055617934625","200736374277835272485186523480177159453030082779872429648449412313247640312479214261681899286513818912991945046297334418102711629933437654377760028476767482162031641781499114859553677502002901248124750539270235098492377826240319766677856465093871367817683734079621359186477306173620331748496369122143019303740252461824523590096923561928354020960176605008889579578495073283712/44259440065125442964014453739391594153290923937737136823355312892557975399035370631521014554980129291582486968083228888083079118116286312583989433037097397252506140224404130371160608365777625538148303917306340620019882928744151294738308047800711028158277500317134537540772759486365658024194428796846364486187105343266398338060080611643110071184992193593643605709075927734375","488459049325494693259159444507437983381645757291858092983371672334043029615965882574409808932509285079401239403272414271652617474184321852388397021836909585659327974611273820676128650810907598106588433939541654215766888212287311943387232664417347883717203611092450971786083806323404432266197250919880225892099146722474124874256523/107455855466267410923480140898552598306699341366032095904938430084768624148829473848763761936703072253841751966906142283640379336131083461646777390874405323298406517250231389493084918065243079819898691146841695350589992171102939046740169198394671965069747042621265775948217054519855346617967866614303497258042439052681849864192000","8430374068596413768975326329313648683222744787097373111477788794692418932056901235174019333392845529821722488982447683794746518712070635063397464904489452840169472596494433874412726723065560358405027764015273789053064830528919091414531400589850704395887250756457780868677553068164933299802944396576360356896758745030955907258232257358056931680617626606715393885378887657377280/1850480358582748412767893656294669486390769246349349706200869446679212812264400876685764762211659843658541567071977813110496329850010288179702589501255367345935389050373021591572539260951149696801665953123597521983257852207280970577287472932167362521740230973547070264273850381896786822127290397075758780174083415923482640313277341120938690594859118603017930500014640169211239","58273615882491925540881784328370957720539797010816130007322211512070634295154626813477498607761260613353633996451797686143131893884559909668805628269959901044961666535533876340116728982072626875010391195372759135469446048394835148654407846242721443845351855234347422256700864370273092971804207514736924787577569355949601385705517152/12763172138328432984573837529764902730448666594097466544652830703737195804747682450548488162227364538052585484418491914323658215406327363805353540266048943197822838925184942600367647278764952826664684839953902567694832690683467635727409976388280092262839126779730168889686628630302519063225007497707028600865624133968363921915016625","2685278694947152969468407055109959900160804835228466214479525891103128459065131221736713585038130737099067040196326815283171857977706979990467444622550497565521863441617001097354649972660183038850033950647594754644997436624623325003537308428828750008305464174443210079059253920383411910911594636045517662796811001285984447671371943267419151220518726940455756833040934506414133888/586864816044968996825907488721678304211296267371936463272955488077666796280028127333229453342355554450708284934221461946991556216095213627059047984199091625921432110913096253352065238765240063555347292393427726758010888546427415276046238297382474708612526770055488323003698641493939145624184943388159614111350839555141202024991876221874110644879676602924730506882384603409121625","27700345710264347957758638741952394530538598225904772664391173119594616680996031886665218221392453628824570256438960349220263575741495285780845399187013582169907518462437966962923592601721119258663490655013419675469864809004562272799012227293974254329929404036071055528766397079743200179924243479370594973626764330855493789112414191/6040997839051213541001279276287478343874107660287651711609067205111574718442229224212245187655300348484144001298428958025052162253854676210451657425437588244676589965820312500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","80160269787574270953020489212619791839643207793889009503234879683494928396231769167082355143564723274576166638869430572977442020236299319718643894871736539109822173538266278165276591962215927816541165548699380129014840956895931285215480350321259054359835472320394089646764361802445068798451796525897304221529850133401768027469126408090577121172238802281079916258951770135485696/17444957084936455555074876721808241311651668802091828589911310253709517226715880722948267977560381436307152342821304525073651379763144281678911047276389231713860392794975453518107055568765009486973017341479560154792340888780337029481646046233967923289468141293699236815196553819373828280398488966665994092877680860643266914861837639322607761804740256920429518434353839878280875","2352816897072623416220002134476921108405735955266703519252095150412419264317091785317803024028565851487861978477208755211589867803009700996828082850796103789009194767813611798769297617674631277847910238088040257037678126316866517601388289837575778165301828137259948173292658462765645645868094197736382683775415645307647043205988394700/510973411316690313485681833991645423802776865720580280058344111363363091616558230182669376841383375321912553771027107891991318313938505988903735114191313214327683449514676737796942389784957658395806951715454372568523597420866050825822028817422805046287798054682484158011143949412956697442991898914560191411624040490122951328364833797","6403295584873165688372907494046202150046769667837790834896334486679541887567517050446119511695248926941383207478170182650927368177009669717288184903306689332746127845953193587519575304974203099873732502605739219028995266139383163062837007982999189114810534856227848568800302527760100163350814120545587074865568436789021082619398126713943637898657861949091545516403987546145915409024/1387794272010111535893205703999712437783041553900341112488641528986385462810448493444968969845352401058333929711237978223214186693177251566069419805757440174840170213159651962686467523533938145629444468366235554597245713128812532716616087753947246800626006504878203666972651384731498770435755225220796872155249202960801768048854869001310722927230237083418017482134588865244642658875","82993247683514419570466529457059660634483860665557779709153549045427987672829778520201315148149878525274005978368939092115193636113741972236218502664881450367443614971109677363668874484696543982239492409231870942414193419634675024621942196087473557914167832058111113476295926250739099284241826553737074679953551191767148712684157318697/17950946423927357725787689855263532224005643859095168852729513034456208872420513601894508438640531171097082516559962755244698695622824386001219435651555513795509616906355363573638916895074349491513539093024980575852693293474288638209680085037286354050958859425647536735341886663074581909148323105020337857959651624760873736590065664000","584891611376763781852144397260140844977346305541197362434227194779766612939978629636198589818106137319267243431810481928639442343946346034433828599323416877248326356345631611148749005937144684862502198147087702668524450709118588741606955966569427636630159793409544653944608958808602551061186799401212712216156799273254257486955348236914237644151956226336750212957092204830385441792/126256710861549838395499078249922986417488985866522660521294610280820007499099176190820291214370699289977888813109514854178180265382471972583921477022411657285850911270389720508719377071949050253246021921916685716353393018411683757067093259101151481189635423399611625009617884983318141463140199839724797412514785751549277231259345923662499623640886881048572831787168979644775390625","4743054867460856425399742072925732465660626340183690464743217147109403130730445842673866624947360862438925194786600531200056131309608642363389833474026007798643235346104937733349791667694862514383520689594596660275306247615314272223660862212527346572811422915223417783887717426641317921972456913534338708745549252254865615725859881457906376/1021840037832289788284691535543138164288462770384961802287250236519983887262771944174557087207566030730743075334169628971336358708580124427857321953981475719503574867471090607795242192417162791762511940848493176847925838738242153177311649130718886794249673254183907621449520415060660496225939963471753122766421338241291756892571824984344625","3784664074155769467702999785016514468281913375341134899878893061325465790589101335015569840325786070795267055386681356241209412947116340524588831510768864231937929260236754881829005065056310226407358204278658699999612596866156294195316867934035877283950841910726224355461522065773816109849107487214275801829843762482082803559183694631856772777313673086715631547326400170962722842240/813783281473223559981291694175087508812520505931454895884442580280342455516154674683217348039336712901850738745276445107477919518905155156380620466135946654952837573797479076027688866326359448543065305071605591497778941561986579230698384305536224430794233462949056326864499827444363206162251104552740175503996670997705423888382328014210171324376593090187604268086334796245552762333","1946671258536842642381655747294621776070051525209940130115769153666368932042152311477746728678182920842238801763565726086459485050237860693394471644023999467670017470376746609892484192072297938254898880354014176373253875722410186683852253828299669530022166361304397631667133689128358365296701757782382475692465977794960109690362462330857/417774039698408581013003883929127512062321623871486379101498968145670269174833505080260389860863417408848209525427705249526516766731427603641806256289098209429110794311660844125377702016056984573671024035213045475132134896835814746425864304907974005950155657789157496389234919107772201305672421982198984613601511388413381215220924416000","328578487723377153600821813410631465225159589727320893988991729306688663770697528156625398176929288628930496338036815910669579019719633124832162035588583242320537435554101841406566009219059042888412893352417446437227440076869427577701706713564212185163005644118869496869980925214424591264870388237079776503547314587137721633918824664946974571838634860386893404364499977966899068777016064/70382695927096628347637455030970644630942872888311870124896575877585692281624151103204551947776906510366521972834357031777287506848887607457751667816514216907338309372900327919413372044625602555866294337672022362865161523684052940126509854895320132828009551012639156341878073682501185688461720664801829933689280752623773789373199210473995823367199793407048741191786377993390965297664875","2617201476921368517857942326432090876874414269689140439151907982631768946799200744678055980827789859579196832718849393046147656447672531861353456343821196812881882023188898815179947651274131166835133965629115749368441605680383605331300030886676081418867305170012032824011912531673468215561506423833911621270680104083533917562622600478548/559567121085534865189976875600841717161617153776904752351231210970240323460800785728739412474960421770806162360125774000625035522428160837855944215417821324758873127567654244465281354654299068546570789547691342609793050301258532586131013585959164719533123826201937801986942606844854123769532447570107525081084531848318874835968017578125","636225736038986537559880265988431731529837451289737542395494683393492040808565905376235074534207026537145408562785279823547657299565440309510931336394031904920056464959974743525662459433889398003683078967642651812081450227654478095420306880762753401111260630654049389197602389949892636943971690212484981672010398108426002137114819838399222096538921225458913266993881960732663394566024064/135776510176793971074115131648637508758953050390591773574951317807919051619690313331192027871176160424663811116849856489187562728496099757910540362703888937768555824513740118941387831822900198029266206334350448626733139136083404404120210893986654422850183837974770675600952078956326317698998103770833069712616832650406225828969036781514645731022616236082175582937900731419575337473384125","266695771933124633677367149389643417608461366874310588884377151539325854547826373711099517873721616543570605935954334944030816383858485296542260152894035979141266909050267414072982042090341712035518685997484257326212454742816979806460287972757626105526907510197321350895873473656215941034605746494172316089636216915825022339855304925515685/56811706665210352283362623728191218698295056176625217939528332247537278605113496147630185544004654583441448319260578659922931798845493756189402805173037491645434052737405379674607517658118427614090338938517963215812444779184193933749520313676564187507594274551791388039139409235056119788261689087831209441779870873305232021728002651979776","3511806683161697708497547617957719390189982761002154386881580160856792742952365159764830433511949678304281539875366378131195670004345568047690216126001067194904446295336734931691743477531830892015690816210752795806120303198745685394015161323982229908105397857791180342330098240702332072396030780386362735967021055250450666535422528637737695053315137238368787607412459874094164027214953984/746741569878639983491390741637813989978804202898438708743258000150996080386381281307609038830698579358879333079215327202911977568726258527646560497079622703052765164031089590965199628534477381843079892123440214378949632707668935001371616475282883095939750704292616758568964786737752325652839226013335092148777788733453702438432279149298482004122593243860829060557386699231448957232420125","499543951252504651717279461487337168721376180441322735807713499521878076780205427598086756686061009718016175215146305489885835839673419698751530207404115002383180054704927695269921072232395828258826213554806570423602966743337801741633869267620843626804016742412046844770601322513184123515405692795346790813502805238635003099976693786012816/106032986203682550514602969462803214831559442358811656484036951559991322084935692953211120289352600484987931812632505499612220494311324679562152078883141464406938524087376964935494245010636163705698220308243980789514815579319533341929989455211613890905485981353837321342730307819060825125980500975023479813757024395422041501208805339176375","8540849722242122835873311629952985285477986765819584558233324868363310302206006773828897816547299245727087876984857726652932481899766510637403577175623031467933486823994040576431755172220921921877192006685053572215922347418846423419683723609799729359551828522978186208983138345476801247634773975311405913274552616037005854836040162212761099347518242200807692224460514057530656658616850816/1809694575992816440924165741094996511361288430727981159314194000585536832192004274726651828760263522962868944612215633976203596150606503849595633388319338251977160257979846235995654357082321611719654136058257458753105122024859078420173515189641515736029725847315662215778251370398007468665986604529263071981040014321717598469319370651877296085250322599247141397427185438573360443115234375","51377057693118720457387330519321684810411289582445982078756989158447711080414032055843805733348558621949380554029375294451303430269197115810494758213980833379214402452992657502777067850631862453239349835215260705131864911194740832694498014048717871429797341104227759557199716944554347879767916801106279081864127192611546757627038037780244683/10867246748205139797826516105458406878398263495890048637741584969144406206902037615496936724683237700974333817527350121106320991054058406504571347680049945745432432384570515723033245430148177097144850158758462968940525568041926860856763884474605057056550146491001458649244094211354153171337463406192651150028767064600270112838159624568832000","2517199821548153657910904242290029026229621935918771922146425373057248090467388430999870036608278542449661971830076845113363443421757278612394167195431759807908413353743377586893872930828548256216510734912027450642648789925142482023713336937258932978503310551945630359646777080073329099268529064437120002567758664419443374110941824106727218341795100740316967386497091058915066147604481280/531524260324016969370728057738851340792702640911631807178654723224511108065633433027773388768889035083734041289308124943130099580765995149865288328550751289346866467755881013217287175392101334538392596956248952430438673292186779006015549928829953979591250274457658042926539541422697852390294886719770034058916886894408015624288115732154492554105512936468520265305162358665491880968652687","937159485027553069020805864547349554547661693803137696125140510201297417077233061462068930061915381468160677500445535971818609631674361074587732183297775728389124966713749450996643183965795829780345678634356741756033039293590264355732129789110416943789326482663579413229893878422643110852069225671783017610387570935863228248464396615988222968188/197552642195166614912991396771845374656891854357948006221100585931656016640982345159207601253599235265353060942313995345483862152489766993442419668492877390774016299878943454249209917002169480134131612530977452579520564400124908392339263545911443803619972765231094502745980083350567509014991735227390978850048088378721210219321877150756855372125","5119346675109082499980756672052066247676641510661024682574296075659671743397880591881419516307292610449161239233139088348510165442597278965718490070997173182184417648987611422446347235659085092530927312760229499083348217392125906851921500360553758600756698605047197529446594606336369425040236883171542367713951500007600355406492128741649090501989105696576697387613035366083536629358444229248/1077349190930018641197987339365056771667455373500846354778079878558146320193384166982231171317419356136237346389570422332278447217033773023556383420372685049620361481309067017697564760747047839930422553324681218253359586320952896352245366885171583221864112040038531116947187482413031483309534553461613717398523132176948321964066833901215878133594739833910960843185464241840039390204295097875","58469980853327028628854378052548435225264353747414624620847476036979290604604988637469977624105451959796142112200285366199247075503424204044884512269071061176877225315884188402954249683107639777479663275428465242905314418930053869461904934138752031124685541853599407727446896558064252696813370692668496452783003306386669962110734257851955001481/12284458784412533668960387046583440199646081362484321078872891438551639470826582933879934711861551014258493898870867541349962531447724393381011633785884743889445407749238183080941846528000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","632694338036291086868292541736272151517212971647680989553388199374739841494700315711180961760384484042159533979873604395621016272772109619401112452105475906812313548587880899058905419220497456502543971131226430775692744506047039958551641270070996110661036371362526401525207493270590999387476275629412687473362310414634469788979236895300129227082421021999210841384596617452097273320509348159488/132710874087075221626157136110978536488168313127228703025408943153782802265472978945703742152954881438058373686972477195846162708986982742647038014147903817539418442869011995988024638278746664230046452545499722614320284478925059527086663455478374200352375121910000967044366831275681254530914306064535110528723482282501358749001657608122307686482720926189537227492041135055090784059994118192625","2022422468242151190347511883185841333968390991430363660248687284021524206079162212007263606819387821055183192871951076644707111802972354128011904720586729919826758651167984507804867954970064938022106484656560866447290934136610214175516487579122328055482392137619829739560923807880779865442016530712986750711199998190148885726144596663143651240/423528009127070458603837580844559347493775236970253513203186912091140251858605354218715508091394564000304400858761758838182654201653901408046974668599216804223721114331085507752600832390227068985693006017591304916519540245902645712532993889000048992026931475754508248265356181099817467608863068068953756055334213584649136541490530849577363647","150542201776735231618709653388506394887777837646651406023174643241783006776019388336318216053045300417086929061565868663031237502137150880313922488106751241006715449458736723129545400133450376339156062387859536289694727635468338235084533552501618659272047966040838509286942825414463511175531001410923014751124732748099355476332649458471135027773371541572374016038525336728276024676601778299264/31475618522527975728853391146702172347290819252268551219771201846701658848754300838383637247014705706066050673096278897933831272607774110183488615338021656923433335661890414740664480671162459271850877855521869741833030384682549648626038314686632195158507693321505500888988183270276134667071014075017317692121986144742473139078857816578133693776368882596780120407949076129685719314703426278875","162664351499283182546788129866259011542529017155637405328005084357078048074065548349602626724265307733005745244338982661090506394708170105916177679714664432754153795772811389612700051002336719842784098507498286260450939289109123759859710248621544296008356071415713931721102824434964336667980062728653562369697289761913925215639430496443820411811651/33956433298509232632327667206936379248172049619640091186698677954874297837764235300806836350019565970550533206216590639008637925266405524715041372407701947953283803854153876844320283735281209725651036513491246238622967031979233265136280687995181375582844780830517825595245506321879177965868747546127685256867456319112247572348416655367667187712000","27228583713734183629451808889147559240254570554044667607519238865891084165382075658707675405673276615039702916443152954157535195508033284355580742761569101934821088036084480297442018005972653124248838420021440899368869744141698556359295489470499243402799483082406238128875386939389123336303631993557844565927960009744780823166462314116039469622216263221278402673028225214534859076857413557466368/5675134787340359276387085910732530678163604187009567576895331134521132071092293139167824957253050637085885426100206370974479279292804959049999647539684766632278449357893560561608633329561385765035738071726214510832066885156767060324427330401967034889966727638276371320401053302413136551142103678412692111973028587922399670456670380189570979581674699102934733563330382821732200682163238525390625","1340937726818688387636018677960518622106989311577445614347061615417831160296369500704524022869612973331444242000788110133157689786976834913297544087249593601420972111789552905846168933014570399562460789075871112224533723259660967481288525220689577290386781169316008987012566216235876842757183233207943071523447855623001920854571597886491163165150556/279054368814522483241446594911968519760869180429079780837994812436395792594449929617293503975169489945136244602350941695478861584261665582123038340824700224583170270427163469762789603657025958695551448477050958557681299495041994050951692916032501884523150972841782658389836059236040091605838583126400660344344601879969354053137568588338096589095875","8910951660339249479517731530773509037034977353457185453617569046885132434552771722727442649095007828468878374139001808825741829728375370140505088133244952288239619141544661695065318568074863317054989982620944602245967155400712702259180443238473885690297281525960618905625084639870407113029712510345262279507055197024677292523214467306898573956604928730377318210588837126450942086527893437954864000/1851573255256476362977604759655284263358595254392797078730401113550522214182030016660458780180636930591149034499142464357511158868625309442843792189394292787657774627425816694628839987456477799348874853555586931850788645677998004186437300173080088839930384424797706381282430208961565555953254145002318893188197561315855286173276564036402546798318351229978103276843822345004757661005876638005274037","84997663352987536417038496128111159210386455419431137931308301989414462311135708114322046234708053448098538629166672456703651524480738219822858469100454933583774404032968304328859365484249897913676382909050450855222567147661842184538302991526635974158862033287154321908483007506326807469239745851379559259262425675035790574846229470041596801343087041/17634687575122715507915388096857069366146981156897230620371714518707518105157483283253374797127075689236298114335734874553183291806268149747826050838089931351158483980735336772879045027213982661634865556129548356487722537193914986994283729746578044621115589195066212043187229606921062007047940293972381121200723292297716621231320254309060321476608000","1648849257486312935416274009474520589799750757877252390543329851029437452988499485179026845292068377957697884739052491455807688429630524210823560524122596610276957537756142278585091315141096146341773982302888007751632401090642472506538817998043326415693840862261701364114923327286462650797963969289743571514890723145251583881752876340628073395708716735192690808352188867334842743895738955762067968/341580411902962140529547622267381834425264893226447658723654120920549166416114849731588552578626041597847002946105459812230979900480135423787717825697955152193526724029890829615845314765605770060975538542976523177976182401820926854406945392167140347444433885786340415437006775075196031433365827874254477351374236932624514469241634422312990555534789607377023339236417434574755566856489013828206625","4899626659231633406569362199187192352933567344960498139854460545644210119722856870634652562532083546344965166340063297647520613455037240144734014575196764021102614748218834054157165781057405100578668000290493431869797883155764963238760612333048336953434663867580862692267574574465371615023999531030446250351305046572267686566999209229202587258144318592/1013522377571209303732207048597964555261512342860326827024786500686692475697570284120359840724596444209277948648863014479460188496587721578075151793081823795161404110811480269106846359964436993190293615381593756076515012514100289406862487971220020752628653845345780766244842386136740768474703009091552043945843632199999007070800871588289737701416015625","362903847358088423032098939589019598036593525722040887883164115981767777873860799955715587436566233010543937498922435963385091400670303956612881974450548904906949032005878241638546734597308786514086678561900713741746905742866635779432216761799371793260025549698865319760786921444505323758235164807966277024031605673481480590193724980659448692487108892154809490199414370023696404259691299614147712/74959603173756091922435708504751461448318819548943586676159545028063979695880930926805574951275602951047845904770828900645717477098988124553474616764040938121171776556999069351772286262529729056288451037717198273521810585868307402693261479298923209587143468206907278220909447483738730657438961435587752873879244136801168836767273934997417156543866722171766794171623224855358640156858606843576125","8521348154958613550574095745596657249924328336262127244827955886474742319277424381360677655239017583606851483318951440691757875270001283229585075137091617073509041644097526047127618954293881264113694362598157456878784814696577083997902588926421675843291157049153701100218784481406086810264243143337016042301806376864424632290226377881206765051896745/1757584673254145109614914862134217345456065873908262753169404848658913774363650863904627183104777337461445063704655164325930891269843669860409763569362863600932267319335889540453302785099532688264425988677082044905948179153286276609910158854349711054144968131934713419772852663860893241364433872853338630216232313607969790083448433666334742108176384","1802461420562646993856730082999823508145602238125054717836501201545920604020389361370931345491160549787411668288359013059160331370751496329806488246135100776263777863399096485894306306621852596694700845918608199329091852956315870664531614358379176680326508877329862713333336188556181470928613423972314983964578645688876556351433429494008513812136152576866650152623510296911708111085518974142728903424/371238439252064016214448115231139360835481920731625321084601566992497057371416121407293286027832357816257507287295719261141426130159269433199862002841433235955835172774430690352481806933860390015899973299268361513643524088242973968537595085600335021120523852420135081643310663869327371821064862449426404044951571585406092523478861879148545678639697679215289523234342337347529225543852787599016265125","88795280670112240977945082069219541902481768504536167808816453021962616596410396813316064685579412429940019071114917828928080181638058444302439626425155946562362550070187433083541414569447612195370911498321149367969974762244140788494955146280201020345849385865084095189982291190135293114489407801749533448443222584092575861096946605418438181411489276/18262596223069549313969288693970246663726147886364354584825624311486557881239003216971630599389642752648815377795018130449384513824927138566203714891090017787258920529990523519479383032564209629983810866231367438270859421572641494420831435563580050954867101292568399107965982704216434467243223964964535464624988344342084084237484262612100980519602625","752911409358158070688133336918078236438086521781731735123294741731669530734909563155732092406099003582749182967246236657021875488130304108082404134004381196925042617909108654109138702993903561036987511410396567636331465803949049946947888490287210013788802287247422993384874670368649616782837096233384279817294778916419067404863458318451722971117669642134894906235066332205740872938406767767019265664/154635332883086377656813458754577288834216641577439356891585125701020579768315520324293435008561626926046988056302745604248220408154454267643222328696606367409715369481567213640103076112146615938180089303294709009813772509602954514391675152597458428326644988225555987883250642389550531163153338541870029415077982539614784206119074702022117790679351778993541426110436276530890609137713909149169921875","15286089077439918584953144558775765002061832952090847117286473868694909713791678395221438112006475047633028543501632631679316850512797978594476229228325228403849089079675681042224057234415951253954044235099139983386056610384489202589484570852048157272551098909455253037561994944665563291526597323199530997923272894119350512727802414680772513760081360291/3135161418037836259442831302977219750614726139657718770206960776514822107155928800694375522572523712277389679035632531727155957120566617736817225541673148354829212969778664144907503411589126111888917929495106029890532891919001138770210977012708107496187227751496980000137223047079127096028939624830654227758737339725345681745847598157538483308068864000","17723482381737693269787076798246423310802126092500438681864673375704464394105734049099094818738115345706100191580982712146882034618103161268453808819471603805345990162762722549964406042295355916458624836894291267553138041035528315839108252422478610879301656207772491548742981990469454529537049123948604931661837539943536878260665617524824604291547373872716194154198824107266275716083848262625068958720/3630091565725887087605600771358216927099748013831912080380983545872077197366172619225751217619097657405660172801849926220948413919823038425519006413005998509677472226729295278652284861834178791332630676772284971762683579047508016687969040658592436230062049051143001484384767836353233324570686249824980508520186643477313941054900197268584495128610811273834192099099592687485176400539748616360799518357","39160514032490258389003214587901781721548011632821053230881239001436341012396166857515197251499460842954863342641015306304854226194551189224721257664420778416733889030680295206179109679627522113592373938602737416822981698362363553492610842201005420727750505681358595340127099855823746410663750133019743170700888375554918213182862789028531284364877435896/8009919337434786244380818390213546866794958389603666737562053423775386173149395943310276429895991903753441584557917565343673605019989336264748588735390182130334278887642569515202100870042209261561001627386525182096090194076839370589780431326097965428311786635366819094633651297179987340498215947144870164066409654464551017761658775207392803825996394875","18188388167811476762477659006849121912679763597132233588170406666718758511478154418948855160838212151370453213943784067796172102916618102024199200086478021533171984254799008541948973652219533819511807681148179806051835318645591102296256347927018942348574774821478499092054497390790734798143983945096982240517058861467440217558586822663985584775920517755909444876443211404222400335500608733284461685888/3715278241795087610941547133490827711133909145414878217965273061493740719983191775105550559905283733134189195190321643965858771461560130864714477448011225816210219450040558581571206711791272284197614810026220745160693898421068168630870850392739817340370146186703867097982858560347971281142766235850971837330222970900661653800041795020382847588362774677568059355238174402415384788280852059532958121625","46353430636874284402376008361176880938798775506236714098123916668545331718677407145199311191108199195405139575147933283523305343027297808443653460575141799729554209181454676876263582758919969948546918471128299522715691694855904535448703118221685887195383025133924852224568922999317583667985459047407473419196367812949579858081181660610155317911318937349/9455890179897829052705408931064120820559254220394152447502395298827357144081378513080398823188243663943177539817982481713456798757563952162598464929784370305696420245648035222083207596797327498500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","13607414211126412689435920170832779523235279308039712294681570127241403406455725064605210473923965685858012114332021572088551127762628892611459785625407107300355287623761046438724706918300976102581928643740596336865698485838431972050267114940079353996100620311097561405192365496385584164725035842307146351211183443267583872067352881387294766804298681841402861626441205037637282007810811602289501477350144/2772205947240095684743358245950494400934136973845543049938212403703005150954425087866758842625041409060217562878157900197951382737615822655863548356735553650755342108183641353142157728364469706919993519071329069805875834057743793434164720370026073143626055293058601124362130539040404491770346043977106988100969901297669523170508321703496903672333781306743488573086901583022550356345156457496396749797875","23264350093315690507131500726914401771633259602904894387312742275462601574788485574913195967854009886824436237740789910851843045306673524324611130536719802717912615609109285261163220007241492964833933975789257681755002054890453747803418465119567389315754801791950553304034666399677630030683759466627797123971742061866928213780452325847848901682792886840980/4733430508316851445525799359992627142007028326865116523033957869609125212251136452396410236930025876982265915963089597825393317909648054808274488356887197933393799241941120691826916741647173843634076299630884655997401370400734954098249519111198509015387869462198674657171808841005212058822254513429836457539629035675822719720295352508916898476137111981397","538960934807826161927564251064896730663918579817797131801326848839524373936888402762331254883505157846659830555799909822861853145306547699817986010353774500545305596630924815657016569444824389893996399550343022444937690798126189162954188680257730893424775303801562327757655350002001080811866451425665301674688928515041429654624970707803336800125648742168380676815769457467038849213225206824671025803392/109517448833211208909213522579666376007937648875042608355810687327424621469323788799169718267715808580775296460944943658428295481347915131091297305260674731651980547668762317138753250458639043477453950774629862540017034566407286963562574188172753764978963685535201028286359818524519980885827473904574840285411260037264057197155527809916623487144493019982419606308144576939532055057697567269576800542875","24451481554350251656598350124163983489544445991992661049829014268366250968046589127810466483349378560701491445658725080497078590986743512397927747885285095846398852574219367580068049729894667374214861939897557930527646930793431512683750733092448862551580494245486308114129295467976874843852138144539250235632985676953662288536669286915983261820949386845806781/4962240683851186225340479316959605207278948397833849899236383273145853045488131674290332609876751222112917095096150531825255611911377071887145019702433883343849119017643117746273523770961304609989779231048095665388209125939879595509516490230961558353074751312876252070889983946768175488341370453053495319823381943793679003096504200440997908071027962806272000","166591964685609920525429719961758335887941461052357297159523350448241484106515158310298216150030768812873781356326923214637847449893575074813991141092681107583183275003570804134461187213143832123628701876041315736048451374824101256980832991214945762266748755723551899001458245164317581617731332466039757786839492869211248064662857987111284518155462148044812626055842061283907063784492325693994911811072/33765943466859756347231737285768516240749714264564410814839966011490233598006227246396923594069488496368994857718734549787000213944990695920130591750377483911116845697231074543526982580529937081378303555262933800375576494067959129682770065443667091668104132884375840812635624862495548888467575848428463895756394050252457592540570490061561616914443009224917652440212112452400106121785938739776611328125","142464729519206642943985715465196065680101634264787375740459792619754842396453535646509170066091478069799080172299369994438836484938378991283020978342879057271045033903518255546705211647900945143546293360496661466657600494787228476009216508124736254967761901224547269496682078470378676865981855568197705507111970901389105723589666709580851611656838285777566736/28839643075889294346635430272525349651555039807615358795334663734940126053968249608601725991946342449660829847322517564370606746964714098508298705743689729306507554363954348780144675937510900983622836770223945538844314468550644543502501484521561567788992156632892028591678742014134130878101553633195551605796158103033794695984958987367799607407626319024034625","380457154857422076784416625436182734840012277442496600178664323821064977485271288502806124740204295811759917468598315932331219906040253463960961995849761235911145436552991677050565022181516596464968316292789048809559129516930574340710998611088996508613850407294743457197519091160170604426002924022923388338999324182261954685794522778833029950214443271526469607532589775916381786492089432407550224137344640/76922142291839859196033215395526448408989799722090330866256930898223012427332209054699494033511478050536463051459450844520020426942553107946282832072826069342120835351421637970462054707566481086202287686453371483126873188020538661871147778312986131920021929455276187425940666580158173676284545586944833678819622895550345083175685846944633982680908505900099388037050135210936852210263717185637166725605577","79999800708369666670693340813609265988600461251844239982904928629083975986385235816587497657678297663151298709076884516168798694292862559083730259839524968813932151813233366175091317046758260934357096757322369138747731224414176608247605314668045838769433811781490030635374856042786947109101585097035794969502111354126773165391577217071956928171336060247633607/16154850265413610119312596299635391433380319311682208755390341659152160578366244774029302281068833963848811596545791104919556346810193385001196395489740571188884873246131813864782581356887110499639544662322008824704830818136660544673293865921754569356583698951612797219776290835161780326945625621758204931298948625885081325268123344406261740843197232316416000","26517014004241498798848003208133111307300592620947908933072661812816683085261359696887064436611747292468717739609776825664344064024535028242737616786238200200498291226984541942836459188328346609549239724653950302145388877472274074665166631509490297630344351573245265440164082334092997307729007429218385933622623935704482371360985836659823269511115937443161532987660855490906546130131716829909388620539153152/5348257529530073524280989257577050878033239486885664777340947102417077875628238501791711336803418503616042922880218860266611595594400020206192599559925169589023339295256084579966533260861249529670141854632965231468533448709363477120437277477668173149958267956654411822360053335695956270719680086524322530514249891157439878407417971839744392044064720476417844056346174795601710447583861127956455406902139625","71197348290771978405602732839537012310626009318133570890482364371056186523989330157966045289127980687764218363064941391483781008265266963537623770685390148810455244349859354857421474277963009857011653865476081389968122418691934354122230780300833008753686234433642072919923583176333668289998661499146617277981691372057042930131717336250309680764289256080895092/14342680993892886303954853579883363225921109635079605392320944523109187641283117181461662846411912306480691901515655220490850586434947504504317080144378185989596578890875561336496479576651516902048606328604696610314441229321219627021610788398730173161473456954861916116391687748151443335513249810808309201830214153565966339609616397865465842187404632568359375","342401018754023891059352629509715357053454506037284788725127073168445189422181540408896452651232759821766616850264122591225331120588918865882061344322996688880669665450231982002597398732201789017495427566260651180470635467002453249479483900268320570004293679361696197905823690145326531180324429318916092471863347575533714871355651558610515931373080997536792242278529575700808878786732127630024064418468916608/68894647682461956089382461406499759613691148650738957016015844830333168307020284281532026442272618372290646283794122772122665531108484704223311663270836645399554940741928358317884620420886609705267248656765357348477857852684140561714900614303731786621656041881975328169543884661780531057279582784036689401206706069028229798913082362331334839997133771880514515972024899408556517159759907883793675672065360125","190286571838805495686895463752492174798162827967490343625540320679760700551286395956241059969689020885714190883323266375067607282890063444652926151862650426323339187596278760962390404656342309737428214493422028545912504503974763216230927196187743439226243880933947417760147785405444976177822143722569696182520826218120595298059020305548681823408268556482981325/38242608291912408815838081993045123864617058390583394828737640036167893859507494091864963383596867701436244007905770284939991912884465101575490548813894148831966132970730263562113961685364216989999844961688441914455435934703797359360780356482629495214859917249465567846934284121032247250332634283689409883499295469118485912489058982596725212975311140618764288","15345379701153714436938289567639102307887273898834051456693981514956329731572600026866162286097662958712922836383881840211072389867463987895894067288699955858337488812343674818565432780224654423872618380928462939482247900055572079914753652915184313685270722583926261499687728814560680092231526501970431280783177357735398580700300402036873780385926225005561766822479878280891130232036389707452005183370152749056/3080426623087819678602049171756961824196425548529619576972793653585089380165862889092832375934535464160425580449193072125955685099151500755278763306599307218302635233595329082702148677300945556130106197481236122437978375963261172524503625593066102601042060541617791008722569799735202779005407381267021641545644264334109052258081225159748043792288699674153722046659880085850980843460715080965607434114275256125","36443601662144279337033484452272105547257065463167427418525882851507989449375452076227652634440476502702584889057376829320548464677623038648843251719168810701744338735202853412651160681259533015293997501525430222870696235141468274274064390273214484922080219643095978640300874086585386991338440415203863901714217818222666715642467237183267303214471854472286478344/7307237990148312451155090506264642657872224684879860008436735430879314349554023096366846856470375025555139219961666754780864835035902856314981482268319886395881809659368275720375576152008289949085453326722156553603358879420820012964006978808113307340321824660484441618487292138631579616351777191144073820686595597986548374588839763719082323114663844043046087375","1575294930860663922843149113097927168024893739962464327016763741314068438447271326302129681931564068796631337571133444163024224071270063174829664848259482066723104251718808936762938249028582992557822551950212098797718627418782376027133576209718376784834456568694813577764300716139817031545408608110880973380162736536313173329973171844528083756524804574267826691156368696436273087171467254161930265910972517504/315498546654512047637461608750018349421492986465373840347519942494904200733840189483934245529561231604050629653992944140351106887747105945984325466452136415067807666316202346895657914393512001212656936450425268507235863153258769360296536050028695266363553141327896064944506216017933135251875087069031098099192325817395958019524956320840925176589616439477134480262100237057953933117460110224783420562744140625","7692057599553133417225997786980128299372439542315125030077404519679450372805989755158000864378924877036225189784045171045139667691524763609840822628706422918926410377185494048355128046783294954373197082851501927410350313585640237550107070936498164597231431242858771457898152684298047446530220873884022213114819556822050178579707210264243087257050468000092842761/1538814487241112760739561704846381585063002784795057066438330325566843108114787083741788078680861495340026117682606689156065008672344707615420501964123121620401073675430690541617930520947170306763541251152854304975131871537939618684186766168376514664494488691311397307418298556185724993104760692216619178358268934740746932420562664234738576394742559349407744000","15190836470550557926140012263310230378455340797095100474720776113765300081463960235506950799869073894127884189857505951314428810423734978025409205413789025720642609035117121385453856877706229778165533034683130064865256448444765902482146676668197546098809055341050873494446231793312407516463576380102073171090898973046611572020564659042146465345334273595086941562425006763960197801018796906114925005810069684480/3035556598829526968124942916297025416522606357010637652635799096498208643970273828496655227572100159414352020909846298817521082538898702393916708804775798552206401718323929157863173504795127180177622667376867235806208021329981136637175570409791442328468473111768140746895005561471574356889047981458002257872092408771959478275534098789982899056118498417649167444480913552548249005268380838457505944462494874581","2923754549090941424546974281011770689534961442264350984393235983189168024079617848190236639328676436485460311093391982825027512234467853098757486086492333410753919927528867817406389678461354257841007722472106464785557179844602277350411593959136520732862935740433163383885526249897183805981219416420390137516812715245569037561966929572448247077578419534651990827044/583599691615378545100950777601104007812792435102945248411439102112424251478512952087517463400054567832353967731887062349496616445419782499817548928078665212077449420216892583997505908858360011413290038645573504472422610780073975450391707084016931661068694024023083417126286468909117254531307085545768412513447197205482285022417611018126886491416133665625891075125","441922815213568908489589193556560586318864326425397702047965372289295962228254658331201274291697626694859414786292266008476137667843874780506886929181835469302142365772763129838217316953835831059616268288399119642314758261677639945004547833810080700127847214666763863338091523753898362699222880772298183760217731228628442782431573977490761665091005756534420789258276075174436091798475838370152192077494553263232/88113527373573049332749294663402406454524640221866407165839162576979477138694653404281889227416977618913249275712917582743426231744980461918772793673202077716234026090308791893409200158969108910565467273725064769890443408324386897017825489615600787634985397885230455168591240328585041836771921929567914891379235573982442311269392541694564675053636078990836491104116280492254795616055818375774141667319774630875","91197133767962483852278456285591810579974783077874307589555559715577599604626819245000672929518645004771085106770784762994476973842713035791487204122653245797126906189270204029735872508462106527240320932458036231707311992868347221176460407003487373754014365881209649632547685657666691589606571865740595829983849941049450471212387808617247938941417000965198123059467/18163679611214677813643455199979098261849405189805364986036911945012016248297645596270602508015864371788974684317239728239847888960155365342460843559658233069613218442910226128113196984801126248862273503232000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","733396724434554481470656964167233690851279923085197144879644750437402627936723531635898542414136943003236478432848965516925891956615111678444586384493883113385335463639674699443808084827715994137410743992130712903997815471369201406683862985677774155704267039224546352414417632475628136460919900347977754644214725932476856018335195927604771408949980634142255497812566866795799230501026066145434755838336990365184/145912495644159810313026420025053989609942265686388630266226856650796088768164358961644113076809511566125145395699271530802891523741636707532676065833327082092521989958971154798465784847092870457944857590623097781956884297103961713362268264159015928554707158239398721416218953003215109202771651993622244788505649098445109438104466256408060944298437033058380804126574878377874459371251056800895394904459469832875","167606423853658713615749101123336326908381619586838606922565378505211386185130407423587264776519589295420758009764678759213587906216543160801059029133457062067529468464636376639307690657945597847080706144898920305379653754920571797771178341550808041652360635584401789901525709166172283390177673009483341826911179861584213314395893323035527116283758445038413646757280/33310364848744488727470761889861069993071965180756187311178124887286133554324042422503263994717993129539448310743598138364172889305532401505890384806078790034557049074169245078416704866867380089103064821732673967120808611636618526737138435792818828990403374766228037003927569643972203993263329403469747342204808360947840103843317533210523853631711601450617095736473","22466735478643771803624909352181817912387732117378538284107485621001246177152644141853604633676939694208131243081227668237716194316732125445041260568403752325416203858329469477774720998849334961751541191761521224644520742691981372782009394826739249604257098248751626957528543558542443122470657230835176462612530464044652140581367666271771882198747182114685116336512604038833327707163107207664705120728068987996560512/4460342260599110071819142535903990817893424192972341872394014748315090430999224107274777695306032783105944721337053156074851240201179902835353097683269298594190456286888326067932777720561181760369783486872666974623910515795208353605697065447942804414120030678603538761538385793829787734830129764152263691296719726909633580318897787729004972323599773548689272008712427926734258913271101899780538635213826239542884125","1972862002066252798837977155272535342727415329632252213508267781390870646909686724955861608046325765650407340102472833428905279473185818898693854344138403744757857928883601637909604082588338869612221777263582365745419719805587946558326048087138197694016224613118304623864709183681172362693106460535117459192992832969130895829916210933710820035479169562970982784580861/391262854245936198649509275719624152305206807261382621390946060636032376057385723427601113233050260359684153963520782285097664628279596618521963444574543409076428660874564026651742234728997339844161514273669735686516761239076529088145208958938384732800586298943281728435207452253170935715239392534815683367114290676180839217919539381651841151674859715992309727232000","25408691426286653276004556426513401767718328640048945917745783225459709487487356095164164652218100925888847689099153320777389381851598236046402124684511968385325107497047025485302333503075085562533472482645023963717347867696861885363417595298751490212495932766872748125111115039311507374363000062513977436921772096443948159289707996749061007112458126301618769295162649600673247799961118662602756889448152517364992/5033870770817104909025512331238419776407331281944565644457345507262881100618908405924951559853352841154730802006750688581603270849880756026262217651685813584900300357685874044482329601894134443542753690048962260914642678445058891387041919581376195543193199307524572671344323361282633828144708683536721118910549933336800461248338059209853766305058943888965279863852107507075916981165164543199352920055389404296875","616565940481577765011174617619124841631603944267256178093555235591208387588894068005162766513720546626399308168923904625210748051788652328072241494243040185611373035059619136712559505023703153194815611268503291295059648269772663939137446253437248541496631852986499688052678961495116210133458596866684413931188348798244969797973846568160999564540652111599082181871436/122025682149627484528651507368051367620578469392233875493556828623437869650284356703295836998178256875766319508797903923638967073687991229708051285605187358616531926112736402511567721889845693991963610192161413692928378708223712791930113386840109729368772998347036090902364801014045328348830748307179590755723160142468563977011700764517880467116766150322736003147125","979882056834583241477188686550561625289337025747787132773853690143359657519481397575561812727394470125172272246774578404543257210124412718725081536309818383310896102958167337333430555168671327992395916735022711297435263157670501117734412587691271084981140167017421900852550822579410636184333142944411060788723653596377015359036101170054828623669169047118551010102258802465554033173968468183492058271365801755986560/193732066620504775981759812703028757608600125742477178751189607602983198559778039141192492589734277739017909889924488699372940787977794555519474807920198944109549023547259912324279741006975129518191081373554817584214941629021088206977532599055014150433581544599721903881284581257812850697423350805715586436114842183295730680490110793225514602133304729484547181740290534056445482186430729398701311563285494964645419","1138059441890428903336718712159907364975959482163004276901676063186939296217569849990951930955270849692775077813359573394435924934540269310629731801376134549169322946310756738187834128956671195358413024062230774111935109203207768898525882417078119314003162592087920755572050993355843681931139257303484526223461840939880759908449181135029327442039666513325916729112853/224777393704985303260433439401503507705148576727364388720387174977154204629336985298082893443205223017966145098064861566754244624732671470935725326043491911142467178027013112527668183783450932992534517827863293825061296257420183669383719043873666284378647952385401303733274771042385666436214517205678674213118374889121542369996042313879258622144464565403138392064000","614262617634904509410555695398092190166323289787703954329113412647342230855826568873946233136303566178604275296873234926652080462259552775254755109931312516616838091852915397846984381183732773411263828600108443070778861986849272794442105107285234729077818614332155890946804257724112143631642663084660012362691100872465148864413343598067567142977134846266425075195546265101720326272502009234689388355365794889444257557504/121200854655310345878069155190734381476914416893031941761756379148622591310152793328910334357724762079139509813381997287954319983165971628429295803162563856219211627796200599196263868781937234015821367575512548522790158101892507996780675863234181700253545912643548466256938936835469646114659598727592390628209362096738343417775009361678599075671154405137663077798419897932404104579113056038271753988669813988076515476125","106893445531995430131837569895703697604978445859412739331042151546083234373443601923983714252801103551874986033841637079479794895452077803182698291822629713500021995241940133037200268381793282318691568234728329378829301282121562652452936297422136961147432559766896143081059518238234777055931999714973999553456547746825617168005650221542417216291412324174772893635832/21070287546583154895102927029203125577385528350171457634203261197137238923923245382493868134869009844094435068284335909266152042903157700510534904847257436666980671067329084409346149729385625108233234542133838924281113454526471855573271066865534480974484196644173270141056470857666632902827625475719738076524047736123182255306429677688129231682978570461273193359375","1112742798776748551928744983308584493817112400536084744850969025063360679785378789764875076529575583792571198510306186417773101346425704969671256564494135750783642910394213727189639661184379341961737135764570942961692159177189753139209638929302928699705042832922774012622017270172331722295881412111812933593370743210214549038212395941675257558442878012136484052827439007483777859391215222647499741572327725689840850048/219121905514652575155579185322367175400669386131891843382447432851122462422992147756333729893028362013318264155489537138133372703295804002840920402482110260590055749843170064921843460498824128274420925357547023876488939786863662801268798987685503391058250902634999352652063668663245829496836853509616873246554292796823779397317819134891873583857621623143253788854530146303641400986028503534408870194989478421253057625","983995170259637497940121707857673268620603982844439610076334749792119502557380361624096960070148627663305171311646851566811683351232268240169848810658089698606409195744471343416197434926513684882439596141368794175162315633192028977211909698595778839497844847281262559899914504080092844816319298286511436690429175757804604673752838786852277255064434365401871903307643705/193579499709739777577893639665643417521924510242119561765932078835121983190401762561436208758210519231103767232899529457440602166918701550386152070813526760823513884391055054076485295945972185402977095815609448651316824455250005505410192101148149284756928250258632031981439345164037318129987999546683113483700660879431801728391911161900686707231543216283304182063038464","30691013076836380319652884848585431917439358375118437035944950498156836885409110087616602043242747413728866747975631727566613593257623099549583001362246649928075859944695060947434885707102684568632559339383409378997568182445019183928058902445738702610436187907199482604867148445903921474846103586253320950728989228898324829144701782792767763794895137313050381112872972806712570559942583906619373159053654481250809168128/6031936190594376585238407905469035598668211679521553144958053099463931217856780171872253258738635531385711702176347575597387389685526098889278278029314982721284691198967204664771178761416891317672705719303088746953644978471289001577698554025410820041497108311270431130911021653860874238212040640737171103823631718483572464361276703378587106311153455557896527384426327053165214814954154328483257657424873929502112904625","33633002641218571027682690377239300567277297301791434890431645909447040830457253186262970747405514897340315490970846553666201190386457221846694126637998462873786334837901001833771510353365825087187582807843940479192544772559118293851131234910638705258664901225494129023244916125545283621607920983287799648992632814461828998517949449887522866259724675318233522060729654796/6603800575190864815125307817934327053530311915572323544225173935830559756077637251538096164499112411672913910767032482188570876526606118068929913515497400397562722669603861813453418621246538114872330536044519242663538662076583511078523573320035084744399535581216815034837553165853576616422592790103728141443697362408727056813977234078214386771115586436985105038873998875","9090550743395453237608373761422705922989356346696677314277463900103283296889488490217663400349361962695279888433677856471792856853109469433355422802663947305503479561493033851081993247556828544308258821557994512133708656174864544457143793106703578476914924328960109390350040954158797845288786321215010324565010420734044059968931558099077932776525974187717655105951506223649947806568984848883258144616897526257038550656/1783219994432430133950472014582130883873515063182143523712063859964133099770763874744121895885645346884371273930727450069430704145915261127061538288702855011220545530326588799412076879985026006593893648911637986337776174555198865379578424838210466703683642106934154603710587408512357351455891557594977191641529451749437270208258072920514602243985184744955476557012910446023911358037761232253615162335336208343505859375","396226087129511787616470716244996965529391571019620342657409150252952330537366537352182763477820160355931003174946109480036915624974500187179367618457008802667089004678925595775249725629495848146669773574395699032785024522882892752987825063933573399691764866816284097232869198405981830106568826923407996367321353003569052419999880089180418759265274331299787468134974811/77651132902382550540201641628906752945078964002822585000619340261128555048628863996784740469908853602590877726845475670110127527874088625214912598995012971630852593597027649154487264595100300180591016581254965295280089902497540043916128232871685159131211213497239568483141031137909208031392464815187505714066235868748950184065923236670418822911614780061752905170944000","1288523130900767412477856952035690867153496584747510253984686336382980221603917538996138294311274357713893956725672062832264871415025750136690143411884111580335458539824573239771267043414225271729141508235839982033182605445173050590151912297720800168687369852280323356691345317649445843078291369394324862039143247087442309135074453265658730028145500871559458519282433012494054724678302957276371418936282902434203225600/252284450515080370603949213084529993395050575951188044032908270470514999880554862449223347761507020354321422785760279154913310488296485989979706208254206974075438570521939826124860483842758137231373182496438568202110337751291106165654945352183167578675508602832478752400011567482434301614269579368882858973850914513870297071866544875650189106576672289734326492492059816669288907018095832842249738081022227281715919357","559506782175368748187145067236900803925823792088293851453005882621173124590368101213652371965740365119375069053747415415684193092607523211636912074219215053809881814859129515591479780669511533619258835199715146655774919418434080807837587396115955105126806762961292429904380132116986984435528307613054828929294602185927322238461491059740342387266084431988727321711184308176/109446188216864405154936682374609448082436347600301765944233278303643744736544109262794383069197271409398615846380701459882784547857821831816863216080069944818453908760476475874319791512782445408136169878207358663250499628002971644430164185578966399908622640732411885568638054229180673755690889471388585521113862492432946110902070139679164884208988489955874131206343597375","365842109776085256207829452385781129402656684569922320812625438296958174120084800064669048017227033185969596458778213306152397766619692644694641677223213185977626940193107608138827771259334379895020377700759789774994800008933137569543592829220611543060189849601828342989023692876182148818363689293009174358168826340010491728715549904988196347316703985894355217235339548078187164176255405596310602921647203428200269666176/71497266937783826306774367225149833789788300609530680399994804704196212252148324552193149332755057982662844988588678159610516634667597707204818296457616315484973288944637139939912166034691155272078609876888919170894915224022982785138928008133003473320018151370486895637936102520353951511525996197267572355782608352075229547764732602557133494648237258900273354364050662921889937355682486287799239363976556848320046933875","59378684894605773397070783936113244261297966863668546282887298999811950599772732377979382620766180662159460666220894896896564357533604962977968843474062092083279165837424210591042655271577974272394203253875965589611493384384257117088518521598379301169916060951350650621757237206805037261878212424267780312614942173870651684587166691539909068452932891649554575072205080763/11593916877920131260484148322810317629326850763057953025674154928920977965095141485536566217873796019006709247938019404840440511433467040918770165456925609124166970862430104329357419669175323763143377917913760028500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","440706629842402075137926797732405268015915199334341565218443748798479563505125605478061664327658137598204192554352688830679475840386882350034150077506804799859586772904929402683276898098601814091430598259347980573084686932949502809068565420937301632494387691284902026088950093888426872222813857928092871267130505744095697172494119689779474840037266295586359244899477781345249657455186847452249040895151288114085352974933708544/85971876318334010542313048056773419567285701852816309711738644074302467763075671531248793080425349570584102078764464196653843973936119037322000695949209283327606280423406302517302874806092835694196353778161663338667091195199032831587897410329509487165187753418615356836636352319310103639079123698118997500068644500893282438137614420288839230827096109835206605385673197123994357393257304049093683934224826006704198171592304125","13220371178312284248107863849287558696210741535280184003301555188086761767176560823174196915070378763091889333203635784037294769747641959860810039816533609140662043493962707445564057197150603226797446933532133956054671103942520142568674339411250001585991743608723150284270101326419464088290151483823061613403673956918458456165552482913079283537536214967294211244361353060/2576683013797055224377707713704899315377379548630511095136568220145808780162671473907260623503552385384482723173913562423316997528913651044277418227616447815609873991028073011738113927961824632868956802271260292075825561646156680740323686126811928372672670917332613490241615850953660246271541592056143611581223295045062157404996958100136358649109693659623847024011265147","1538372578072246705266078247950089219881197139399081643650271348770110178217959856819170325400476655944115553238940541695152110949081675985299189913515975242840473616169775880272489805123124548256666658584129873597192213080038937409046114908719298170078476325423466734429870048697383304265342125425087105698152643145531760853127801123272389134514333752173173161562273487752064850461823726948588221913540799816489566883798912/299566102446745552813544808169323270315327122249327394279467999308669285416179486075255023523726449428151807672528368606071047812907935426406886253284580296349349558797128593446316786243666290649442956134448480598303527795996222703837663605600624271807461605295956674925277658331760000117761013381199880905748188151556184620779667670278558839116983636972680749836497346863752662521197700717702790359162307617024566689271625","281696937222363685333688097915539146272117417024070728031063821781398985795813333650547982965341298894634762289669256129805545549280355643122501181852136332529515756074502902204877664395456278205770206019663082511098956468724829475220996427130295010430751942126263620206886404244432409164651524408198286831329682605959881993845189585640874220032515465014097345759490750307207/54806274927935495596891312029173862473687610099325998583092091915101265393157631244775387832621032230434007486602816972765210205596482942091518459849775458089575743699797096697542306049628939919466378189656065461708686421130956996965004776108499273871055615413566043083634090083096967567965373203683231171594922347812966905149873265654962896456451681332216735396249206784000","228506238533410805238253122961471637501498406104430046727793420497895852412513560203475440156216063574654372726194215013407325207763369075250819386897086702757125418327084312933061738392406321003231853349865003322697360659712771167066453430309997639548320673279964210730701373707765051246595806673865646607841876463608039111252607452843372970797479959213447237540830563469297144446069689149549515457318899981763489792/44418759813188470246596822974281932219088697005123285598909329328419879212164564561558656547678211265529803086702843380128457744445765859393426675396393053094588240457569380155526179040891009717323059641035189017918495485630657360525410506453554255734005459614858972904374739673834145083512160883402151636664208253116362089211658645312778404886460203600762546810897889629330022309705583438699250109493732452392578125","2396110297187570506257836426251930521245117960980667897194680897478996322590925380310917400763581787981992131769075961259393685331523600287377841990678117113566991100720996059187144934569703045966210306282348527729533806882408323961336166190162075154579344185244957673138372347997134388801085788353482276257401005734929059700346687783400772331280644647089520646562669857652648/465370154262863030800729180763091967573522779260407615567563274096037297593764955820626213827962697601334935773802201919483657310282236100250543992334865461800976838791035335861420892967699843608855185710753433852279737724446294443337363478679601049432404435672469098850676302728116369979460222148206944323730586138087862719386327396334468302608499235112520318322763857676375","1188272888075247520453568790651819187486389546755745961952033150576243575862120569399808467067800830890874391487822723879717525264875722720416173276963170672622214121308038530968291758445510982186014289745026439477197148445087614813262170975056866881909056450023324743409114115141145340480846088869807540798073417035168139476153897066325127540609756310068558610112731607522096096821938163134080426356894899245575410494080/230586762395914863625709048789913840511134004337945700368117795195769576856434588144361459740833007125516905017415184787078710001969815416281381427387949263792200577791644278234661952852149216540491852757174842146376788280677956350901082838474705227642420261641783722891948710833898248566893322144435457967452449965772543077421407816225704952270697016152452032506898311260979594550143344971416786595888053149375287120733","1072184299258468249004114536023934869518152618369895613271618698908405514630154819453979477077738526673716264830106745031385951736108376866253955319711026042389282009348594845497252059906901748860111986811345742998968284077119165082435598381810306691078037018432766116865792677955520465319184311529667642995217214507658693259694586107847099911341219913576038605872218680562047/207882129535607118520818565811162643811811563516006836924341123976848022970024793004700710992938987476728640943834012473687892481059618823520721737479364352887178017866425027953255856440099446112508663603319745066750522936408781591578321031173620445865113295407603090322283539974563690157418931060565698315406021569491751612761888641141446406531645379264720684248398299136000","158094023904374464057702010126993231151433474361820266584020400101533651587072432728050776506672527718975042616651177034635188178967462982926261516748842073587981953038445977514446838733557926696939591069712397947055261777416704028506441173540338327591514650398349069348381309688677335132100441905603664282735310299686268721634369502296867409514777359935022301425165750780988231639828675424239931533849896744198012747670272/30626384366513923671063955469537776291182594080083494737341604579575446319190916924682809546024369330706012653799783122328775875399363759308193432327358837772825609356553955350401725689682838701996446404559005896479618311357573203081153855961484398360670837599853294627153740224543175497655414585918231215639906924313779933211774291565425360415684556655021031131349317390382320286092667852173815259422737956767922154798375","12216278924286401897470540169822542417611356797676160128176706721343511598951866107858729405615631246003458062949723290192242594609994613705183460814797527214549142043573863947658832694800184691222426521703728394203722420336773310908687071670107794543022567943478843065246011544888390757810534211554666736239506503613750756246364621509359804902243487113673014588325806249988332/2364584127734680580481708368927921125934330000162935118371174269642831409084634375654239735054363928748162229294829526339927907778510530444646754603322373712788147193691037688552857183116332292048731726305451516954679277320777955342295564000586923227775208580772868590742136150431152495718132142742153643081187691849828217592954519485869135930755646768375299870967864990234375","578939195017447864385837341975558679292903716580114421030538728778491606282153588930983966100514147976321305616196463174070345884292672842497715966933722088536619333912687108737657068701352918582656105418491672377271304970407730786932913490869797471081081431072836814581099271832696990064828717287258860166842791984158634684078346453202928137987930328826212011774670396356151265781053547412633310327737900786639842674288716416/111966291649651600701875186827360807558960817589719096407887999108024557254221008849510152469119211567152616745769256123968832250104006560061907741567034087109512483357851919402017950812795426393415409198268246337542639470834168040295134130657073201020340432236723824670803498949071870597039309004562024033656488150406105175401372709011082725359382691270659245312133919518760328422827067578306005644825927050994860723405473375","8041514821545833865350873212853873042112343327573364523948780030849543753072688526717886590013028227714585965095216381829914996539132359247488639692828639170075726301411777307168737667077730792892326979446426349813642680537699905651125068091362135055902152994216233622733424128982011248923051410141033146604688083721413402395290842738021365861670415833356403364696759583009635/1553937833499559104910551811592138833189892464446761247731330672284191313590708439680460540329836344767557599746234213006493842842879398684745864919973051635127080738612248150108793397855113122368507483429209127035263504194847798809612278864438287815470711036548695032421148125849669175729331459149833945183228413961985381338162155596008680906676498435954178226973272371625984","12059659399309169167301353842123191409306995788633965680414620302285606896146667751472818541537183787935352700725982053536032930866708413010971856856768384974849695774437178790890015242323873769697407411558706626105140596160049735605389301414460825674631122462760014451298494875244754354054447697502521388381253293175367558014453865905104467382184997528879171136492277222127399012368677604910497789360212571238146627048080568400384/2328494054002703067219004484782931471919751585969487160602269605916676223315055450845942763690581877771159615428854802721943114463834992106300185328876910271612375509166975628540839858771078495267566008071532876816826751069408153323840515037497664871689085370699991860738368371510578076683395101062439493831773194498579620513073693022191702398601471237166387045790480861932005012807234071429628725981935147069738988682858417182625","683009426705008850682549700382901603742691705123356866338951397347368059105140826655486518416578697931244347554322654428162554903861783227680935341690740579867651545205562690172425016836559678937794312287639193745517811234257062356826622207475918293015140472942579713388671782202262396642735640315948612572908444501108579457520714632371056288874351015666995549139003946314085696/131769214246522869780429817236150406548549044658474416909806179734873399109656411633488099249198882165279745627038984487365589625562901914030850178330133080409420340227179447548044572594184601425691821617928130423410997853384425373999967759499571890326740433081063424903098252502791477854302204200941376983295622430177445507316706609802292121282957519571162158620971952084486375","1418116259749091420309271913909337143756589314597557128553117870573928055109322864794169592355058370891251425125187770724828108988587888087023982451205475980371440423992838481547236638456717520835668859093413956339261802305597694403381021863258753441889536361061407579332570493634254542013337999844407181346815549594836374497512447969751514466481466717590255369810506813543577735080228718660747940956248427356785784199073569408/273368882980516556922532339653303822104510203916024760371844491705599093435133738774975538364241630079468712981056336655766117378160822393876348755370711942273876284944422610974149712212944211513462921649872232656449940987552227525504529710373144228818606127541937831103642415534318303187393593236209298242574677293352798419428712873685798636474667204083938875672934235816396371477146089168375198141802684403955936431884765625","546411077581845999248238069684194831621691193366466972898628141511422317954477211865167402284211971296286346492698354214043840080181702652132835681239302798339667835439189275457116051279366194551632712819028177402221815140045210690908631767786711675029194359998826252332434573121740830827417293557234891406021102083555472155479148332697839972702631641910213821827820374586459319/105246945889799140338072754365901705544530661781295362563214285953881890233987516230568663143342952799036341701952267011236663118111226623815975847494372076420199418712941018288738590264475520229651370015377608638075866459684692488079223686296541020897904588347083045723167762682959422858996673894180805702299907478685374065593161226849447131100462022089783265346597553176576000","2398330640958841474772606439916070050977544535580605737383995160447105736276950196885906408317628083110923322157113892928963237845914017845444295040924101784423382681801754191301860383927129006953354739240926643562987838836997453985855576402628166875869041032631651591871962852884189548538272285387092843044669499688035134181859376665409767886188304314888753894905317929877238322615838524354191263502347881033855441181420399360/461588070868590122892265681879734295007029130965626060552783760068897000195207878227714842617470320231527222074701444349530952699708435668339712860464533455345665068841333232359698449088497137068713309811942968433868609329301082001752617420002377892756821532220676085014874112083615054550278903960627185675459015343606391094523511117705747842645927349130302549554534056269331809016770715819934970200483161548527932617036185253","6041015879424725383006424536130409209607854044642113747266098198777011981328765528361630516108680392500990580908509403483891763219659726090675140672989657743882183951954294745396417829943469201306594018454995862321821016087416840247422350906412007336103086620396467456181771583200365740253389107968122850063607085957109965406634738740996318415514360956028575560979203447735121436/1161752799109428422288020947061281540989708937450568100764830251908850596717606701047413407636907934320789870175907792017513896999208892282137299070761467096211814586909598705615312819596495636017728313513520193786266452836805291464826226833593878504804389728477191170027729963773716267868284479768397603444919008915279522376004326398403851684761808785381609370767169521034383625","13240077436443988749179508462267267187169441948722358165090554769250505713747934643200804819418670147225695324432684266924694524337920816452346599774452681831320005286326986675907899608537972384924882996757503264622991355949039882526389342174307168805166215838138277557052303430492669193939212362638263582899713198716541723383138016564027766560215944409353427176135895982596327685665844815618402881202645610620284792793420780517248/2544223084468158291883698813309541801455311468982232546872485444308211415529998472787377800559884210837213042932180479090277285630234238711851480232520137856848809986631784843528381778520727465146661792797924458540957133423665746229799675650290296217658444899605236550972043549278128087645211909479009099766619355677984218929672461506691980442071860591767266913041147587815452007726513853820116629482732060593116624596368806566625","1953999166296955830935495158735359200362904181792947794529339487489730042568305997099959302322956898299616194932283060554261566410988618045107398092345476532371402134206635235570281738377188438407703089325315446371127042537576093536896282955524842632708645655481028161471313608974238110718242273935956977555610147714316158486553633871312187084618154014921190595222799283957140353/375191165084882521037046014569185165885459082629136124177286500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"];if(t[e])return y0.quick.apply(null,t[e].split("/"));e=new y0(e);for(var f=80,l=new y0(0),S=e.subtract(new y0(1)),E=e.add(new y0(1)),M=0;M<f;M++){var P=new y0(2*M+1),p0=W0.bigpow(S.divide(E),P),l0=P.clone().invert().multiply(p0);l=l.add(l0)}return l.multiply(new y0(2))},factorial:function(e){var t=e%1===0;if(t&&e<0)return NaN;if(!t)return W0.gamma(e+1);for(var f=1,l=2;l<=e;l++)f=f*l;return f},dfactorial:function(e){if(D(e)){var t=e%2===0,f=t?e/2:(e+1)/2,l=new y0(1);if(t)for(var S=1;S<=f;S++)l=l.multiply(new y0(2).multiply(new y0(S)));else for(var S=1;S<=f;S++)l=l.multiply(new y0(2).multiply(new y0(S)).subtract(new y0(1)))}else l=Math.pow(2,(1+2*e-Math.cos(Math.PI*e))/4)*Math.pow(Math.PI,(Math.cos(Math.PI*e)-1)/4)*W0.gamma(1+e/2);return l},GCD:function(){for(var e=$0([].slice.call(arguments).map(function(S){return Math.abs(S)})).sort(),t=Math.abs(e.shift()),f=e.length;f-- >0;)for(var l=Math.abs(e.shift());;){if(t%=l,t===0){t=l;break}if(l%=t,l===0)break}return t},QGCD:function(){for(var e=[].slice.call(arguments),t=e[0],f=1;f<e.length;f++){var l=e[f],S=t.isNegative()&&l.isNegative()?-1:1;t=l.gcd(t),S<0&&t.negate()}return t},LCM:function(e,t){return e*t/W0.GCD(e,t)},pow:function(e,t){return e<0&&Math.abs(t)<1?1/t%2===0?NaN:-Math.pow(Math.abs(e),t):Math.pow(e,t)},factor:function(e){e=Number(e);var t=Math.sign(e);e=Math.abs(e);var f=W0.ifactor(e),l=new A;l.symbols={},l.group=O0;for(var S in f){var E=new A(1);E.group=k0,E.value=S,E.power=new A(f[S]),l.symbols[S]=E}return l.updateHash(),e===1&&(l=new A(e)),t<0&&l.negate(),l},sfactor:function(e,t){t=t||{};var f=Math.floor(Math.sqrt(e)),l=I1[I1.length-1];f>l&&e<1e6&&O1(f);for(var S=I1.length,E=0;E<S;E++)for(var M=I1[E];e%M===0;)e=e/M,t[M]=(t[M]||0)+1;return e>1&&(t[e]=1),t},ifactor:function(e){var t=new h1(e);if(e=String(e),e==="0")return{0:1};e=new h1(e);var f=e.sign?-1:1;e=e.abs();var l={};if(e.lt("65536"))l=W0.sfactor(e,l);else{var S=function(l0){l0.isPrime()?l[l0]=(l[l0]||0)+1:l=W0.sfactor(l0,l)};try{for(var E=1e3,M=0;!e.abs().equals(1);)if(e.isPrime()){S(e);break}else{let l0=function(h0){for(var t1=new h1(h0),I0=2,G0=new h1(h0),m1=new h1(1);m1.equals(1);){for(var q1=0;q1<=I0&&m1.equals(1);q1++){if(M++>E)throw new Error("stopping");G0=G0.pow(2).add(1).mod(e),m1=h1.gcd(G0.minus(t1).abs(),e)}I0=I0*2,t1=G0}return m1.equals(e)?l0(h0+1):m1};var P=l0(2);S(P),e=e.divide(P)}}catch{l={},S(t)}}if(f===-1){var p0=Z(N(l));l["-"+p0]=l[p0],delete l[p0]}return l},boxfactor:function(e,t){t=t||200;for(var f,l,S=Math.floor(5/12*e),E=0,M=!1;f=Math.floor(e/S),l=e%S,l!==0;){if(M)return[e,1];S=Math.max(l,S-l),E++,M=E>t}return[f,S,E]},fib:function(e){var t=Math.sign(e);e=Math.abs(e),t=b0(e)?t:Math.abs(t);for(var f=0,l=1,S=1,E=2;E<=e;E++)S=f+l,f=l,l=S;return S*t},mod:function(e,t){return e%t},integer_part:function(e){var t=Math.sign(e);return t*Math.floor(Math.abs(e))},simpson:function(e,t,f,l){var S=function(G0,m1,q1){var _1=G0(m1),Y1=1e-12;return isNaN(_1)&&(_1=G0(q1===1?m1+Y1:m1-Y1)),_1};l=l||1e-4;var E=Math.abs(Math.floor((f-t)/l));E%2!==0&&E++;for(var M=(f-t)/E,P=S(e,t,1),p0=!1,l0=t+M,h0,t1,I0=1;I0<E;I0++)h0=p0?2:4,t1=h0*S(e,l0,1),P+=t1,p0=!p0,l0+=M;return(P+S(e,l0,2))*(M/3)},num_integrate:function(e,t,f,l,S){if(S<0)throw new Error("max depth cannot be negative");function E(p0,l0,h0,t1,I0,G0,m1,q1,_1,Y1,$1){if($1.nanEncountered)return NaN;var an,rn,F1,qn,Fn,Nn,nn,sn,hn,zn;if(an=h0-l0,rn=p0(l0+an*.25),F1=p0(h0-an*.25),isNaN(rn)){$1.nanEncountered=!0;return}if(isNaN(F1)){$1.nanEncountered=!0;return}if(qn=an*(t1+4*rn+I0)/12,Fn=an*(I0+4*F1+G0)/12,Nn=qn+Fn,zn=(Nn-m1)/15,!($1.maxDepthCount>1e3*_1))return Y1>_1?($1.maxDepthCount++,Nn+zn):Math.abs(zn)<q1?Nn+zn:(nn=l0+an*.5,sn=E(p0,l0,nn,t1,rn,I0,qn,q1*.5,_1,Y1+1,$1),isNaN(sn)?($1.nanEncountered=!0,NaN):(hn=E(p0,nn,h0,I0,F1,G0,Fn,q1*.5,_1,Y1+1,$1),isNaN(hn)?($1.nanEncountered=!0,NaN):sn+hn))}function M(p0,l0,h0,t1,I0){var G0={maxDepthCount:0,nanEncountered:!1};t1===void 0&&(t1=1e-9),I0===void 0&&(I0=45);var m1=p0(l0),q1=p0(.5*(l0+h0)),_1=p0(h0),Y1=(m1+4*q1+_1)*(h0-l0)/6,$1=E(p0,l0,h0,m1,q1,_1,Y1,t1,I0,1,G0);if(G0.maxDepthCount>0&&L("integrate-adaptive-simpson: Warning: maximum recursion depth ("+I0+") reached "+G0.maxDepthCount+" times"),G0.nanEncountered)throw new Error("Function does not converge over interval!");return $1}var P;try{P=M(e,t,f,l,S)}catch{return W0.simpson(e,t,f)}return u0(P,12)},Ci:function(e){for(var t=20,f=.5772156649015329,l=0,S=1;S<t;S++){var E=2*S;l+=Math.pow(-1,S)*Math.pow(e,E)/(E*W0.factorial(E))}return Math.log(e)+f+l},Si:function(e){for(var t=20,f=0,l=0;l<t;l++){var S=2*l;f+=Math.pow(-1,l)*Math.pow(e,S+1)/((S+1)*W0.factorial(S+1))}return f},Ei:function(e){if(Number(e)===0)return-1/0;for(var t=30,f=.5772156649015329,l=0,S=1;S<t;S++)l+=Math.pow(e,S)/(S*W0.factorial(S));return f+Math.abs(Math.log(e))+l},Shi:function(e){for(var t=30,f=0,l,S,E=0;E<t;E++)l=2*E,S=l+1,f+=Math.pow(e,S)/(S*S*W0.factorial(l));return f},Chi:function(e){var t,f,l;return t=.001,f=.5772156649015329,l=function(S){return(Math.cosh(S)-1)/S},Math.log(e)+f+W0.num_integrate(l,.002,e,t)},Li:function(e){return W0.Ei(W0.bigLog(e))},gamma_incomplete:function(e,S){for(var f=e-1,l=0,S=S||0,E=0;E<f;E++)l+=Math.pow(S,E)/W0.factorial(E);return W0.factorial(f)*Math.exp(-S)*l},step:function(e){return e>0?1:e<0?0:.5},rect:function(t){var t=Math.abs(t);return t===.5?t:t>.5?0:1},sinc:function(e){return e.equals(0)?1:Math.sin(e)/e},tri:function(e){return e=Math.abs(e),e>=1?0:1-e},nthroot:function(e,t){if(e instanceof y0||(e=new y0(e.toString())),t instanceof y0||(t=new y0(t.toString())),t.equals(1))return e;var f=e.divide(new y0(2)),l=new y0(1e-15),S,E,M,P=t.clone().invert(),p0=t.subtract(new y0(1));do{var l0=W0.bigpow(f,p0),h0=P.multiply(e.divide(l0).subtract(f)).toDecimal(25);if(S=y0.create(h0),M)break;f=f.add(S);var h0=S.toDecimal();M=E?E===h0:!1,E=h0}while(S.abs().gte(l));return f},sqrt:function(e){e instanceof y0||(e=new y0(e));var t,f,l,S,E=0,M=!1,P=new y0(1e-20);t=e.divide(new y0(2));var p0=1e3;do{if(E>p0)throw new Error("Unable to calculate square root for "+e);t=t.add(e.divide(t)).divide(new y0(2)),t=new y0(t.decimal(30)),f=e.subtract(t.multiply(t)),S=l?l.equals(f):!1,(f.clone().abs().lessThan(P)||S)&&(M=!0),l=f,E++}while(!M);return t}};U.FUNCTION_MODULES.push(W0),u1(W0),Math.sign=Math.sign||function(e){return e=+e,e===0||isNaN(e)?e:e>0?1:-1},Math.cosh=Math.cosh||function(e){var t=Math.exp(e);return(t+1/t)/2},Math.sech=Math.sech||function(e){return 1/Math.cosh(e)},Math.csch=Math.csch||function(e){return 1/Math.sinh(e)},Math.coth=Math.coth||function(e){return 1/Math.tanh(e)},Math.sinh=Math.sinh||function(e){var t=Math.exp(e);return(t-1/t)/2},Math.tanh=Math.tanh||function(e){if(e===1/0)return 1;if(e===-1/0)return-1;var t=Math.exp(2*e);return(t-1)/(t+1)},Math.asinh=Math.asinh||function(e){return e===-1/0?e:Math.log(e+Math.sqrt(e*e+1))},Math.acosh=Math.acosh||function(e){return Math.log(e+Math.sqrt(e*e-1))},Math.atanh=Math.atanh||function(e){return Math.log((1+e)/(1-e))/2},Math.log10=Math.log10||function(e){return Math.log(e)*Math.LOG10E},Math.trunc=Math.trunc||function(e){return isNaN(e)?NaN:e>0?Math.floor(e):Math.ceil(e)};function B1(e,t,f,l){var S=t==="hash",E=void 0,M=S?void 0:t,P=M==="decimal"||M==="decimals";P&&typeof l>"u"&&(l=U.DEFAULT_DECP);function p0(nn){switch(t){case"decimals":case"decimal":return E=E||function(Dn){return!1},nn.valueOf();case"recurring":E=E||function(Dn){return Dn.indexOf("'")!==-1};var Wn=nn.toString(),ie=/^-?\d+(?:\/\d+)?$/.exec(Wn);if(ie.length===0)return Wn;var Jn=ie[0].split("/"),sn=!1,hn=Number(Jn[0]);hn<0&&(hn=-hn,sn=!0);var zn=Number(Jn[1]);zn||(zn=1);var Gn=Math.floor(hn/zn),Tn=10*(hn-Gn*zn);for(Gn=Gn.toString()+".";Tn&&Tn<zn;)Tn*=10,Gn+="0";for(var dn="",Sn=[],_n=0;;){if(typeof Sn[Tn]<"u"){var jn=dn.slice(0,Sn[Tn]),Bn=dn.slice(Sn[Tn]),Xn=Gn+jn+"'"+Bn+"'";return(sn?"-":"")+Xn.replace("'0'","").replace(/\.$/,"")}var Yn=Math.floor(Tn/zn),Qn=Tn-Yn*zn;Sn[Tn]=_n,dn+=Yn.toString(),_n+=1,Tn=10*Qn}case"mixed":E=E||function(Dn){return Dn.indexOf("/")!==-1};var Wn=nn.toString(),ie=/^-?\d+(?:\/\d+)?$/.exec(Wn);if(ie.length===0)return Wn;var Jn=ie[0].split("/"),pe=new h1(Jn[0]),ue=new h1(Jn[1]);ue.equals(0)&&(ue=new h1(1));var he=pe.divmod(ue),Gn=he.quotient,fe=he.remainder,An=Jn[0][0]==="-"||Gn.equals(0)||fe.equals(0)?"":"+";return(Gn.equals(0)?"":Gn.toString())+An+(fe.equals(0)?"":fe.toString()+"/"+Jn[1]);case"scientific":return E=E||function(Dn){return!1},new G1(nn.valueOf()).toString(U.SCIENTIFIC_MAX_DECIMAL_PLACES);default:return E=E||function(Dn){return Dn.indexOf("/")!==-1},nn.toString()}}if(w0(e)){var l0="",h0="",t1="",I0=e.group||f,G0=e.value;if(!S){var m1=p0(e.multiplier);m1=="-1"&&String(e.multiplier)==="-1"&&(t1="-",m1="1"),m1!="1"&&(l0=m1);var q1=e.power?p0(e.power):"";q1!="1"&&(w0(q1)?h0=B1(q1,M):h0=q1)}switch(I0){case X:l0="";var _1=l&&P?e.multiplier.toDecimal(l):p0(e.multiplier);G0=String(e.multiplier)=="-1"?"1":_1,h0="";break;case x0:G0=e.collectSymbols().map(function(nn){var sn=B1(nn,M,f,l);return sn=="0"&&(sn=""),sn}).sort().join("+").replace(/\+\-/g,"-");break;case e1:G0=e.collectSymbols().map(function(nn){var sn=B1(nn,M,f,l);return sn=="0"&&(sn=""),sn}).sort().join("+").replace(/\+\-/g,"-");break;case O0:G0=e.collectSymbols(function(nn){var sn=nn.group;return(sn===x0||sn===e1)&&nn.power.equals(1)&&nn.multiplier.equals(1)?F(B1(nn,M)):B1(nn,M)}).join("*");break;case Y0:var Y1=e.previousGroup,$1=e.power.group;Y1===x0&&(G0=e.collectSymbols(B1,M).join("+").replace("+-","-")),!(Y1===X||Y1===D0||Y1===F0)&&!S&&(G0=F(G0)),($1===e1||$1===O0||$1===x0||e.power.multiplier.toString()!="1")&&h0&&(h0=F(h0));break}if(I0===F0&&(G0=e.fname+F(e.args.map(function(nn){return B1(nn,M)}).join(","))),I0===F0&&e.fname in V0){var an=B1(e.args[0]),rn=B1(e.args[1]);e.args[0].isComposite()&&(an=F(an)),e.args[1].isComposite()&&(rn=F(rn)),G0=an+V0[e.fname]+rn}h0&&I0!==Y0&&E(h0)&&(h0=F(h0)),((I0===e1||I0===x0)&&(l0&&l0!="1"||t1==="-")||(I0===O0||I0===e1||I0===x0)&&h0&&h0!="1"||!S&&I0===k0&&G0==-1||e.fname===D1)&&(G0=F(G0)),l&&(t==="decimal"||t==="decimals"&&l0)&&(l0=u0(l0,l));var F1=t1+l0;if(l0&&E(l0)&&(F1=F(F1)),h0<0&&(h0=F(h0)),l0&&(F1=F1+"*"),h0){if(G0==="e"&&U.E_TO_EXP)return F1+"exp"+F(h0);h0=U.POWER_OPERATOR+h0}I0===Y0&&G0.charAt(0)==="-"&&(G0=F(G0));var qn=F1+G0;return e.parens&&(qn=F(qn)),qn+h0}else if(s1(e)){for(var Fn=e.elements.length,F1=[],Nn=0;Nn<Fn;Nn++)F1.push(e.elements[Nn].text(t));return"["+F1.join(",")+"]"}else try{return e.toString()}catch{return""}}function w1(e){if(n0(e))return[e];for(var t=e,f=1,l=[],S=2220446049250313e-31;f<t;){var E=e/f,M=Math.floor(E),P=E-M;if(P<=S&&f>1){if(n0(f)&&(I1.indexOf(f)===-1&&I1.push(f),l.push(f)),n0(M)){l.push(M);break}t=M}f++}return l.sort(function(p0,l0){return p0-l0})}w1(314146179365);function pn(e){this.symbol=e}pn.getExpression=function(e,t){(e==="last"||!e)&&(e=Q.length),e==="first"&&(e=1);var f=e-1,l=Q[f],S=l&&new pn(l);return S},pn.prototype={text:function(e,t){return t=t||U.EXPRESSION_DECP,e=e||"decimals",this.symbol.text_?this.symbol.text_(e):B1(this.symbol,e,void 0,t)},latex:function(e){return this.symbol.latex?this.symbol.latex(e):L1.latex(this.symbol,e)},valueOf:function(){return this.symbol.valueOf()},evaluate:function(){if(s1(this.symbol)&&this.symbol.dimensions()===0)return this;var e=arguments[0],t,f=1;typeof e=="string"?t=e.charAt(0)==="%"?pn.getExpression(e.substr(1)).text():e:e instanceof pn||w0(e)?t=e.text():(t=this.symbol.text(),f--);var l=arguments[f]||{},S=new pn(p1("PARSE2NUMBER",function(){return y.parse(t,l)},!0));return S},buildFunction:function(e){return kn.build(this.symbol,e)},isNumber:function(){return R1(this.symbol)},isInfinity:function(){return Math.abs(this.symbol.multiplier)===1/0},isImaginary:function(){return _0(y.parse(this.symbol)).isImaginary()},variables:function(){return X0(this.symbol)},toString:function(){try{return c1(this.symbol)?"["+this.symbol.toString()+"]":this.symbol.toString()}catch{return""}},toDecimal:function(e){U.precision=e;var t=B1(this.symbol,"decimals");return U.precision=void 0,t},isFraction:function(){return R0(this.symbol)},isPolynomial:function(){return this.symbol.isPoly()},sub:function(e,t){return new pn(this.symbol.sub(y.parse(e),y.parse(t)))},operation:function(e,t){return n1(t)?t=t.symbol:w0(t)||(t=y.parse(t)),new pn(y[e](this.symbol.clone(),t.clone()))},add:function(e){return this.operation("add",e)},subtract:function(e){return this.operation("subtract",e)},multiply:function(e){return this.operation("multiply",e)},divide:function(e){return this.operation("divide",e)},pow:function(e){return this.operation("pow",e)},expand:function(){return new pn(y.expand(this.symbol))},each:function(e,t){if(this.symbol.each)this.symbol.each(e,t);else if(c1(this.symbol))for(var t=0;t<this.symbol.length;t++)e.call(this.symbol,this.symbol[t],t);else e.call(this.symbol)},eq:function(e){w0(e)||(e=y.parse(e));try{var t=y.subtract(this.symbol.clone(),e);return t.equals(0)}catch{return!1}},lt:function(e){w0(e)||(e=y.parse(e));try{var t=_0(y.subtract(this.symbol.clone(),e));return t.lessThan(0)}catch{return!1}},gt:function(e){w0(e)||(e=y.parse(e));try{var t=_0(y.subtract(this.symbol.clone(),e));return t.greaterThan(0)}catch{return!1}},gte:function(e){return this.gt(e)||this.eq(e)},lte:function(e){return this.lt(e)||this.eq(e)},numerator:function(){return new pn(this.symbol.getNum())},denominator:function(){return new pn(this.symbol.getDenom())},hasFunction:function(e){return this.symbol.containsFunction(e)},contains:function(e){return this.symbol.contains(e)}},pn.prototype.toTeX=pn.prototype.latex;function G1(e){return this instanceof G1?(e=String(typeof e>"u"?0:e),e.startsWith("-")?(this.sign=-1,e=e.substr(1,e.length)):this.sign=1,G1.isScientific(e)?this.fromScientific(e):this.convert(e),this):new G1(e)}G1.prototype={fromScientific:function(e){var t=String(e).toLowerCase().split("e");return this.coeff=t[0],this.exponent=t[1],this},convert:function(e){var t=e.split("."),f=t[0]||"",l=t[1]||"";f=G1.removeLeadingZeroes(f),l=G1.removeTrailingZeroes(l);var S=f.length,E=f+l,M=G1.leadingZeroes(E).length;this.exponent=S-(M+1);var P=G1.removeLeadingZeroes(E);this.coeff=P.charAt(0)+"."+(P.substr(1,P.length)||"0");var p0=this.coeff.split(".")[1]||"";return this.decp=p0==="0"?0:p0.length,this.dec=l,this.wholes=f,this},round:function(e){var t=this.copy();if(e=Number(e),e===0)t.coeff=t.coeff.charAt(0);else{var f=this.coeff.substring(0,e+1),l=this.coeff.substring(e+1,e+3),S=l.charAt(0);l.charAt(1)>4&&S++,t.coeff=f+S}return t},copy:function(){var e=new G1(0);return e.coeff=this.coeff,e.exponent=this.exponent,e.sign=this.sign,e},toString:function(e){var t;if(U.SCIENTIFIC_IGNORE_ZERO_EXPONENTS&&this.exponent===0&&this.decp<e)this.decp===0?t=this.wholes:t=this.coeff;else{var f=typeof e>"u"?this.coeff:G1.round(this.coeff,Math.min(e,this.decp||1));t=this.exponent===0?f:f+"e"+this.exponent}return(this.sign===-1?"-":"")+t}},G1.isScientific=function(e){return/\d+\.?\d*e[\+\-]*\d+/i.test(e)},G1.leadingZeroes=function(e){var t=e.match(/^(0*).*$/);return t?t[1]:""},G1.removeLeadingZeroes=function(e){var t=e.match(/^0*(.*)$/);return t?t[1]:""},G1.removeTrailingZeroes=function(e){var t=e.match(/0*$/);return t?e.substring(0,e.length-t[0].length):""},G1.round=function(e,t){var f=u0(e,t),l=String(f).split(".").pop(),S=t-l.length;return S>0&&(f=f+new Array(S+1).join(0)),f};function y0(e){if(e instanceof y0)return e;if(e===void 0)return this;try{if(D(e))try{this.num=h1(e),this.den=h1(1)}catch{return y0.simple(e)}else{var t=e instanceof K0?Zn.quickConversion(e):Zn.convert(e);this.num=new h1(t[0]),this.den=new h1(t[1])}}catch{return y0.simple(e)}}y0.create=function(e){if(e instanceof y0)return e;e=e.toString();var t=e.charAt(0)==="-";t&&(e=e.substr(1,e.length-1));var f=new y0(e);return t&&f.negate(),f},y0.isFrac=function(e){return e instanceof y0},y0.quick=function(e,t){var f=new y0;return f.num=new h1(e),f.den=new h1(t),f},y0.simple=function(e){for(var t=String(G(e)),f=t.split("."),l=f.join(""),S=1,E=(f[1]||"").length,M=0;M<E;M++)S+="0";var P=y0.quick(l,S);return P.simplify()},y0.prototype={multiply:function(e){if(this.isOne())return e.clone();if(e.isOne())return this.clone();var t=this.clone();return t.num=t.num.multiply(e.num),t.den=t.den.multiply(e.den),t.simplify()},divide:function(e){if(e.equals(0))throw new q("Division by zero not allowed!");return this.clone().multiply(e.clone().invert()).simplify()},subtract:function(e){return this.clone().add(e.clone().neg())},neg:function(){return this.num=this.num.multiply(-1),this},add:function(e){var t=this.den,f=e.den,l=this.clone(),S=l.num,E=e.num;return t.equals(f)?l.num=S.add(E):(l.num=S.multiply(f).add(E.multiply(t)),l.den=t.multiply(f)),l.simplify()},mod:function(e){var t=this.clone(),f=e.clone();return t.num=t.num.multiply(f.den),t.den=t.den.multiply(f.den),f.num=f.num.multiply(this.den),f.den=f.den.multiply(this.den),t.num=t.num.mod(f.num),t.simplify()},simplify:function(){var e=h1.gcd(this.num,this.den);return this.num=this.num.divide(e),this.den=this.den.divide(e),this},clone:function(){var e=new y0;return e.num=new h1(this.num),e.den=new h1(this.den),e},decimal:function(e){var t=this.num.isNegative()?"-":"";if(this.num.equals(this.den))return"1";e=e||U.PRECISION,e++;for(var f=[],l=this.num.abs(),S=this.den,E=0;E<e;E++){var M=l.divide(S),P=l.subtract(M.multiply(S));if(f.push(M),P.equals(0))break;l=P.times(10)}var p0=f.shift();if(f.length===0)return t+p0.toString();if(E===e){for(var l0=[],E=0;E<2;E++)l0.unshift(f.pop());f.push(Math.round(l0.join(".")))}var h0=p0.toString()+"."+f.join("");return t+h0},toDecimal:function(e){return e=e||U.PRECISION,e?this.decimal(e):this.num/this.den},qcompare:function(e){return[this.num.multiply(e.den),e.num.multiply(this.den)]},equals:function(e){isNaN(e)||(e=new y0(e));var t=this.qcompare(e);return t[0].equals(t[1])},absEquals:function(e){isNaN(e)||(e=new y0(e));var t=this.qcompare(e);return t[0].abs().equals(t[1])},greaterThan:function(e){isNaN(e)||(e=new y0(e));var t=this.qcompare(e);return t[0].gt(t[1])},gte:function(e){return this.greaterThan(e)||this.equals(e)},lte:function(e){return this.lessThan(e)||this.equals(e)},lessThan:function(e){isNaN(e)||(e=new y0(e));var t=this.qcompare(e);return t[0].lt(t[1])},isInteger:function(){return this.den.equals(1)},negate:function(){return this.num=this.num.multiply(-1),this},invert:function(){var e=this.den;if(!this.num.equals(0)){var t=this.num.isNegative();this.den=this.num.abs(),this.num=e,t&&(this.num=this.num.multiply(-1))}return this},isOne:function(){return this.num.equals(1)&&this.den.equals(1)},sign:function(){return this.num.isNegative()?-1:1},abs:function(){return this.num=this.num.abs(),this},gcd:function(e){return y0.quick(h1.gcd(e.num,this.num),h1.lcm(e.den,this.den))},toString:function(){return this.den.equals(1)?this.num.toString():this.num.toString()+"/"+this.den.toString()},valueOf:function(){if(U.USE_BIG)return new K0(this.num.toString()).div(new K0(this.den.toString()));var e=this.num/this.den;return e},isNegative:function(){return this.toDecimal()<0}};function A(e){var t=e==="Infinity";return this instanceof A?(e instanceof K0&&(e=e.toString()),/^(\-?\+?\d+)\.?\d*e?\-?\+?\d*/i.test(e)||e instanceof K0?(this.group=X,this.value=M0,this.multiplier=new y0(e)):(this.group=D0,_(e),this.value=e,this.multiplier=new y0(1),this.imaginary=e===U.IMAGINARY,this.isInfinity=t),this.power=new y0(1),this):new A(e)}A.imaginary=function(){var e=new A(U.IMAGINARY);return e.imaginary=!0,e},A.infinity=function(e){var t=new A("Infinity");return e===-1&&t.negate(),t},A.shell=function(e,t){var f=new A(t);return f.group=e,f.symbols={},f.length=0,f},A.unwrapSQRT=function(e,t){var f=e.power;if(e.fname===Q1&&(e.isLinear()||t)){var l=e.args[0].clone();l.power=l.power.multiply(new y0(.5)),l.multiplier=l.multiplier.multiply(e.multiplier),e=l,t&&(e.power=f.multiply(new y0(.5)))}return e},A.hyp=function(e,t){return e=e||new A(0),t=t||new A(0),y.sqrt(y.add(y.pow(e.clone(),new A(2)),y.pow(t.clone(),new A(2))))},A.toPolarFormArray=function(e){var t,f,l,S;return t=e.realpart(),f=e.imagpart(),l=A.hyp(t,f),S=t.equals(0)?y.parse("pi/2"):y.trig.atan(y.divide(f,t)),[l,S]},A.unwrapPARENS=function(e){if(e.fname===""){var t=e.args[0];return t.power=t.power.multiply(e.power),t.multiplier=t.multiplier.multiply(e.multiplier),e.fname===""?A.unwrapPARENS(t):t}return e},A.create=function(e,t){return t=t===void 0?1:t,y.parse("("+e+")^("+t+")")},A.prototype={getNth:function(e){var t=_0(y.pow(y.parse(this.multiplier),y.parse(e).invert())),f=y.parse(u0(t)),l=_0(y.pow(f,y.parse(e)));return l.equals(y.parse(this.multiplier))?f:t},isToNth:function(e){var t=this.getNth(e),f=D(t),l;return this.group===O0?(l=!0,this.each(function(S){var E=S.isToNth(e);E||(l=!1)})):l=this.group===X?!0:D(y.divide(y.parse(this.power),y.parse(e))),f&&l},isSquare:function(){return this.isToNth(2)},isCube:function(){return this.isToNth(3)},isSimple:function(){return this.power.equals(1)&&this.multiplier.equals(1)},powSimp:function(){if(this.group===O0){var e=[],f=this.multiplier.sign();this.each(function(t1){var I0=t1.power;if(w0(I0)||I0.equals(1))return this.clone();e.push(I0)});var t=new y0(Z(e)),f=this.multiplier.sign(),l=this.multiplier.clone().abs(),S=W0.ifactor(l),E=new y0(1),M=new y0(1);for(var P in S){var p0=new y0(S[P]);p0.lessThan(t)||(p0=p0.divide(t).subtract(new y0(1)),M=M.multiply(new y0(P))),E=E.multiply(y.parse(F(P)+"^"+F(p0)).multiplier)}var l0=new A(M);this.each(function(t1){t1=t1.clone(),t1.power=t1.power.divide(t),l0=y.multiply(l0,t1)});var h0=y.symfunction(D1,[l0]);return h0.power=t,h0.multiplier=f<0?E.negate():E,h0}return this.clone()},equals:function(e){return w0(e)||(e=new A(e)),this.value===e.value&&this.power.equals(e.power)&&this.multiplier.equals(e.multiplier)&&this.group===e.group},abs:function(){var e=this.clone();return e.multiplier.abs(),e},gt:function(e){return w0(e)||(e=new A(e)),this.isConstant()&&e.isConstant()&&this.multiplier.greaterThan(e.multiplier)},gte:function(e){return w0(e)||(e=new A(e)),this.equals(e)||this.isConstant()&&e.isConstant()&&this.multiplier.greaterThan(e.multiplier)},lt:function(e){return w0(e)||(e=new A(e)),this.isConstant()&&e.isConstant()&&this.multiplier.lessThan(e.multiplier)},lte:function(e){return w0(e)||(e=new A(e)),this.equals(e)||this.isConstant()&&e.isConstant()&&this.multiplier.lessThan(e.multiplier)},isPoly:function(e){var t=this.group,f=this.power;if(!D(f)||f<0)return!1;if(t===X||t===D0||this.isConstant(!0))return!0;var l=X0(this);if(t===O0&&l.length===1){var S=l[0];if(!S)return!0;for(var E in this.symbols){var M=this.symbols[E];if(M.group===F0&&!M.args[0].isConstant()||!M.contains(S)&&!M.isConstant(!0))return!1}return!0}if(this.isComposite()||t===O0&&e){if(!e&&l.length>1)return!1;for(var E in this.symbols)if(!this.symbols[E].isPoly(e))return!1;return!0}else return!1},stripVar:function(e,t){var f;return(this.group===x0||this.group===D0)&&this.value===e?f=new A(t?0:this.multiplier):this.group===O0&&this.isLinear()?(f=new A(1),this.each(function(l){l.contains(e,!0)||(f=y.multiply(f,l.clone()))}),f.multiplier=f.multiplier.multiply(this.multiplier)):this.group===e1&&!this.isLinear()?f=new A(this.multiplier):this.group===e1&&this.isLinear()?(f=new A(0),this.each(function(l){if(!l.contains(e)){var S=l.clone();S.multiplier=S.multiplier.multiply(this.multiplier),f=y.add(f,S)}}),f.equals(0)&&(f=new A(this.multiplier))):this.group===Y0&&this.power.contains(e,!0)?f=new A(this.multiplier):this.group===F0&&this.contains(e)?f=new A(this.multiplier):f=this.clone(),f},toArray:function(e,t){t=t||{arr:[],add:function(P,p0){var l0=this.arr[p0];this.arr[p0]=l0?y.add(l0,P):P}};var f=this.group;if(f===D0&&this.contains(e))t.add(new A(this.multiplier),this.power);else if(f===O0){var l=this.stripVar(e),S=y.divide(this.clone(),l.clone()),E=S.isConstant()?0:S.power;t.add(l,E)}else if(f===x0&&this.value===e)this.each(function(P,p0){t.add(P.stripVar(e),p0)});else if(f===e1)this.each(function(P){P.toArray(e,t)});else{if(this.contains(e))throw new W("Cannot convert to array! Exiting");t.add(this.clone(),0)}t=t.arr;for(var M=0;M<t.length;M++)t[M]||(t[M]=new A(0));return t},hasFunc:function(e){var t=this.group===F0||this.group===Y0;if(t&&!e||t&&this.contains(e))return!0;if(this.symbols){for(var f in this.symbols)if(this.symbols[f].hasFunc(e))return!0}return!1},sub:function(e,t){e=w0(e)?e.clone():y.parse(e),t=w0(t)?t.clone():y.parse(t),(e.group===X||e.group===k0)&&p("Cannot substitute a number. Must be a variable");var f=!1,l=e.multiplier.equals(1),S=this.multiplier.clone(),E;if(this.value===e.value&&(this.group!==x0&&e.group!==x0||this.group===x0&&e.group===x0))(l||e.multiplier.equals(this.multiplier))&&(e.isLinear()?E=t:e.power.equals(this.power)&&(E=t,f=!0),e.multiplier.equals(this.multiplier)&&(S=new y0(1)));else if(this.group===O0||this.previousGroup===O0)E=new A(1),this.each(function(G0){var m1=y.parse(G0.sub(e,t));E=y.multiply(E,m1)});else if(this.isComposite()){var M=this.clone();if(e.isComposite()&&M.isComposite()&&M.isLinear()&&e.isLinear()){var P=function(G0,m1){for(var q1 in G0.symbols){var _1=G0.symbols[q1];if(_1.isComposite()&&P(_1,m1)||_1.equals(m1))return!0}return!1};for(var p0 in e.symbols)if(!P(M,e.symbols[p0]))return M.clone();E=y.add(y.subtract(M.clone(),e),t)}else E=new A(0),M.each(function(G0){E=y.add(E,G0.sub(e,t))})}else if(this.group===Y0)E=y.parse(this.value).sub(e,t);else if(this.group===F0){for(var l0=[],h0=0;h0<this.args.length;h0++){var t1=this.args[h0];w0(t1)||(t1=y.parse(t1)),l0.push(t1.sub(e,t))}E=y.symfunction(this.fname,l0)}if(E){if(!f){var I0=this.group===Y0?this.power.sub(e,t):y.parse(this.power);E=y.pow(E,I0)}return E.multiplier=E.multiplier.multiply(S),E}return this.clone()},isMonomial:function(){if(this.group===D0)return!0;if(this.group===O0){for(var e in this.symbols)if(this.symbols[e].group!==D0)return!1}else return!1;return!0},isPi:function(){return this.group===D0&&this.value==="pi"},sign:function(){return this.multiplier.sign()},isE:function(){return this.value==="e"},isSQRT:function(){return this.fname===Q1},isConstant:function(e,t){if(t&&this.group===O0){for(var f in this.symbols)if(this.symbols[f].isConstant(!0))return!0}if(e==="functions"&&this.isComposite()){var l=!0;return this.each(function(E){E.isConstant(e,t)||(l=!1)},!0),l}if(e==="all"&&(this.isPi()||this.isE()))return!0;if(e&&this.group===F0){for(var S=0;S<this.args.length;S++)if(!this.args[S].isConstant(e))return!1;return!0}return e?R1(this):this.value===M0},isImaginary:function(){if(this.imaginary)return!0;if(this.symbols){for(var e in this.symbols)if(this.symbols[e].isImaginary())return!0}return!1},realpart:function(){if(this.isConstant())return this.clone();if(this.imaginary)return new A(0);if(this.isComposite()){var e=new A(0);return this.each(function(t){e=y.add(e,t.realpart())}),e}else if(this.isImaginary())return new A(0);return this.clone()},imagpart:function(){if(this.group===D0&&this.isImaginary())return new A(this.multiplier);if(this.isComposite()){var e=new A(0);return this.each(function(t){e=y.add(e,t.imagpart())}),e}return this.group===O0?this.stripVar(U.IMAGINARY):new A(0)},isInteger:function(){return this.isConstant()&&this.multiplier.isInteger()},isLinear:function(e){if(e){if(this.isConstant())return!0;if(this.group===D0)return this.value===e?this.power.equals(1):!0;if(this.isComposite()&&this.power.equals(1)){for(var t in this.symbols)if(!this.symbols[t].isLinear(e))return!1;return!0}return this.group===O0&&this.symbols[e]?this.symbols[e].isLinear(e):!1}else return this.power.equals(1)},containsFunction:function(e){if(typeof e=="string"&&(e=[e]),this.group===F0&&e.indexOf(this.fname)!==-1)return!0;if(this.symbols){for(var t in this.symbols)if(this.symbols[t].containsFunction(e))return!0}return!1},multiplyPower:function(e){if(this.group===X&&this.multiplier.equals(1))return this;var t=this.power;if(this.group!==Y0&&e.group===X){var f=e.multiplier;this.group===X&&!f.isInteger()&&this.convert(k0),this.power=t.equals(1)?f.clone():t.multiply(f),this.group===k0&&D(this.power)&&(this.value=Math.pow(this.value,this.power),this.toLinear(),this.convert(X))}else this.group!==Y0&&(t=new A(t),this.convert(Y0)),this.power=y.multiply(t,e);return this},setPower:function(e,t){if(this.group===X&&this.multiplier.equals(1))return this;if(this.group===Y0&&!w0(e))this.group=this.previousGroup,delete this.previousGroup,this.group===X?(this.multiplier=new y0(this.value),this.value=M0):this.power=e;else{var f=!1;w0(e)&&(e.group===X?e=e.multiplier:f=!0);var l=f?Y0:k0;this.power=e,this.group===X&&l&&this.convert(l,t)}return this},isInverse:function(){return this.group===Y0?this.power.multiplier.lessThan(0):this.power<0},clone:function(e){var t=e||new A(0),f=["value","group","length","previousGroup","imaginary","fname","args","isInfinity","scientific"],l=f.length,S;if(this.symbols){t.symbols={};for(var E in this.symbols)t.symbols[E]=this.symbols[E].clone()}for(S=0;S<l;S++)this[f[S]]!==void 0&&(t[f[S]]=this[f[S]]);return t.power=this.power.clone(),t.multiplier=this.multiplier.clone(),this.isConversion&&(t.isConversion=this.isConversion),this.isUnit&&(t.isUnit=this.isUnit),t},toUnitMultiplier:function(e){return this.multiplier.num=new h1(this.multiplier.num.isNegative()&&e?-1:1),this.multiplier.den=new h1(1),this},toLinear:function(){return this.power.equals(1)?this:(this.setPower(new y0(1)),this)},each:function(e,t){if(!this.symbols)e.call(this,this,this.value);else for(var f in this.symbols){var l=this.symbols[f];if(l.group===x0&&t)for(var S in l.symbols)e.call(f,l.symbols[S],S);else e.call(this,l,f)}},valueOf:function(){return this.group===X?this.multiplier.valueOf():this.power===0?1:this.multiplier===0?0:B1(this,"decimals")},contains:function(e,t){e=String(e);var f=this.group;if(this.value===e)return!0;if(this.symbols){for(var l in this.symbols)if(this.symbols[l].contains(e,t))return!0}if(f===F0||this.previousGroup===F0){for(var S=0;S<this.args.length;S++)if(this.args[S].contains(e,t))return!0}return f===Y0&&(t&&this.power.contains(e,t)||this.value===e)?!0:this.value===e},negate:function(){return this.multiplier.negate(),(this.group===e1||this.group===x0)&&this.distributeMultiplier(),this},invert:function(e,t){return e||(this.multiplier=this.multiplier.invert()),w0(this.power)?this.power.negate():this.group===O0&&t?this.each(function(f){return f.invert()}):this.power&&this.group!==X&&this.power.negate(),this},distributeMultiplier:function(e){var t=e?this.power.absEquals(1):this.power.equals(1);if(this.symbols&&t&&this.group!==O0&&!this.multiplier.equals(1)){for(var f in this.symbols){var l=this.symbols[f];l.multiplier=l.multiplier.multiply(this.multiplier),l.distributeMultiplier()}this.toUnitMultiplier()}return this},distributeExponent:function(){if(!this.power.equals(1)){var e=this.power;for(var t in this.symbols){var f=this.symbols[t];f.group===Y0?f.power=y.multiply(f.power,new A(e)):this.symbols[t].power=this.symbols[t].power.multiply(e)}this.toLinear()}return this},convert:function(e,t){if(e>F0){var f=this.clone();this.symbols={},e===O0?f.toUnitMultiplier():this.toUnitMultiplier(),this.group===F0&&(f.args=this.args,delete this.args,delete this.fname),this.isImgSymbol&&delete this.isImgSymbol,this.toLinear(),this.symbols[f.keyForGroup(e)]=f,this.group=e,this.length=1}else if(e===Y0)this.group===X&&this.multiplier.equals(1)||(this.group!==Y0&&(this.previousGroup=this.group),this.group===X?(this.value=this.multiplier.num.toString(),this.toUnitMultiplier()):this.value=B1(this,"hash"),this.group=Y0);else if(e===X){var l=this.multiplier.toDecimal();this.symbols&&(this.symbols=void 0),new A(this.group===k0?l*Math.pow(this.value,this.power):l).clone(this)}else e===k0&&this.group===X&&(this.value=t?this.multiplier.num.toString():Math.abs(this.multiplier.num.toString()),this.toUnitMultiplier(!t),this.group=k0);return this},insert:function(e,t){if(w0(e)||p("Object "+e+" is not of type Symbol!"),this.symbols){var f=this.group;if(f>F0){var l=e.keyForGroup(f),S=l in this.symbols?this.symbols[l]:!1;if(t==="add"){var E=l;S?(this.symbols[E]=y.add(S,e),this.symbols[E].multiplier.equals(0)&&(delete this.symbols[E],this.length--,this.length===0&&(this.convert(X),this.multiplier=new y0(0)))):(this.symbols[l]=e,this.length++)}else e.group===k0&&D(e.power)&&e.convert(X),e.group!==Y0?(this.multiplier=this.multiplier.multiply(e.multiplier),e.toUnitMultiplier()):(e.parens=e.multiplier.lessThan(0),this.multiplier=this.multiplier.multiply(e.multiplier.clone().abs()),e.toUnitMultiplier(!0)),S&&(e=y.multiply(H0(this.symbols,l),e),e.isConstant()&&(this.multiplier=this.multiplier.multiply(e.multiplier),e=new A(1)),this.length--),e.isOne(!0)?e.multiplier.lessThan(0)&&this.negate():(this.symbols[l]=e,this.length++);this.length===0&&this.convert(X),(this.group===e1||this.group===O0)&&this.updateHash()}}return this},attach:function(e){if(c1(e)){for(var t=0;t<e.length;t++)this.insert(e[t],"add");return this}return this.insert(e,"add")},combine:function(e){if(c1(e)){for(var t=0;t<e.length;t++)this.insert(e[t],"multiply");return this}return this.insert(e,"multiply")},updateHash:function(){if(this.group!==X)if(this.group===F0){for(var e="",t=this.args,f=this.fname===D1,l=0;l<t.length;l++)e+=(l===0?"":",")+B1(t[l]);var S=f?"":this.fname;this.value=S+(f?e:F(e))}else this.group===D0||this.group===x0||(this.value=B1(this,"hash"))},keyForGroup:function(e){var t=this.group,f;if(t===X)f=this.value;else if(t===D0||t===k0)e===x0?f=this.power.toDecimal():f=this.value;else if(t===F0)e===x0?f=this.power.toDecimal():f=B1(this,"hash");else{if(t===x0)return e===O0?f=B1(this,"hash"):e===e1?this.power.equals(1)?f=this.value:f=F(B1(this,"hash"))+U.POWER_OPERATOR+this.power.toDecimal():e===x0?f=this.power.toString():f=this.value,f;t===e1?(e===e1&&(f=B1(this,"hash")),e===x0?f=this.power.toDecimal():f=this.value):t===O0?e===x0?f=this.power.toDecimal():f=B1(this,"hash"):t===Y0&&(e===x0?f=B1(this.power):f=B1(this,"hash"))}return f},collectSymbols:function(e,t,f,l){var S=[];if(!this.symbols)S.push(this);else for(var E in this.symbols){var M=this.symbols[E];l&&(M.group===x0||M.group===e1)?S=S.concat(M.collectSymbols()):S.push(e?e(M,t):M)}return f===null&&(f=void 0),S.sort(f)},latex:function(e){return L1.latex(this,e)},text:function(e){return B1(this,e)},isOne:function(e){var t=e?"absEquals":"equals";return this.group===X?this.multiplier[t](1):this.power.equals(0)},isComposite:function(){var e=this.group,t=this.previousGroup;return e===e1||e===x0||t===x0||t===e1},isCombination:function(){var e=this.group,t=this.previousGroup;return e===O0||t===O0},lessThan:function(e){return this.multiplier.lessThan(e)},greaterThan:function(e){return w0(e)||(e=new A(e)),!this.isConstant(!0)||!e.isConstant(!0)?!1:this.multiplier.greaterThan(e.multiplier)},getDenom:function(){var e,t;if(t=this.clone(),this.group===O0&&this.power.lessThan(0)&&(t=y.expand(t)),t.power.lessThan(0)||t.group===Y0&&t.power.multiplier.lessThan(0)){var f=y.parse(t.multiplier.den);e=t.toUnitMultiplier(),e.power.negate(),e=y.multiply(f,e)}else if(t.group===O0){e=y.parse(t.multiplier.den);for(var l in t.symbols){var S=t.symbols[l];(S.power<0||S.group===Y0&&S.power.multiplier.lessThan(0))&&(e=y.multiply(e,t.symbols[l].clone().invert()))}}else e=y.parse(t.multiplier.den);return e},getNum:function(){var e,t;return t=this.clone(),t.group===O0&&t.power.lessThan(0)&&(t=y.expand(t)),t.power.greaterThan(0)&&t.group!==O0||t.group===Y0&&t.power.multiplier.greaterThan(0)?e=y.multiply(y.parse(t.multiplier.num),t.toUnitMultiplier()):t.group===O0?(e=y.parse(t.multiplier.num),t.each(function(f){(f.power>0||f.group===Y0&&f.power.multiplier>0)&&(e=y.multiply(e,f.clone()))})):e=y.parse(t.multiplier.num),e},toString:function(){return this.text()}};function Un(){var e=this,t={},f={names:[],actions:[]};function l(r,i){this.start=r,this.end=i}l.prototype.isConstant=function(){return this.start.isConstant()&&this.end.isConstant()},l.prototype.text=function(){return B1(this.start)+":"+B1(this.end)};function S(){this.elements=[]}S.prototype.append=function(r){this.elements.push(r)},S.prototype.getItems=function(){return this.elements},S.prototype.toString=function(){return e.pretty_print(this.elements)},S.create=function(r){var i=new S;return r&&i.append(r),i};function E(r,i,j){if(this.type=i,this.value=r,j!==void 0&&(this.column=j+1),i===E.OPERATOR){var C=l0[r];for(var V in C)this[V]=C[V]}else i===E.FUNCTION&&(this.precedence=E.MAX_PRECEDENCE,this.leftAssoc=!1)}E.prototype.toString=function(){return this.value},E.prototype.toString=function(){return this.is_prefix?"`"+this.value:this.value},E.OPERATOR="OPERATOR",E.VARIABLE_OR_LITERAL="VARIABLE_OR_LITERAL",E.FUNCTION="FUNCTION",E.UNIT="UNIT",E.KEYWORD="KEYWORD",E.MAX_PRECEDENCE=999,this.classes={Collection:S,Slice:l,Token:E};var M={prec:void 0,cos:function(r,i){var j,C;return j=e.parse(Math.cos(r)*Math.cosh(i)),C=e.parse(Math.sin(r)*Math.sinh(i)),e.subtract(j,e.multiply(C,A.imaginary()))},sin:function(r,i){var j,C;return j=e.parse(Math.sin(r)*Math.cosh(i)),C=e.parse(Math.cos(r)*Math.sinh(i)),e.subtract(j,e.multiply(C,A.imaginary()))},tan:function(r,i){var j,C;return j=e.parse(Math.sin(2*r)/(Math.cos(2*r)+Math.cosh(2*i))),C=e.parse(Math.sinh(2*i)/(Math.cos(2*r)+Math.cosh(2*i))),e.add(j,e.multiply(C,A.imaginary()))},sec:function(r,i){var j=this.removeDen(this.cos(r,i));return e.subtract(j[0],e.multiply(j[1],A.imaginary()))},csc:function(r,i){var j=this.removeDen(this.sin(r,i));return e.add(j[0],e.multiply(j[1],A.imaginary()))},cot:function(r,i){var j=this.removeDen(this.tan(r,i));return e.subtract(j[0],e.multiply(j[1],A.imaginary()))},acos:function(r,i){var j,C,V,J,s0,m0;return j=this.fromArray([r,i]),m0=e.pow(j.clone(),new A(2)),C=e.expand(m0),V=e.multiply(dn(e.subtract(new A(1),C)),A.imaginary()),J=e.expand(e.add(j.clone(),V)),s0=An(J),e.expand(e.multiply(A.imaginary().negate(),s0))},asin:function(r,i){return e.subtract(e.parse("pi/2"),this.acos(r,i))},atan:function(r,i){if(r.equals(0)&&(i.equals(1)||i.equals(-1)))return e.parse(`${A.infinity()}*${U.IMAGINARY}*${i}`);var j,C,V,J;return J=M.fromArray([r,i]),j=e.expand(e.multiply(A.imaginary(),J.clone())),C=An(e.expand(e.subtract(new A(1),j.clone()))),V=An(e.expand(e.add(new A(1),j.clone()))),e.expand(e.multiply(e.divide(A.imaginary(),new A(2)),e.subtract(C,V)))},asec:function(r,i){var j=this.removeDen([r,i]);return j[1].negate(),this.acos.apply(this,j)},acsc:function(r,i){var j=this.removeDen([r,i]);return j[1].negate(),this.asin.apply(this,j)},acot:function(r,i){var j=this.removeDen([r,i]);return j[1].negate(),this.atan.apply(this,j)},cosh:function(r,i){var j,C;return j=e.parse(Math.cosh(r)*Math.cos(i)),C=e.parse(Math.sinh(r)*Math.sin(i)),e.add(j,e.multiply(C,A.imaginary()))},sinh:function(r,i){var j,C;return j=e.parse(Math.sinh(r)*Math.cos(i)),C=e.parse(Math.cosh(r)*Math.sin(i)),e.add(j,e.multiply(C,A.imaginary()))},tanh:function(r,i){var j,C;return j=e.parse(Math.sinh(2*r)/(Math.cos(2*i)+Math.cosh(2*r))),C=e.parse(Math.sin(2*i)/(Math.cos(2*i)+Math.cosh(2*r))),e.subtract(j,e.multiply(C,A.imaginary()))},sech:function(r,i){var j=this.removeDen(this.cosh(r,i));return e.subtract(j[0],e.multiply(j[1],A.imaginary()))},csch:function(r,i){var j=this.removeDen(this.sinh(r,i));return e.subtract(j[0],e.multiply(j[1],A.imaginary()))},coth:function(r,i){var j=this.removeDen(this.tanh(r,i));return e.add(j[0],e.multiply(j[1],A.imaginary()))},acosh:function(r,i){var j,C,V;return V=this.fromArray([r,i]),j=dn(e.add(V.clone(),new A(1))),C=dn(e.subtract(V.clone(),new A(1))),e.expand(An(e.add(V,e.expand(e.multiply(j,C)))))},asinh:function(r,i){var j,C;return C=this.fromArray([r,i]),j=dn(e.add(new A(1),e.expand(e.pow(C.clone(),new A(2))))),e.expand(An(e.add(C,j)))},atanh:function(r,i){var j,C,V;return V=this.fromArray([r,i]),j=An(e.add(V.clone(),new A(1))),C=An(e.subtract(new A(1),V)),e.expand(e.divide(e.subtract(j,C),new A(2)))},asech:function(r,i){var j=this.removeDen([r,i]);return j[1].negate(),this.acosh.apply(this,j)},acsch:function(r,i){var j=this.removeDen([r,i]);return j[1].negate(),this.asinh.apply(this,j)},acoth:function(r,i){var j=this.removeDen([r,i]);return j[1].negate(),this.atanh.apply(this,j)},sqrt:function(r){var i,j,C,V,J;return i=r.realpart(),j=r.imagpart(),C=A.hyp(i,j),V=e.add(i.clone(),C),J=dn(e.multiply(new A(2),V.clone())),e.add(e.divide(V.clone(),J.clone()),e.multiply(e.divide(j,J),A.imaginary()))},log:function(r,i){var j,C,V;return j=An(A.hyp(r,i)),V=U.USE_BIG?A(K0.atan2(i.multiplier.toDecimal(),r.multiplier.toDecimal())):Math.atan2(i,r),C=e.parse(V),e.add(j,e.multiply(A.imaginary(),C))},erf(r,i){return e.symfunction("erf",[r])},removeDen:function(r){var i,j,C,V,J;return c1(r)?(j=r[0],C=r[1]):(j=r.realpart(),C=r.imagpart()),i=Math.pow(j,2)+Math.pow(C,2),V=e.parse(j/i),J=e.parse(C/i),[V,J]},fromArray:function(r){return e.add(r[0],e.multiply(A.imaginary(),r[1]))},evaluate:function(r,i){var j,C,V;if(V=r.power.sign(),r.power=r.power.abs(),r.power.greaterThan(1)&&(r=e.expand(r)),V<0){var J=this.removeDen(r);j=J[0],C=J[1]}else j=r.realpart(),C=r.imagpart();return j.isConstant("all")&&C.isConstant("all")?this[i].call(this,j,C):e.symfunction(i,[r])}},P=this.trig={cos:function(r){if(r.equals("pi")&&r.multiplier.den.equals(2))return new A(0);if(U.PARSE2NUMBER){if(r.equals(new A(U.PI/2)))return new A(0);if(r.isConstant())return U.USE_BIG?new A(K0.cos(r.multiplier.toDecimal())):new A(Math.cos(r.valueOf()));if(r.isImaginary())return M.evaluate(r,"cos")}if(r.equals(0))return new A(1);var i,j=!1,C=ne(r.multiplier.toDecimal()),V=r.multiplier.abs();if(r.multiplier=V,r.isPi()&&r.isLinear())if(D(V))i=new A(b0(V)?1:-1);else{Number(V.num);var J=Number(V.den);J===2?i=new A(0):J===3?(i=e.parse("1/2"),j=!0):J===4?(i=e.parse("1/sqrt(2)"),j=!0):J===6?(i=e.parse("sqrt(3)/2"),j=!0):i=e.symfunction("cos",[r])}return j&&(C===2||C===3)&&i.negate(),i||(i=e.symfunction("cos",[r])),i},sin:function(r){if(U.PARSE2NUMBER){if(r.isConstant())return r%Math.PI===0?new A(0):U.USE_BIG?new A(K0.sin(r.multiplier.toDecimal())):new A(Math.sin(r.valueOf()));if(r.isImaginary())return M.evaluate(r,"sin")}if(r.equals(0))return new A(0);var i,j=!1,C=ne(r.multiplier.toDecimal()),V=r.multiplier.sign(),J=r.multiplier.abs();if(r.multiplier=J,r.equals("pi"))i=new A(0);else if(r.isPi()&&r.isLinear())if(D(J))i=new A(0);else{J.num;var s0=J.den;s0==2?(i=new A(1),j=!0):s0==3?(i=e.parse("sqrt(3)/2"),j=!0):s0==4?(i=e.parse("1/sqrt(2)"),j=!0):s0==6?(i=e.parse("1/2"),j=!0):i=e.multiply(new A(V),e.symfunction("sin",[r]))}return i||(i=e.multiply(new A(V),e.symfunction("sin",[r]))),j&&(C===3||C===4)&&i.negate(),i},tan:function(r){if(U.PARSE2NUMBER){if(r%Math.PI===0&&r.isLinear())return new A(0);if(r.isConstant())return U.USE_BIG?new A(K0.tan(r.multiplier.toDecimal())):new A(Math.tan(r.valueOf()));if(r.isImaginary())return M.evaluate(r,"tan")}var i,j=!1,C=ne(r.multiplier.toDecimal()),V=r.multiplier;if(r.multiplier=V,r.isPi()&&r.isLinear())if(D(V))i=new A(0);else{V.num;var J=V.den;if(J==2)throw new w("tan is undefined for "+r.toString());J==3?(i=e.parse("sqrt(3)"),j=!0):J==4?(i=new A(1),j=!0):J==6?(i=e.parse("1/sqrt(3)"),j=!0):i=e.symfunction("tan",[r])}return i||(i=e.symfunction("tan",[r])),j&&(C===2||C===4)&&i.negate(),i},sec:function(r){if(U.PARSE2NUMBER)return r.isConstant()?U.USE_BIG?new A(new K0(1).dividedBy(K0.cos(r.multiplier.toDecimal()))):new A(W0.sec(r.valueOf())):r.isImaginary()?M.evaluate(r,"sec"):e.parse(k("1/cos({0})",r));var i,j=!1,C=ne(r.multiplier.toDecimal()),V=r.multiplier.abs();if(r.multiplier=V,r.isPi()&&r.isLinear())if(D(V))i=new A(b0(V)?1:-1);else{V.num;var J=V.den;if(J==2)throw new w("sec is undefined for "+r.toString());J==3?(i=new A(2),j=!0):J==4?(i=e.parse("sqrt(2)"),j=!0):J==6?(i=e.parse("2/sqrt(3)"),j=!0):i=e.symfunction("sec",[r])}return j&&(C===2||C===3)&&i.negate(),i||(i=e.symfunction("sec",[r])),i},csc:function(r){if(U.PARSE2NUMBER)return r.isConstant()?U.USE_BIG?new A(new K0(1).dividedBy(K0.sin(r.multiplier.toDecimal()))):new A(W0.csc(r.valueOf())):r.isImaginary()?M.evaluate(r,"csc"):e.parse(k("1/sin({0})",r));var i,j=!1,C=ne(r.multiplier.toDecimal()),V=r.multiplier.sign(),J=r.multiplier.abs();if(r.multiplier=J,r.isPi()&&r.isLinear()){if(D(J))throw new w("csc is undefined for "+r.toString());J.num;var s0=J.den;s0==2?(i=new A(1),j=!0):s0==3?(i=e.parse("2/sqrt(3)"),j=!0):s0==4?(i=e.parse("sqrt(2)"),j=!0):s0==6?(i=new A(2),j=!0):i=e.multiply(new A(V),e.symfunction("csc",[r]))}return i||(i=e.multiply(new A(V),e.symfunction("csc",[r]))),j&&(C===3||C===4)&&i.negate(),i},cot:function(r){if(U.PARSE2NUMBER)return r%(Math.PI/2)===0?new A(0):r.isConstant()?U.USE_BIG?new A(new K0(1).dividedBy(K0.tan(r.multiplier.toDecimal()))):new A(W0.cot(r.valueOf())):r.isImaginary()?M.evaluate(r,"cot"):e.parse(k("1/tan({0})",r));var i,j=!1,C=ne(r.multiplier.toDecimal()),V=r.multiplier;if(r.multiplier=V,r.isPi()&&r.isLinear()){if(D(V))throw new w("cot is undefined for "+r.toString());V.num;var J=V.den;J==2?i=new A(0):J==3?(i=e.parse("1/sqrt(3)"),j=!0):J==4?(i=new A(1),j=!0):J==6?(i=e.parse("sqrt(3)"),j=!0):i=e.symfunction("cot",[r])}return i||(i=e.symfunction("cot",[r])),j&&(C===2||C===4)&&i.negate(),i},acos:function(r){if(U.PARSE2NUMBER){if(r.isConstant()){if(r.gt(1)||r.lt(-1)){var i=r.toString();return On(_0(`pi/2-asin(${i})`))}return U.USE_BIG?new A(K0.acos(r.multiplier.toDecimal())):new A(Math.acos(r.valueOf()))}if(r.isImaginary())return M.evaluate(r,"acos")}return e.symfunction("acos",arguments)},asin:function(r){if(U.PARSE2NUMBER){if(r.isConstant()){if(r.gt(1)||r.lt(-1)){var i=U.IMAGINARY,j=r.multiplier.toDecimal();return On(_0(`${i}*log(sqrt(1-${j}^2)-${i}*${j})`))}return U.USE_BIG?new A(K0.asin(r.multiplier.toDecimal())):new A(Math.asin(r.valueOf()))}if(r.isImaginary())return M.evaluate(r,"asin")}return e.symfunction("asin",arguments)},atan:function(r){var i;if(r.equals(0))i=new A(0);else{if(U.PARSE2NUMBER)return r.isConstant()?U.USE_BIG?new A(K0.atan(r.multiplier.toDecimal())):new A(Math.atan(r.valueOf())):r.isImaginary()?M.evaluate(r,"atan"):e.symfunction("atan",arguments);r.equals(-1)?i=e.parse("-pi/4"):i=e.symfunction("atan",arguments)}return i},asec:function(r){if(U.PARSE2NUMBER){if(r.equals(0))throw new R("Input is out of the domain of sec!");if(r.isConstant())return P.acos(r.invert());if(r.isImaginary())return M.evaluate(r,"asec")}return e.symfunction("asec",arguments)},acsc:function(r){if(U.PARSE2NUMBER){if(r.isConstant())return P.asin(r.invert());if(r.isImaginary())return M.evaluate(r,"acsc")}return e.symfunction("acsc",arguments)},acot:function(r){if(U.PARSE2NUMBER){if(r.isConstant())return new e.add(e.parse("pi/2"),P.atan(r).negate());if(r.isImaginary())return M.evaluate(r,"acot")}return e.symfunction("acot",arguments)},atan2:function(r,i){if(r.equals(0)&&i.equals(0))throw new w("atan2 is undefined for 0, 0");return U.PARSE2NUMBER&&r.isConstant()&&i.isConstant()?new A(Math.atan2(r,i)):e.symfunction("atan2",arguments)}},p0=this.trigh={cosh:function(r){if(U.PARSE2NUMBER){if(r.isConstant())return new A(Math.cosh(r.valueOf()));if(r.isImaginary())return M.evaluate(r,"cosh")}return e.symfunction("cosh",arguments)},sinh:function(r){if(U.PARSE2NUMBER){if(r.isConstant())return new A(Math.sinh(r.valueOf()));if(r.isImaginary())return M.evaluate(r,"sinh")}return e.symfunction("sinh",arguments)},tanh:function(r){if(U.PARSE2NUMBER){if(r.isConstant())return new A(Math.tanh(r.valueOf()));if(r.isImaginary())return M.evaluate(r,"tanh")}return e.symfunction("tanh",arguments)},sech:function(r){return U.PARSE2NUMBER?r.isConstant()?new A(Math.sech(r.valueOf())):r.isImaginary()?M.evaluate(r,"sech"):e.parse(k("1/cosh({0})",r)):e.symfunction("sech",arguments)},csch:function(r){return U.PARSE2NUMBER?r.isConstant()?new A(Math.csch(r.valueOf())):r.isImaginary()?M.evaluate(r,"csch"):e.parse(k("1/sinh({0})",r)):e.symfunction("csch",arguments)},coth:function(r){return U.PARSE2NUMBER?r.isConstant()?new A(Math.coth(r.valueOf())):r.isImaginary()?M.evaluate(r,"coth"):e.parse(k("1/tanh({0})",r)):e.symfunction("coth",arguments)},acosh:function(r){var i;return U.PARSE2NUMBER&&r.isImaginary()?i=M.evaluate(r,"acosh"):U.PARSE2NUMBER?i=_0(e.parse(k(U.LOG+"(({0})+sqrt(({0})^2-1))",r.toString()))):i=e.symfunction("acosh",arguments),i},asinh:function(r){var i;return U.PARSE2NUMBER&&r.isImaginary()?i=M.evaluate(r,"asinh"):U.PARSE2NUMBER?i=_0(e.parse(k(U.LOG+"(({0})+sqrt(({0})^2+1))",r.toString()))):i=e.symfunction("asinh",arguments),i},atanh:function(r){var i;return U.PARSE2NUMBER&&r.isImaginary()?i=M.evaluate(r,"atanh"):U.PARSE2NUMBER?i=_0(e.parse(k("(1/2)*"+U.LOG+"((1+({0}))/(1-({0})))",r.toString()))):i=e.symfunction("atanh",arguments),i},asech:function(r){var i;return U.PARSE2NUMBER&&r.isImaginary()?i=M.evaluate(r,"asech"):U.PARSE2NUMBER?i=_0(An(e.add(r.clone().invert(),dn(e.subtract(e.pow(r,new A(-2)),new A(1)))))):i=e.symfunction("asech",arguments),i},acsch:function(r){var i;return U.PARSE2NUMBER&&r.isImaginary()?i=M.evaluate(r,"acsch"):U.PARSE2NUMBER?i=_0(e.parse(k(U.LOG+"((1+sqrt(1+({0})^2))/({0}))",r.toString()))):i=e.symfunction("acsch",arguments),i},acoth:function(r){var i;return U.PARSE2NUMBER&&r.isImaginary()?i=M.evaluate(r,"acoth"):U.PARSE2NUMBER?r.equals(1)?i=A.infinity():i=_0(e.divide(An(e.divide(e.add(r.clone(),new A(1)),e.subtract(r.clone(),new A(1)))),new A(2))):i=e.symfunction("acoth",arguments),i}};this.units={};var l0={"\\":{precedence:8,operator:"\\",action:"slash",prefix:!0,postfix:!1,leftAssoc:!0,operation:function(r){return r}},"!!":{precedence:7,operator:"!!",action:"dfactorial",prefix:!1,postfix:!0,leftAssoc:!0,operation:function(r){return e.symfunction(U.DOUBLEFACTORIAL,[r])}},"!":{precedence:7,operator:"!",action:"factorial",prefix:!1,postfix:!0,leftAssoc:!0,operation:function(r){return rn(r)}},"^":{precedence:6,operator:"^",action:"pow",prefix:!1,postfix:!1,leftAssoc:!0},"**":{precedence:6,operator:"**",action:"pow",prefix:!1,postfix:!1,leftAssoc:!0},"%":{precedence:4,operator:"%",action:"percent",prefix:!1,postfix:!0,leftAssoc:!0,overloaded:!0,overloadAction:"mod",overloadLeftAssoc:!1,operation:function(r){return e.divide(r,new A(100))}},"*":{precedence:4,operator:"*",action:"multiply",prefix:!1,postfix:!1,leftAssoc:!1},"/":{precedence:4,operator:"/",action:"divide",prefix:!1,postfix:!1,leftAssoc:!1},"+":{precedence:3,operator:"+",action:"add",prefix:!0,postfix:!1,leftAssoc:!1,operation:function(r){return r}},plus:{precedence:3,operator:"plus",action:"add",prefix:!0,postfix:!1,leftAssoc:!1,operation:function(r){return r}},"-":{precedence:3,operator:"-",action:"subtract",prefix:!0,postfix:!1,leftAssoc:!1,operation:function(r){return r.negate()}},"=":{precedence:2,operator:"=",action:"equals",prefix:!1,postfix:!1,leftAssoc:!1},"==":{precedence:1,operator:"==",action:"eq",prefix:!1,postfix:!1,leftAssoc:!1},"<":{precedence:1,operator:"<",action:"lt",prefix:!1,postfix:!1,leftAssoc:!1},"<=":{precedence:1,operator:"<=",action:"lte",prefix:!1,postfix:!1,leftAssoc:!1},">":{precedence:1,operator:">",action:"gt",prefix:!1,postfix:!1,leftAssoc:!1},"=>":{precedence:1,operator:"=>",action:"gte",prefix:!1,postfix:!1,leftAssoc:!1},",":{precedence:0,operator:",",action:"comma",prefix:!1,postfix:!1,leftAssoc:!1},":":{precedence:0,operator:",",action:"assign",prefix:!1,postfix:!1,leftAssoc:!1,vectorFn:"slice"},":=":{precedence:0,operator:",",action:"function_assign",prefix:!1,postfix:!1,leftAssoc:!0}},h0={"(":{type:"round",id:1,is_open:!0,is_close:!1},")":{type:"round",id:2,is_open:!1,is_close:!0},"[":{type:"square",id:3,is_open:!0,is_close:!1,maps_to:"vector"},"]":{type:"square",id:4,is_open:!1,is_close:!0},"{":{type:"curly",id:5,is_open:!0,is_close:!1,maps_to:"Set"},"}":{type:"curly",id:6,is_open:!1,is_close:!0}},t1=this.functions={cos:[P.cos,1],sin:[P.sin,1],tan:[P.tan,1],sec:[P.sec,1],csc:[P.csc,1],cot:[P.cot,1],acos:[P.acos,1],asin:[P.asin,1],atan:[P.atan,1],arccos:[P.acos,1],arcsin:[P.asin,1],arctan:[P.atan,1],asec:[P.asec,1],acsc:[P.acsc,1],acot:[P.acot,1],atan2:[P.atan2,2],acoth:[p0.acoth,1],asech:[p0.asech,1],acsch:[p0.acsch,1],sinh:[p0.sinh,1],cosh:[p0.cosh,1],tanh:[p0.tanh,1],asinh:[p0.asinh,1],sech:[p0.sech,1],csch:[p0.csch,1],coth:[p0.coth,1],acosh:[p0.acosh,1],atanh:[p0.atanh,1],log10:[,1],exp:[sn,1],radians:[hn,1],degrees:[zn,1],min:[he,-1],max:[ue,-1],erf:[,1],floor:[,1],ceil:[,1],trunc:[,1],Si:[,1],step:[,1],rect:[,1],sinc:[nn,1],tri:[,1],sign:[Gn,1],Ci:[,1],Ei:[,1],Shi:[,1],Chi:[,1],Li:[,1],fib:[,1],fact:[rn,1],factorial:[rn,1],continued_fraction:[F1,[1,2]],dfactorial:[,1],gamma_incomplete:[,[1,2]],round:[Dn,[1,2]],scientific:[_n,[1,2]],mod:[qn,2],pfactor:[Bn,1],vector:[n2,-1],matrix:[e2,-1],Set:[r2,-1],imatrix:[oe,-1],parens:[$1,-1],sqrt:[dn,1],cbrt:[Sn,1],nthroot:[jn,2],log:[An,[1,2]],expand:[ae,1],abs:[an,1],invert:[f2,1],determinant:[t2,1],size:[i2,1],transpose:[u2,1],dot:[a2,2],cross:[s2,2],vecget:[Pn,2],vecset:[ve,3],vectrim:[Vn,[1,2]],matget:[qe,3],matset:[Ke,4],matgetrow:[Ye,2],matsetrow:[Qe,3],matgetcol:[We,2],matsetcol:[Je,3],rationalize:[Tn,1],IF:[Fn,3],is_in:[Nn,2],realpart:[Xn,1],imagpart:[Yn,1],conjugate:[Qn,1],arg:[Wn,1],polarform:[ie,1],rectform:[Jn,1],sort:[fe,[1,2]],integer_part:[,1],union:[o2,2],contains:[c2,2],intersection:[l2,2],difference:[p2,2],intersects:[h2,2],is_subset:[v2,2],print:[g2,-1]};this.error=p;var I0=function(r){for(var i=U.FUNCTION_MODULES,j=i.length,C=0;C<j;C++){var V=i[C];if(r in V)return V[r]}p("The function "+r+" is undefined!")};this.override=function(r,i){t[r]||(t[r]=[]),t[r].push(this[r]),this[r]=i},this.restore=function(r){this[r]&&(this[r]=t[r].pop())},this.extend=function(r,i,j){var C=this,V=this[r];if(typeof V=="function"&&typeof i=="function"){var J=this[r];this[r]=function(s0,m0){return w0(s0)&&w0(m0)&&!j?J.call(C,s0,m0):i.call(C,s0,m0,J)}}},this.symfunction=function(r,i){var j=new A(r);return j.group=F0,typeof i=="object"&&(i=[].slice.call(i)),j.args=i,j.fname=r===D1?"":r,j.updateHash(),j},this.callfunction=function(r,i,j){var C=t1[r];C||p("Nerdamer currently does not support the function "+r);var V=C[1]||j,J=C[0],s0;if(i instanceof Array||(i=i!==void 0?[i]:[]),V!==-1){var m0=c1(V),U0=m0?V[0]:V,L0=m0?V[1]:V,o1=i.length,S0=r+" requires a {0} of {1} arguments. {2} provided!";o1<U0&&p(k(S0,"minimum",U0,o1)),o1>L0&&p(k(S0,"maximum",L0,o1))}var E1=o(i);return J?s0=J.apply(C[2],i):(J=I0(r),U.PARSE2NUMBER&&E1?s0=Cn(J.apply(J,i)):s0=e.symfunction(r,i)),s0},this.operator_filter_regex=function(){var r="^\\"+Object.keys(l0).filter(function(i){if(i.length===1)return i}).join("\\");return new RegExp("(["+r+"])\\s+(["+r+"])")}(),this.setOperator=function(r,i,j){var C=r.operator;if(l0[C]=r,i&&(this[r.action]=i),e[C]=r.operation,!r.action&&!(r.prefix||r.postif)&&(r.action=C),j==="over"||j==="under"){var V=r.precedence;for(var J in l0){var s0=l0[J],m0=j==="over"?s0.precedence>=V:s0.precedence>V;m0&&s0.precedence++}}},this.getOperator=function(r){return l0[r]},this.aliasOperator=function(r,i){var j={},C=l0[r];for(var V in C)j[V]=C[V];j.operator=i,this.setOperator(j)},this.getOperators=function(){return l0},this.getBrackets=function(){return h0};var G0=function(r){r=String(r);for(var i=0;i<f.actions.length;i++)r=f.actions[i].call(this,r);for(r=r.replace(/\s+/g," "),/e/gi.test(r)&&(r=r.replace(/\-*\d+\.*\d*e\+?\-?\d+/gi,function(C){return G(C)})),r=r.replace(U.IMPLIED_MULTIPLICATION_REGEX,function(){var C=arguments[4],V=arguments[1],J=arguments[2],s0=arguments[3],m0=C.charAt(s0),U0="",L0="*";return m0.match(/[\+\-\/\*]/)||(U0=C.charAt(s0-1)),U0.match(/[a-z]/i)&&(L0=""),V+L0+J}).replace(/([a-z0-9_]+)/gi,function(C,V){return U.USE_MULTICHARACTER_VARS===!1&&!(V in t1)&&isNaN(V)?V.split("").join("*"):V}).replace(/\)\(/g,")*(")||"0";;){var j=r;if(r=r.replace(/([a-z0-9_]+)(\()|(\))([a-z0-9]+)/gi,function(C,V,J,s0,m0){var U0=V||s0,L0=J||m0;return U0 in t1?U0+L0:U0+"*"+L0}),j===r)break}return r};this.initConstants=function(){this.CONSTANTS={E:new A(U.E),PI:new A(U.PI)}},this.pretty_print=function(r){if(Array.isArray(r)){var i=r.map(j=>e.pretty_print(j)).join(", ");return r.type==="vector"?"vector<"+i+">":"("+i+")"}return r.toString()},this.peekers={pre_operator:[],post_operator:[],pre_function:[],post_function:[]},this.callPeekers=function(r){if(U.callPeekers)for(var i=this.peekers[r],j=T1(arguments).slice(1).map(r0),C=0;C<i.length;C++)i[C].apply(null,j)},this.tokenize=function(r){r=String(r),r=r.trim().replace(/\s+/g," ");for(var i in h0){var j=new RegExp(h0[i].is_close?"\\s+\\"+i:"\\"+i+"\\s+","g");r=r.replace(j,i)}for(var C=0,V=r.length,J=0,s0=[],m0=[s0],U0=m0[0],L0=0,o1=[],S0=!1,E1=" ",z1="",b1=",",U1="-",J1="*",en=function(wn,yn){var bn=[];wn!==void 0&&(bn.type=wn),bn.column=yn,m0.push(bn),U0.push(bn),U0=bn,L0++},Q0=function(){m0.pop(),U0=m0[--L0]},A1=function(wn){wn=wn!==void 0?wn:C;for(var yn=wn+1;r.charAt(yn++)in l0;);return r.substring(wn,yn-1)},tn=function(wn){for(var yn=C-wn.length,bn=[],Kn=wn.charAt(0),se=1,de=wn.length;se<de;se++){var we=wn.charAt(se),te=Kn+we;te in l0?Kn=te:(bn.push(new E(Kn,E.OPERATOR,yn+se)),Kn=we)}return bn.push(new E(Kn,E.OPERATOR,yn+se)),bn},H1=function(wn,yn){yn===void 0&&(yn=r.substring(J,wn)),yn in e.units?U0.push(new E(yn,E.UNIT,J)):yn!==""&&U0.push(new E(yn,E.VARIABLE_OR_LITERAL,J))},un=function(wn){U0.push(new E(wn,E.FUNCTION,J))},vn=function(wn){J=wn+1},on=function(){J=J+Mn.length-2,C=J-1};C<V;C++){var cn=r.charAt(C);if(cn in l0){H1(C);var mn=U0[0]&&j0(U0[0]),Rn=mn&&cn===J1;S0&&J<C&&!(cn===b1||Rn)&&(S0=!1,Q0()),vn(C+1);var Mn=A1(C);on(),U0.push.apply(U0,tn(Mn))}else if(cn in h0){var In=h0[cn];if(In.is_open){o1.push([In,J]);var Ln=r.substring(J,C);Ln in t1?un(Ln):Ln!==""&&U0.push(new E(Ln,E.VARIABLE_OR_LITERAL,J)),en(In.maps_to,C)}else if(In.is_close){var ee=o1.pop();if(ee){if(ee[0].id!==In.id-1)throw new e0("Parity error")}else throw new e0("Missing open bracket for bracket at: "+(C+1));H1(C),Q0()}vn(C)}else if(cn===E1){var En=r.substring(J,C),Hn=r.charAt(C+1);if(S0){if(En in l0)U0.push(new E(En,E.OPERATOR,C));else{H1(void 0,En),Q0();var re=Hn in l0;(re&&l0[Hn].value===U1||!re)&&U0.push(new E(J1,E.OPERATOR,C))}S0=!1}else{var Ln=r.substring(J,C);if(Ln in t1)S0=!0,un(Ln),en();else if(Ln in l0)U0.push(new E(Ln,E.OPERATOR,C));else{H1(void 0,Ln);var Hn=r.charAt(C+1);En!==z1&&Hn!==z1&&!(En in l0)&&!(Hn in l0)&&U0.push(new E(J1,E.OPERATOR,C))}}vn(C)}}if(o1.length){var $n=o1.pop();throw new e0("Missing closed bracket for bracket at "+($n[1]+1))}return H1(C),s0},this.toRPN=function(r){var i=r.type,j=r.length,C,V=[],J=[],s0=[],m0=function(J1,en){for(;J1.length;)en.push(J1.pop())};for(C=0;C<j;C++){var U0=r[C];if(U0.type!==E.OPERATOR)break;if(!U0.prefix)throw new Y("Not a prefix operator");U0.is_prefix=!0,J.push(U0)}for(;C<j;C++){var L0=r[C];if(L0.type===E.OPERATOR){var o1=L0;if(o1.overloaded){var S0=r[C+1];S0&&S0.type===E.VARIABLE_OR_LITERAL&&(o1.postfix=!1,o1.action=o1.overloadAction,o1.leftAssoc=o1.overloadLeftAssoc)}for(;J.length;){var E1=J[J.length-1];if(!(E1.precedence>o1.precedence||!o1.leftAssoc&&E1.precedence===o1.precedence))break;V.push(J.pop())}if((i==="vector"||i==="set")&&"vectorFn"in o1&&(o1.action=o1.vectorFn),o1.postfix){var z1=r[C-1];if(z1){if(z1.type===E.OPERATOR&&!z1.postfix)throw new Y("Unexpected prefix operator '"+z1.value+"'! at "+z1.column)}else throw new Y("Unexpected prefix operator '"+L0.value+"'! at "+L0.column)}else do{var S0=r[C+1],b1=S0?S0.type===E.OPERATOR:!1;if(b1){if(!S0.prefix)throw new Y("A prefix operator was expected at "+S0.column);S0.is_prefix=!0,s0.push(S0),C++}}while(b1);for(o1.is_prefix?s0.push(o1):J.push(o1);s0.length&&(o1.leftAssoc||!o1.leftAssoc&&s0[s0.length-1].precedence>=o1.precedence);)J.push(s0.pop())}else if(L0.type===E.VARIABLE_OR_LITERAL){V.length===0&&m0(s0,J),V.push(L0);var U1=J[J.length-1];(!U1||!U1.leftAssoc)&&m0(s0,V)}else L0.type===E.FUNCTION?J.push(L0):L0.type===E.UNIT&&V.push(L0);Array.isArray(L0)&&(V.push(this.toRPN(L0)),L0.type&&V.push(new E(L0.type,E.FUNCTION,L0.column)))}return m0(J,V),m0(s0,V),V},this.parseRPN=function(r,i){try{i=i||{};for(var j in i)i[j]=e.parse(i[j],{});U.PARSE2NUMBER&&("e"in i||(i.e=new A(U.E)),"pi"in i||(i.pi=new A(U.PI)));for(var C=[],V=0,J=r.length;V<J;V++){var s0=r[V];if(Array.isArray(s0)&&(s0=this.parseRPN(s0,i)),s0)if(s0.type===E.OPERATOR)if(s0.is_prefix||s0.postfix)C.push(s0.operation(C.pop()));else{var m0=C.pop(),U0=C.pop();if(typeof U0>"u")throw new Y(s0+" is not a valid postfix operator at "+s0.column);var L0=s0.action==="comma";U0 instanceof V1&&!L0&&(U0=K1.fromSet(U0)),m0 instanceof V1&&!L0&&(m0=K1.fromSet(m0)),this.callPeekers("pre_operator",U0,m0,s0);var o1=e[s0.action](U0,m0);this.callPeekers("post_operator",o1,U0,m0,s0),C.push(o1)}else if(s0.type===E.FUNCTION){var S0=C.pop(),E1=S0.parent;S0 instanceof S||(S0=S.create(S0));var z1=s0.value,b1=S0.getItems();this.callPeekers("pre_function",z1,b1);var U1=e.callfunction(z1,b1);this.callPeekers("post_function",U1,z1,b1);var J1=C[C.length-1],en=r[V+1],Q0=en&&en.type===E.OPERATOR&&en.value===",";if(!Q0&&U1 instanceof K1&&J1&&J1.elements&&!(J1 instanceof S)){var A1=C.pop(),tn=U1.elements[0];if(!tn.isConstant())A1.getter=tn,C.push(A1),C.push(U1);else if(tn instanceof l)C.push(K1.fromArray(A1.elements.slice(tn.start,tn.end)));else{var H1=Number(tn),un=A1.elements.length;if(H1<0&&(H1=un+H1),H1<0||H1>=un)throw new d0("Index out of range "+(s0.column+1));var vn=A1.elements[H1];A1.getter=H1,vn.parent=A1,C.push(vn)}}else E1&&(U1.parent=E1),C.push(U1)}else{var on,cn=s0.value;cn in U.ALIASES?s0=e.parse(U.ALIASES[s0]):s0.type===E.VARIABLE_OR_LITERAL?s0=new A(cn):s0.type===E.UNIT&&(s0=new A(cn),s0.isUnit=!0),cn in e.CONSTANTS?(on=s0,s0=new A(e.CONSTANTS[cn])):cn in i&&cn!==i[cn].toString()?(on=s0,s0=i[cn].clone()):cn in s&&(on=s0,s0=s[cn].clone()),on&&(s0.subbed=on),C.push(s0)}}var mn=C[0];if(["undefined","string","number"].indexOf(typeof mn)!==-1)throw new fn("Unexpected token!");return mn}catch(Mn){var Rn=[R];throw Rn.forEach(function(In){if(Mn instanceof In)throw new In(Mn.message+": "+s0.column)}),new I(Mn.message+": "+s0.column)}};function m1(r){this.type=r.type,this.value=r.value,this.left=r.left,this.right=r.right}m1.prototype.toString=function(){var r=this.left?this.left.toString()+"---":"",i=this.right?"---"+this.right.toString():"";return r+"("+this.value+")"+i},m1.prototype.toHTML=function(r,i){r=r||0,i=typeof i>"u"?4:i;var j=function(s0){return" ".repeat(i*s0)},J="",C=this.left?j(r+1)+`<li>
`+this.left.toHTML(r+2,i)+j(r+1)+`</li> 
`:"",V=this.right?j(r+1)+`<li>
`+this.right.toHTML(r+2,i)+j(r+1)+`</li>
`:"",J=j(r)+'<div class="'+this.type.toLowerCase()+'"><span>'+this.value+"</span></div>"+j(r)+`
`;return(C||V)&&(J+=j(r)+`<ul>
`+C+V+j(r)+`</ul>
`),J+="",J},this.tree=function(r){for(var i=[],j=0;j<r.length;j++){var C=r[j];if(Array.isArray(C)){C=this.tree(C),i.push(C);continue}if(C.type===E.OPERATOR)if(C.is_prefix||C.postfix){var V=C.is_prefix?"left":"right",J=i.pop();C=new m1(C),C[V]=J,i.push(C)}else C=new m1(C),C.right=i.pop(),C.left=i.pop(),i.push(C);else if(C.type===E.FUNCTION){C=new m1(C);var s0=i.pop();if(C.right=s0,C.value==="object"){var J=i[i.length-1];if(J){for(;J.right;)J=J.right;J.right=C;continue}}i.push(C)}else i.push(new m1(C))}return i[0]},this.parse=function(r,i){r=G0(r),i=i||{};var j=this.tokenize(r),C=this.toRPN(j);return this.parseRPN(C,i)},this.toObject=function(r){var i=function(j){for(var C=[],V=0,J=j.length;V<J;V++){var s0=j[V],m0=s0.value;if(s0.type===E.VARIABLE_OR_LITERAL)C.push(new A(m0));else if(s0.type===E.FUNCTION){V++;var U0=e.symfunction(m0,i(j[V]));U0.isConversion=!0,C.push(U0)}else s0.type===E.OPERATOR?C.push(m0):C.push(i(s0))}return C};return i(e.tokenize(r))};var q1=function(r){for(var i,j=0,C=[[]],i=0,V=r.length;i<V;i++)r[i]===","?(j++,C[j]=[]):C[j].push(r[i]);return C},_1=function(r){return r.replace(/^\\left\((.+)\\right\)$/g,function(i,j){return j||i})},Y1=function(r){for(var i=[];r.length;){var j=r.shift(),C=r[0],V=c1(C),J=C==="-";if(j==="^"&&(C==="+"?r.shift():V&&C[0]==="+"&&C.shift(),V&&C.length===1&&r.unshift(r.shift()[0])),j==="^"&&(V&&C[0]==="-"||J)){var s0=i.pop(),m0=i[i.length-1],U0="1";m0==="*"?(i.pop(),U0=i.pop()):c1(m0)&&(U0=i.pop()),i.push(U0,"/",s0,j),V?C.shift():r.shift(),V&&C.length===1&&i.push(r.shift()[0])}else i.push(j)}return i};this.toTeX=function(r,i){i=i||{};var j=i.decimals===!0?"decimals":void 0,C=typeof r=="string"?this.toObject(r):r,V=[],J=typeof i.cdot>"u"?"\\cdot":i.cdot;if(C=Y1(C),c1(C)){for(var s0=[],m0,U0,L0=0;L0<C.length;L0++)m0=C[L0],C[L0+1]==="^"?(U0=C[L0+2],s0.push(L1.braces(this.toTeX([m0]))+"^"+L1.braces(this.toTeX([U0]))),L0+=2):s0.push(m0);C=s0}for(var L0=0,o1=C.length;L0<o1;L0++){var S0=C[L0];if(S0==="*"&&(S0=J),w0(S0))if(S0.group===F0){var E1=S0.fname,z1;if(E1===Q1)z1="\\sqrt"+L1.braces(this.toTeX(S0.args));else if(E1===M1)z1=L1.brackets(this.toTeX(S0.args),"abs");else if(E1===D1)z1=L1.brackets(this.toTeX(S0.args),"parens");else if(E1===U.LOG10)z1="\\"+U.LOG10_LATEX+"\\left( "+this.toTeX(S0.args)+"\\right)";else if(E1==="integrate"){var b1=q1(S0.args),U1=L1.braces(this.toTeX(b1[0])),J1=this.toTeX(b1[1]);z1="\\int "+U1+"\\, d"+J1}else if(E1==="defint"){var b1=q1(S0.args),U1=L1.braces(this.toTeX(b1[0])),J1=this.toTeX(b1[3]),en=this.toTeX(b1[1]),Q0=this.toTeX(b1[2]);z1="\\int\\limits_{"+en+"}^{"+Q0+"} "+U1+"\\, d"+J1}else if(E1==="diff"){var b1=q1(S0.args),J1="",U1=L1.braces(this.toTeX(b1[0]));if(b1.length===1){var A1=[];for(H1=0;H1<b1[0].length;H1++)b1[0][H1].group===3&&A1.push(b1[0][H1].value);A1.sort(),J1=A1.length>0?"\\frac{d}{d "+A1[0]+"}":"\\frac{d}{d x}"}else b1.length===2?J1="\\frac{d}{d "+b1[1]+"}":J1="\\frac{d^{"+b1[2]+"}}{d "+this.toTeX(b1[1])+"^{"+b1[2]+"}}";z1=J1+"\\left("+U1+"\\right)"}else if(E1==="sum"||E1==="product"){var tn=[[],[],[],[]],H1=0,L0;for(L0=0;L0<S0.args.length;L0++){if(S0.args[L0]===","){H1++;continue}tn[H1].push(S0.args[L0])}z1=(E1==="sum"?"\\sum_":"\\prod_")+L1.braces(this.toTeX(tn[1])+" = "+this.toTeX(tn[2])),z1+="^"+L1.braces(this.toTeX(tn[3]))+L1.braces(this.toTeX(tn[0]))}else if(E1==="limit"){var un=q1(S0.args).map(function(on){return Array.isArray(on)?e.toTeX(on.join("")):e.toTeX(String(on))});z1="\\lim_"+L1.braces(un[1]+"\\to "+un[2])+" "+L1.braces(un[0])}else E1===N1||E1===x1?z1=this.toTeX(S0.args)+(E1===N1?"!":"!!"):z1=L1.latex(S0,j);V.push(z1)}else V.push(L1.latex(S0,j));else c1(S0)?V.push(L1.brackets(this.toTeX(S0))):S0==="/"?V.push(L1.frac(_1(V.pop()),_1(this.toTeX([C[++L0]])))):V.push(S0)}return V.join(" ")};function $1(r){return U.PARSE2NUMBER?r:e.symfunction("parens",[r])}function an(r){if(r.isInfinity)return A.infinity();if(r.multiplier.lessThan(0)&&r.multiplier.negate(),r.isImaginary()){var i=r.realpart(),j=r.imagpart();if(i.isConstant()&&j.isConstant())return dn(e.add(e.pow(i,new A(2)),e.pow(j,new A(2))))}else if(R1(r)||b0(r.power))return r;if(r.isComposite()){var C=[];r.each(function(s0){C.push(s0.multiplier)});var V=W0.QGCD.apply(null,C);V.lessThan(0)&&(r.multiplier=r.multiplier.multiply(new y0(-1)),r.distributeMultiplier())}var J=e.parse(r.multiplier);return r.toUnitMultiplier(),e.multiply(J,e.symfunction(M1,[r]))}function rn(r){var i;if(s1(r)){var j=new K1;return r.each(function(o1,S0){j.set(S0-1,rn(o1))}),j}if(P0(r)){var C=new f1;return r.each(function(o1,S0,E1){C.set(S0,E1,rn(o1))}),C}if(U.PARSE2NUMBER&&r.isConstant())return D(r)?i=W0.bigfactorial(r):i=W0.gamma(r.multiplier.add(new y0(1)).toDecimal()),i=Cn(i),i;if(r.isConstant()){var V=r.getDenom();if(V.equals(2)){var J=r.getNum(),s0,m0,U0,L0;return r.multiplier.isNegative()?(L0=e.subtract(J.negate(),new A(1)).multiplier.divide(new y0(2)),s0=e.pow(new A(-4),new A(L0)).multiplier.multiply(W0.bigfactorial(L0)),m0=W0.bigfactorial(new y0(2).multiply(L0))):(L0=e.add(J,new A(1)).multiplier.divide(new y0(2)),s0=W0.bigfactorial(new y0(2).multiply(L0)),m0=e.pow(new A(4),new A(L0)).multiplier.multiply(W0.bigfactorial(L0))),U0=s0.divide(m0),e.multiply(e.parse("sqrt(pi)"),new A(U0))}}return e.symfunction(N1,[r])}function F1(r,i){var j=_0(r);if(j.isConstant()){var C=W0.continuedFraction(j,i),V=K1.fromArray(C.fractions.map(function(J){return new A(J)}));return K1.fromArray([new A(C.sign),new A(C.whole),V])}return e.symfunction("continued_fraction",arguments)}function qn(r,i){if(r.isConstant()&&i.isConstant()){var j=new A(1);return j.multiplier=j.multiplier.multiply(r.multiplier.mod(i.multiplier)),j}var C=e.divide(r.clone(),i.clone());return D(C)?new A(0):e.symfunction("mod",[r,i])}function Fn(r,i,j){return typeof r!="boolean"&&R1(r)&&(r=!!Number(r)),r?i:j}function Nn(r,i){if(P0(r))for(var j=0,C=r.rows();j<C;j++)for(var V=0,J=r.cols();V<J;V++){var s0=r.elements[j][V];if(s0.equals(i))return new A(1)}else if(r.elements){for(var j=0,C=r.elements.length;j<C;j++)if(r.elements[j].equals(i))return new A(1)}return new A(0)}function nn(r){return U.PARSE2NUMBER?r.isConstant()?new A(W0.sinc(r)):e.parse(k("sin({0})/({0})",r)):e.symfunction("sinc",[r])}function sn(r){return r.fname===U.LOG&&r.isLinear()?e.pow(r.args[0],A.create(r.multiplier)):e.parse(k("e^({0})",r))}function hn(r){return e.parse(k("({0})*pi/180",r))}function zn(r){return e.parse(k("({0})*180/pi",r))}function Tn(r){if(r.isComposite()){var i=new A(0),j,C,V,J,s0,m0,U0,L0;return r.each(function(o1){j=o1.getNum(),C=o1.getDenom(),V=i.getNum(),J=i.getDenom(),s0=e.multiply(C,V),m0=e.multiply(j,J),U0=e.expand(e.add(s0,m0)),L0=e.multiply(J,C),i=e.divide(U0,L0)},!0),i}return r}function dn(r){if(w0(r)||(r=e.parse(r)),r.group===Y0)return e.symfunction(Q1,[r]);r.fname===""&&r.power.equals(1)&&(r=r.args[0]);var i=r.multiplier.sign()<0;if(U.PARSE2NUMBER){if(r.isConstant()&&!i)return new A(K0.sqrt(r.multiplier.toDecimal()));if(r.isImaginary())return M.sqrt(r);if(r.group===D0)return e.symfunction("sqrt",[r])}var j,C,V=r.isConstant();if(r.group===O0&&r.isLinear()){var J=dn(A(r.multiplier));for(var s0 in r.symbols){var m0=r.symbols[s0];J=e.multiply(J,dn(m0))}C=J}else if(r.fname===Q1){var s0=r.args[0],U0=r.multiplier;s0.setPower(r.power.multiply(new y0(.25))),C=s0,U0.equals(1)||(C=e.multiply(dn(e.parse(U0)),C))}else if(!r.power.isInteger())r.setPower(r.power.multiply(new y0(.5))),C=r;else if(r.multiplier<0&&r.group===D0){var L0=e.parse(r.multiplier).negate(),o1=e.parse(r).toUnitMultiplier().negate();C=e.multiply(e.symfunction(U.SQRT,[o1]),dn(L0))}else{var S0=r.power.sign();r.power=r.power.abs(),V&&r.multiplier.lessThan(0)&&(j=A.imaginary(),r.multiplier=r.multiplier.abs());var E1=r.multiplier.toDecimal(),z1=Math.abs(E1),b1=Math.sqrt(z1),J;if(D(b1))J=new A(b1);else if(D(E1)){var U1=W0.ifactor(E1),J1=1;for(var m0 in U1){var en=U1[m0],Q0=en-en%2;if(Q0){var A1=Math.pow(m0,Q0);J1*=Math.pow(m0,Q0/2),E1/=A1}}J=e.multiply(e.symfunction(Q1,[new A(E1)]),new A(J1))}else{for(var tn=[new A(r.multiplier.num),new A(r.multiplier.den)],H1=[new A(1),new A(1)],un=[new A(1),new A(1)],vn=0;vn<2;vn++){var en=tn[vn];Bn(en).each(function(mn){mn=A.unwrapPARENS(mn);var Rn=mn.clone().toLinear(),Mn=Number(mn.power),In=Mn%2,Ln=(Mn-In)/2;H1[vn]=e.multiply(H1[vn],e.pow(Rn,new A(Ln))),un[vn]=e.multiply(un[vn],dn(e.pow(Rn,new A(In))))})}J=e.divide(e.multiply(H1[0],un[0]),e.multiply(H1[1],un[1]))}r=r.toUnitMultiplier(!0),r.isOne()?C=r:b0(r.power.toString())?C=e.pow(r.clone(),new A(.5)):C=e.symfunction(Q1,[r]),S0<0&&C.power.negate(),J&&(C=e.multiply(J,C)),j&&(C=e.multiply(j,C))}return i&&U.PARSE2NUMBER?e.parse(C):C}function Sn(r){if(!r.isConstant(!0)){var i,j=r.power/3,C=e.pow(e.parse(r.multiplier),new A(1/3)),V=r.toUnitMultiplier();return D(j)?i=e.pow(V.toLinear(),e.parse(j)):V.group===O0?(i=new A(1),V.each(function(J){i=e.multiply(i,Sn(J))})):i=e.symfunction("cbrt",[V]),e.multiply(C,i)}return jn(r,new A(3))}function _n(r,i){return r.scientific=i||10,r}function jn(r,i,j,C){if(i=_0(e.parse(i)),i.equals(0))throw new w("Unable to calculate nthroots of zero");if(r<0&&b0(i))throw new Error("Cannot calculate nthroot of negative number for even powers");if(!r.isConstant(!0))return e.symfunction("nthroot",arguments);r.group!==X&&(r=_0(r)),typeof C>"u"&&(C=!0),j=j||25;var V=r.sign(),J,s0;if(V<0&&(r=an(r)),D(r)&&i.isConstant()){r<18446744073709552e3?s0=y0.create(Math.pow(r,1/i)):s0=W0.nthroot(r,i);var J;return C&&(J=new A(s0)),J=new A(s0.toDecimal(j)),e.multiply(new A(V),J)}}function Bn(r){if(r.greaterThan(9999999999998891e26)||r.equals(-1))return r;if(r.equals(Math.PI))return new A(Math.PI);if(r=_0(r.clone()),r.isConstant()){var i=new A(1),j=r.toString();if(D(j)){var C=W0.ifactor(j);for(var V in C){var J=C[V];i=e.multiply(i,e.symfunction("parens",[new A(V).setPower(new y0(J))]))}}else{var s0=Bn(new A(r.multiplier.num)),m0=Bn(new A(r.multiplier.den));i=e.multiply(e.symfunction("parens",[s0]),e.symfunction("parens",[m0]).invert())}}else i=e.symfunction("pfactor",arguments);return i}function Xn(r){return r.realpart()}function Yn(r){return r.imagpart()}function Qn(r){var i=r.realpart(),j=r.imagpart();return e.add(i,e.multiply(j.negate(),A.imaginary()))}function Wn(r){var i=r.realpart(),j=r.imagpart();return i.isConstant()&&j.isConstant()?j.equals(0)&&i.equals(-1)?e.parse("pi"):j.equals(1)&&i.equals(0)?e.parse("pi/2"):j.equals(1)&&i.equals(1)?e.parse("pi/4"):new A(Math.atan2(j,i)):e.symfunction("atan2",[j,i])}function ie(r){var i,j,C,V;return i=A.toPolarFormArray(r),V=i[1],j=i[0],C=e.parse(k("e^({0}*({1}))",U.IMAGINARY,V)),e.multiply(j,C)}function Jn(r){var i=r.clone();try{var j,C,V,J,s0,m0,U0;return j=v0(r,"e",!0),C=e.divide(j.x.power,A.imaginary()),V=_0(P.tan(C)),J=e.pow(j.a,new A(2)),m0=V.getDenom(!0),U0=V.getNum(),s0=A.hyp(U0,m0),s0.equals(j.a)?e.add(m0,e.multiply(A.imaginary(),U0)):i}catch{return i}}function pe(r,i){i.map(function(J){J.numVal=_0(J).multiplier});for(var j,C,V;;){if(j=i.length,j<2)return i[0];C=i.pop(),V=i[j-2],(r==="min"?C.numVal<V.numVal:C.numVal>V.numVal)&&(i.pop(),i.push(C))}}function ue(){var r=[].slice.call(arguments);return T(r)?r[0]:o(r)?new A(Math.max.apply(null,r)):U.SYMBOLIC_MIN_MAX&&d(r)?pe("max",r):e.symfunction("max",r)}function he(){var r=[].slice.call(arguments);return T(r)?r[0]:o(r)?new A(Math.min.apply(null,r)):U.SYMBOLIC_MIN_MAX&&d(r)?pe("min",r):e.symfunction("min",r)}function Gn(r){return r.isConstant(!0)?new A(Math.sign(_0(r))):e.symfunction("sign",arguments)}function fe(r,i){i=i?i.toString():"asc";var j=function(V){return V.group===X?V.multiplier:V.group===F0?V.fname===""?j(V.args[0]):V.fname:V.group===D0?V.power:V.value},C=s1(r)?r.elements:r.collectSymbols();return new K1(C.sort(function(V,J){var s0=j(V),m0=j(J);return i==="desc"?m0-s0:s0-m0}))}function An(r,i){if(r.equals(1))return new A(0);var j;if(r.fname===Q1&&r.multiplier.equals(1))return j=e.divide(An(r.args[0]),new A(2)),r.power.sign()<0&&j.negate(),j;if(r.equals(0))throw new w(U.LOG+"(0) is undefined!");if(r.isImaginary())return M.evaluate(r,U.LOG);if(r.isConstant()&&typeof i<"u"&&i.isConstant()){var C=Math.log(r),V=Math.log(i);j=new A(C/V)}else if(r.group===Y0&&r.power.multiplier.lessThan(0)||r.power.toString()==="-1")r.power.negate(),j=An(r).negate();else if(r.value==="e"&&r.multiplier.equals(1)){var J=r.power;j=w0(J)?J:new A(J)}else if(r.group===F0&&r.fname==="exp"){var s0=r.args[0];r.multiplier.equals(1)?j=e.multiply(s0,new A(r.power)):j=e.symfunction(U.LOG,[r])}else if(U.PARSE2NUMBER&&R1(r)){r=e.parse(r);var m0;r.multiplier.lessThan(0)&&(r.negate(),m0=e.multiply(new A(Math.PI),new A("i"))),j=new A(Math.log(r.multiplier.toDecimal())),m0&&(j=e.add(j,m0))}else{var s0;!r.power.equals(1)&&!r.contains("e")&&(s0=r.group===Y0?r.power:new A(r.power),r.toLinear()),arguments.length>1&&T(arguments)?j=new A(1):j=e.symfunction(U.LOG,arguments),s0&&(j=e.multiply(s0,j))}return j}function Dn(r,i){var j=i&&i.isConstant()||typeof i>"u";if(r.isConstant()&&j){var C,V,J,s0;return C=r,i&&i.lessThan(0)&&(i=an(i),V=Number(r).toExponential().toString().split("e"),C=V[0],J=V[1]),s0=new A(u0(C,Number(i||0))),e.multiply(s0,e.pow(new A(10),new A(J||0)))}return e.symfunction("round",arguments)}function ne(r){var i=r%2,j;return i<0&&(i=2+i),i>=0&&i<=.5?j=1:i>.5&&i<=1?j=2:i>1&&i<=1.5?j=3:j=4,j}function Cn(r){if(!isFinite(r)){var i=Math.sign(r),j=new A(String(Math.abs(r)));return j.multiplier=j.multiplier.multiply(new y0(i)),j}if(w0(r))return r;if(typeof r=="number")try{r=y0.simple(r)}catch{r=new y0(r)}var C=new A(0);return C.multiplier=r,C}function gn(r){var i=r.group,j;if(i===e1){var C=r.getNum(),V=r.getDenom()||new A(1),J=Number(r.power),s0=new A(1);if(Math.abs(J)===1){V.each(function(L0){L0.group===O0?s0=e.multiply(s0,gn(L0.getDenom())):L0.power.lessThan(0)&&(s0=e.multiply(s0,gn(L0.clone().toUnitMultiplier())))});var m0=new A(0);V.each(function(L0){m0=e.add(e.divide(L0,s0.clone()),m0)}),s0.invert();var U0;C.isComposite()?(U0=new A(0),C.each(function(L0){U0=e.add(e.multiply(gn(L0),s0.clone()),U0)})):U0=e.multiply(s0,C),j=e.divide(U0,m0)}}else i===O0?(j=new A(1),r.each(function(L0){j=e.multiply(j,e.clean(L0))})):i===F0&&r.args.length===1&&r.args[0].isConstant()&&(j=p1("PARSE2NUMBER",function(){return e.parse(r)},!0));return j||(j=r),j}function ae(r,i){return i=i||{expand_denominator:!0,expand_functions:!0},On(r,i)}function On(r,i){if(Array.isArray(r))return r.map(function(b1){return On(b1,i)});if(i=i||{},r.group===F0&&r.fname===""){var j=On(r.args[0],i),C=On(e.pow(j,e.parse(r.power)),i);return e.multiply(e.parse(r.multiplier),C).distributeMultiplier()}if([X,k0,D0].indexOf(r.group)!==-1)return r;var V=r.clone();try{var J=r.multiplier.toString(),s0=Number(r.power),m0=r;if(r.isComposite()&&D(r.power)&&r.power>0){var U0=s0-1,j=new A(0);r.each(function(U1){j=e.add(j,On(e.parse(U1),i))});for(var L0=e.parse(j),o1=0;o1<U0;o1++)L0=g(L0,j,i);m0=e.multiply(e.parse(J),L0).distributeMultiplier()}else if(r.group===F0&&i.expand_functions===!0){var S0=[];r.args.forEach(function(b1){S0.push(On(b1,i))}),m0=e.pow(e.symfunction(r.fname,S0),e.parse(r.power)),m0=e.multiply(m0,e.parse(r.multiplier))}else if(r.isComposite()&&D(r.power)&&r.power<0&&i.expand_denominator===!0)r=r.invert(),m0=On(r,i),m0.invert();else if(r.group===O0){var E1=function(U1){switch(U1.group){case e1:return 0;case x0:return 1;case O0:return 2;case F0:return 3;default:return 4}},z1=r.collectSymbols().sort(function(U1,J1){return E1(J1)-E1(U1)}).map(function(U1){var J1=e.pow(U1,e.parse(s0)),en=On(J1,i);return en}),j=z1.pop();j.isComposite()&&j.isLinear()?(z1.forEach(function(U1){j=g(j,U1,i)}),j.isComposite()?(j.power>1&&(j=On(e.pow(j,e.parse(j.power)),i)),m0=e.multiply(e.parse(J),j).distributeMultiplier()):m0=j):(m0=j,z1.forEach(function(U1){m0=e.multiply(m0,U1)}),m0=e.multiply(m0,e.parse(J)).distributeMultiplier()),m0.group===O0&&(m0=e.parse(m0))}else m0=r;return m0}catch{return V}return V}function oe(r){return f1.identity(r)}function Pn(r,i){return i.isConstant()&&D(i)?r.elements[i]:e.symfunction("vecget",arguments)}function Vn(r,i){return i=typeof i>"u"?1e-14:i,r=r.clone(),i=Number(i),r.elements.sort(function(j,C){return C.group-j.group}),r.elements=C1(r.elements,function(j,C){var V=Number(e.subtract(_0(j),_0(C)).abs());return V<=i}),r}function ve(r,i,j){return i.isConstant?(r.elements[i]=j,r):e.symfunction("vecset",arguments)}function qe(r,i,j){return i.isConstant()&&j.isConstant()?r.elements[i][j]:e.symfunction("matget",arguments)}function Ye(r,i){return i.isConstant()?new f1(r.elements[i]):e.symfunction("matgetrow",arguments)}function Qe(r,i,j){if(!i.isConstant())return e.symfunction("matsetrow",arguments);if(r.elements[i].length!==j.elements.length)throw new C0("Matrix row must match row dimensions!");var C=r.clone();return C.elements[i]=j.clone().elements,C}function We(r,i){if(!i.isConstant())return e.symfunction("matgetcol",arguments);i=Number(i);var j=f1.fromArray([]);return r.each(function(C,V,J){J===i&&j.elements.push([C.clone()])}),j}function Je(r,i,j){if(!i.isConstant())return e.symfunction("matsetcol",arguments);if(i=Number(i),r.rows()!==j.elements.length)throw new C0("Matrix columns must match number of columns!");return j.each(function(C,V){r.set(V-1,i,C.elements[0].clone())}),r}function Ke(r,i,j,C){return r.elements[i][j]=C,r}function n2(){return new K1([].slice.call(arguments))}function e2(){return f1.fromArray(arguments)}function r2(){return V1.fromArray(arguments)}function t2(r){return P0(r)?r.determinant():r}function i2(r){var i;return P0(r)?i=[new A(r.cols()),new A(r.rows())]:s1(r)||i1(r)?i=new A(r.elements.length):p("size expects a matrix or a vector"),i}function a2(r,i){if(s1(r)&&s1(i))return r.dot(i);p("function dot expects 2 vectors")}function s2(r,i){if(s1(r)&&s1(i))return r.cross(i);p("function cross expects 2 vectors")}function u2(r){if(P0(r))return r.transpose();p("function transpose expects a matrix")}function f2(r){if(P0(r))return r.invert();p("invert expects a matrix")}function o2(r,i){return r.union(i)}function l2(r,i){return r.intersection(i)}function c2(r,i){return r.contains(i)}function p2(r,i){return r.difference(i)}function h2(r,i){return new A(Number(r.intersects(i)))}function v2(r,i){return new A(Number(r.is_subset(i)))}function g2(){T1(arguments).map(function(r){console.log(r.toString())})}function Ae(r){if(!w0(r.power)&&r.power.absEquals(.5)){var i=r.power.sign(),j=dn(r.group===k0?new A(r.value):r.toLinear());return i<0&&j.invert(),j}return r}function d2(r){if(r.group===k0){var i=r.value,j=w1(i)[0];if(!j)return L("Unable to compute prime factors. This should not happen. Please review and report."),r;var C=new y0(Math.log(i)/Math.log(j)),V=C.multiply(r.power);if(V.den>r.power.den)return r;D(V)?r=A(Math.pow(j,V)):r=new A(j).setPower(V)}return r}this.expand=On,this.round=Dn,this.clean=gn,this.sqrt=dn,this.cbrt=Sn,this.abs=an,this.log=An,this.rationalize=Tn,this.nthroot=jn,this.arg=Wn,this.conjugate=Qn,this.imagpart=Yn,this.realpart=Xn,this.getFunction=function(r){return t1[r][0]},this.addPreprocessor=function(r,i,j,C){var V=f.names,J=f.actions;if(typeof i!="function")throw new PreprocessorError("Incorrect parameters. Function expected!");j?C?(V.splice(j,0,r),J.splice(j,0,i)):(V[j]=r,J[j]=i):(V.push(r),J.push(i))},this.getPreprocessors=function(){for(var r={},i=0,j=r.names.length;i<j;i++){var C=r.names[i];r[C]={order:i,action:r.actions[i]}}return r},this.removePreprocessor=function(r,i){var j=f.names.indexOf(r);i?(H0(f.names,j),H0(f.actions,j)):(f.names[j]=void 0,f.actions[j]=void 0)},this.mapped_function=function(){for(var r={},i=this.params,j=0;j<i.length;j++)r[i[j]]=String(arguments[j]);return e.parse(this.body,r)},this.add=function(r,i){var j=w0(r),C=w0(i);if(j&&C){if(r.unit||i.unit)return e.Unit.add(r,i);if(r.isInfinity||i.isInfinity){var V=r.multiplier.lessThan(0),J=i.multiplier.lessThan(0);if(r.isInfinity&&i.isInfinity&&V!==J)throw new w("("+r+")+("+i+") is not defined!");var s0=A.infinity();return J&&s0.negate(),s0}if(r.isComposite()&&r.isLinear()&&i.isComposite()&&i.isLinear()&&(r.distributeMultiplier(),i.distributeMultiplier(),i.length>r.length&&r.group===i.group&&([r,i]=[i,r])),r.multiplier.equals(0))return i;if(i.multiplier.equals(0))return r;if(r.isConstant()&&i.isConstant()&&U.PARSE2NUMBER){var A1=new A(r.multiplier.add(i.multiplier).toDecimal(U.PRECISION));return A1}var m0=r.group,U0=i.group,L0=r.power.toString(),o1=i.power.toString();if(m0<U0||m0===U0&&L0>o1&&o1>0)return this.add(i,r);if(m0===O0&&U0===x0&&r.value===i.value){var S0=r;r=i,i=S0,m0=r.group,U0=i.group,L0=r.power.toString(),o1=i.power.toString()}var E1=L0===o1,z1=r.value,b1=i.value,U1=r.isComposite(),J1=i.isComposite(),en,Q0,A1;if(U1&&(en=B1(r,"hash")),J1&&(Q0=B1(i,"hash")),m0===e1&&U0===e1&&i.isLinear()&&!r.isLinear()&&en!==Q0)return this.add(i,r);m0===x0&&U0===x0&&(z1=en,b1=Q0);var tn=m0===k0&&U0===X,H1=r.value===i.multiplier.toString(),un=z1===b1||en===Q0&&en!==void 0||tn&&H1;if(un&&E1&&m0===U0)if(tn&&(i=i.convert(k0)),m0===x0&&(U0===D0||U0===k0))r.distributeMultiplier(),A1=r.attach(i);else if(A1=r,r.multiplier.isOne()&&i.multiplier.isOne()&&m0===e1&&r.isLinear()&&i.isLinear())for(var vn in i.symbols){var on=i.symbols[vn];A1.attach(on)}else A1.multiplier=A1.multiplier.add(i.multiplier);else if(un&&m0!==x0)m0===e1&&U0===x0?(i.insert(r,"add"),A1=i):(A1=A.shell(x0).attach([r,i]),A1.value=m0===x0?en:z1);else if(U1&&r.isLinear()){var cn=m0===U0,mn=m0===x0&&U0===x0;if(mn&&(cn=r.value===i.value),r.distributeMultiplier(),i.isComposite()&&i.isLinear()&&cn){i.distributeMultiplier();for(var vn in i.symbols){var on=i.symbols[vn];r.attach(on)}A1=r}else mn&&r.value!==Q0||m0===x0&&!un?(A1=A.shell(e1).attach([r,i]),A1.updateHash()):A1=r.attach(i)}else{if(m0===F0&&r.fname===Q1&&U0!==Y0&&i.power.equals(.5)){var Rn=i.multiplier.clone();i=dn(i.toUnitMultiplier().toLinear()),i.multiplier=Rn}r.length===2&&i.length===2&&b0(r.power)&&b0(i.power)?A1=e.add(On(r),On(i)):(A1=A.shell(e1).attach([r,i]),A1.updateHash())}if(A1.multiplier.equals(0)&&(A1=new A(0)),A1.length===1){var Rn=A1.multiplier;A1=z(A1.symbols),A1.multiplier=A1.multiplier.multiply(Rn)}return A1}else{if(C&&!j){var S0=r;r=i,i=S0,S0=C,C=j,j=S0}var Mn=P0(i);if(j&&Mn){var In=new f1;i.eachElement(function(ee,En,Hn){In.set(En,Hn,e.add(r.clone(),ee))}),i=In}else if(P0(r)&&Mn)i=r.add(i);else if(j&&s1(i))i.each(function(ee,En){En--,i.elements[En]=e.add(r.clone(),i.elements[En])});else if(s1(r)&&s1(i))i.each(function(ee,En){En--,i.elements[En]=e.add(r.elements[En],i.elements[En])});else{if(s1(r)&&P0(i))return e.add(i,r);if(P0(r)&&s1(i))if(i.elements.length===r.rows()){var In=new f1,Ln=r.cols();return i.each(function(En,Hn){for(var re=[],$n=0;$n<Ln;$n++)re.push(e.add(r.elements[Hn-1][$n].clone(),En.clone()));In.elements.push(re)}),In}else p("Dimensions must match!")}return i}},this.subtract=function(r,i){var j=j=w0(r),C=w0(i);if(j&&C)return r.unit||i.unit?e.Unit.subtract(r,i):this.add(r,i.negate());if(C&&s1(r))i=r.map(function(s0){return e.subtract(s0,i.clone())});else if(j&&s1(i))i=i.map(function(s0){return e.subtract(r.clone(),s0)});else if(s1(r)&&s1(i))r.dimensions()===i.dimensions()?i=r.subtract(i):e.error("Unable to subtract vectors. Dimensions do not match.");else if(P0(r)&&s1(i))if(i.elements.length===r.rows()){var V=new f1,J=r.cols();return i.each(function(s0,m0){for(var U0=[],L0=0;L0<J;L0++)U0.push(e.subtract(r.elements[m0-1][L0].clone(),s0.clone()));V.elements.push(U0)}),V}else p("Dimensions must match!");else if(s1(r)&&P0(i)){var V=i.clone().negate();return e.add(V,r)}else if(P0(r)&&P0(i))i=r.subtract(i);else if(P0(r)&&C){var V=new f1;r.each(function(m0,U0,L0){V.set(U0,L0,e.subtract(m0,i.clone()))}),i=V}else if(j&&P0(i)){var V=new f1;i.each(function(m0,U0,L0){V.set(U0,L0,e.subtract(r.clone(),m0))}),i=V}return i},this.multiply=function(r,i){var j=w0(r),C=w0(i);if(j&&i instanceof S)return i.elements.push(r),i;if(j&&C){if(i.isUnit){var Q0=r.clone();return r.unit=i,Q0}if(r.unit||i.unit)return e.Unit.multiply(r,i);if(r.isInfinity||i.isInfinity){if(r.equals(0)||i.equals(0))throw new w(r+"*"+i+" is undefined!");if(i.power.lessThan(0)){if(r.isInfinity)throw new w("Infinity/Infinity is not defined!");return new A(0)}var U1=r.multiplier.multiply(i.multiplier).sign(),V=A.infinity();if(r.isConstant()||i.isConstant()||r.isInfinity&&i.isInfinity)return U1<0&&V.negate(),V}if(r.isConstant()&&i.isConstant()&&U.PARSE2NUMBER){var J=new K0(r.multiplier.toDecimal()).times(new K0(i.multiplier.toDecimal())).toFixed(),s0=new A(J);return s0}if(r.isOne())return i.clone();if(i.isOne())return r.clone();if(r.multiplier.equals(0)||i.multiplier.equals(0))return new A(0);if(i.group>r.group&&i.group!==e1)return this.multiply(i,r);if(r.group===O0&&i.group===x0&&r.value===i.value){var J=r;r=i,i=J}var m0=r.group,U0=i.group,L0=i.multiplier.num,o1=i.multiplier.den;if(m0===F0&&r.fname===Q1&&!i.isConstant()&&r.args[0].value===i.value&&!r.args[0].multiplier.lessThan(0)){var S0=r.power,E1=e.parse(r.multiplier);r=e.multiply(E1,r.args[0].clone()),r.setPower(new y0(.5).multiply(S0)),m0=r.group}else m0===F0&&r.fname===Q1&&r.multiplier.equals(1)&&r.power.equals(-1)&&i.isConstant()&&r.args[0].equals(i)&&(r=e.symfunction(Q1,[i.clone()]),i=new A(1));var z1=r.value,b1=i.value,U1=new y0(r.sign()),J1=m0===k0&&U0===X&&i.multiplier.equals(r.value),en=J1?new y0(1).multiply(r.multiplier).abs():r.multiplier.multiply(i.multiplier).abs(),Q0=r.clone().toUnitMultiplier();if(i=i.clone().toUnitMultiplier(!0),m0===F0&&U0===F0){var A1=r.args[0].clone(),tn=i.args[0].clone();if(r.fname===Q1&&i.fname===Q1&&r.isLinear()&&i.isLinear()){var H1=e.divide(A1,tn).invert();H1.gt(1)&&D(H1)&&(Q0=e.multiply(r.args[0].clone(),dn(H1.clone())),i=new A(1))}else if(r.fname===N1&&i.fname===N1&&!A1.isConstant()&&!tn.isConstant()&&i.power<0){var un=e.subtract(A1.clone(),tn.clone());if(un.isConstant())if(J=new A(1),un<0){for(var vn=0,on=Math.abs(un);vn<=on;vn++){var cn=e.add(A1.clone(),new A(vn));J=e.multiply(J,cn)}Q0=e.multiply(e.pow(A1,new A(r.power)),e.pow(J,new A(i.power))),i=new A(1)}else{for(var vn=0,on=Math.abs(un);vn<=on;vn++){var cn=e.add(tn.clone(),new A(vn));J=e.multiply(J,cn)}Q0=e.multiply(e.pow(J,new A(r.power)),e.pow(tn,new A(i.power))),i=new A(1)}}}if(z1===b1&&m0===x0&&m0===U0&&(z1=r.text("hash"),b1=i.text("hash")),U0===Y0&&i.previousGroup===x0&&m0===x0&&(z1=B1(r,"hash",Y0)),(z1===b1||J1)&&!(m0===x0&&(U0===D0||U0===k0||U0===F0))&&!(m0===x0&&U0===O0)){var mn=r.power,Rn=i.power,Mn=w0(mn),In=w0(Rn),Ln=Mn||In;if(m0===x0&&U0!==x0&&i.previousGroup!==x0&&mn.equals(1))Q0=new A(0),r.each(function(le){Q0=e.add(Q0,e.multiply(le,i.clone()))},!0);else{if(Q0.power=Ln?e.add(w0(mn)?mn:new A(mn),w0(Rn)?Rn:new A(Rn)):m0===X?mn:mn.add(Rn),Q0.power.equals(0)&&(Q0=Q0.convert(X)),Ln&&Q0.convert(Y0),r.imaginary&&i.imaginary){var ee=b0(Q0.power%2);ee&&(Q0=new A(1),en.negate())}Q0.group!==Y0&&Q0.previousGroup&&(Q0.previousGroup=void 0),Q0.multiplier=Q0.multiplier.multiply(i.multiplier)}}else if(m0===O0&&r.isLinear())if(U0===O0&&i.distributeExponent(),U0===O0&&i.isLinear()){for(var cn in i.symbols){var En=i.symbols[cn];Q0=Q0.combine(En)}Q0.multiplier=Q0.multiplier.multiply(i.multiplier)}else Q0.combine(i);else if(m0!==X){if(m0===O0)Q0.distributeExponent(),Q0.combine(i);else if(!i.isOne()){var Hn=i.multiplier.clone();i.toUnitMultiplier(),Q0=A.shell(O0).combine([Q0,i]),Q0.multiplier=Q0.multiplier.multiply(Hn)}}else Q0=i.clone().toUnitMultiplier();if(Q0.group===k0){var re=Math.log(Q0.value),$n=Math.log(L0)/re,wn=Math.log(o1)/re,yn=en.num/L0,bn=en.den/o1;$n!==0&&D($n)&&D(yn)&&(Q0.power=Q0.power.add(new y0($n)),en.num/=L0),wn!==0&&D(wn)&&D(bn)&&(Q0.power=Q0.power.subtract(new y0(wn)),en.den/=o1)}if(Q0.length===1){var J=Q0.multiplier;Q0=z(Q0.symbols),Q0.multiplier=Q0.multiplier.multiply(J)}var Kn=Q0.power.toString();if(b0(Kn)&&Q0.fname===Q1){U1=U1*Q0.sign();var se=Q0.power;Q0=Q0.args[0],Q0=e.multiply(new A(en),e.pow(Q0,new A(se.divide(new y0(2))))),U1<0&&Q0.negate()}else Q0.multiplier=Q0.multiplier.multiply(en).multiply(U1),Q0.group===e1&&Q0.isImaginary()&&Q0.distributeMultiplier();return Q0.group===k0&&D(Q0.power.toDecimal())&&(Q0=Q0.convert(X)),Q0}else{C&&!j&&(J=r,r=i,i=J,J=C,C=j,j=J);var de=P0(i),we=P0(r);if(j&&de){var te=new f1;i.eachElement(function(le,xn,je){te.set(xn,je,e.multiply(r.clone(),le))}),i=te}else if(we&&de)i=r.multiply(i);else if(j&&s1(i))i.each(function(le,xn){xn--,i.elements[xn]=e.multiply(r.clone(),i.elements[xn])});else if(s1(r)&&s1(i))i.each(function(le,xn){xn--,i.elements[xn]=e.multiply(r.elements[xn],i.elements[xn])});else{if(s1(r)&&P0(i))return this.multiply(i,r);if(P0(r)&&s1(i))if(i.elements.length===r.rows()){var te=new f1,Se=r.cols();return i.each(function(xn,je){for(var ce=[],ge=0;ge<Se;ge++)ce.push(e.multiply(r.elements[je-1][ge].clone(),xn.clone()));te.elements.push(ce)}),te}else p("Dimensions must match!")}return i}},this.divide=function(r,i){var j=w0(r),C=w0(i);if(j&&C){if(r.unit||i.unit)return e.Unit.divide(r,i);var V;if(i.equals(0))throw new q("Division by zero not allowed!");return r.isConstant()&&i.isConstant()?(V=r.clone(),V.multiplier=V.multiplier.divide(i.multiplier)):(i.invert(),V=e.multiply(r,i)),V}else{var J=s1(r),s0=s1(i);if(j&&s0)i=i.map(function(o1){return e.divide(r.clone(),o1)});else if(J&&C)i=r.map(function(o1){return e.divide(o1,i.clone())});else if(J&&s0)r.dimensions()===i.dimensions()?i=i.map(function(o1,S0){return e.divide(r.elements[--S0],o1)}):e.error("Cannot divide vectors. Dimensions do not match!");else{var m0=P0(r),U0=P0(i);if(m0&&C){var L0=new f1;r.eachElement(function(o1,S0,E1){L0.set(S0,E1,e.divide(o1,i.clone()))}),i=L0}else if(j&&U0){var L0=new f1;i.eachElement(function(S0,E1,z1){L0.set(E1,z1,e.divide(r.clone(),S0))}),i=L0}else if(m0&&U0){var L0=new f1;r.rows()===i.rows()&&r.cols()===i.cols()?(r.eachElement(function(S0,E1,z1){L0.set(E1,z1,e.divide(S0,i.elements[E1][z1]))}),i=L0):e.error("Dimensions do not match!")}else if(m0&&s0)if(r.cols()===i.dimensions()){var L0=new f1;r.eachElement(function(S0,E1,z1){L0.set(E1,z1,e.divide(S0,i.elements[E1].clone()))}),i=L0}else e.error("Unable to divide matrix by vector.")}return i}},this.pow=function(r,i){var j=w0(r),C=w0(i);if(j&&C){if(r.unit||i.unit)return e.Unit.pow(r,i);if(r.group===F0&&r.fname===M1&&b0(i)){var o1=r.multiplier.clone(),V=e.pow(r.args[0],i);return V.multiplier=o1,V}if(r.isInfinity||i.isInfinity){if(r.isInfinity&&i.isInfinity)throw new w("("+r+")^("+i+") is undefined!");if(r.isConstant()&&i.isInfinity){if(r.equals(0)){if(i.lessThan(0))throw new w("0^Infinity is undefined!");return new A(0)}if(r.equals(1))throw new w("1^"+i.toString()+" is undefined!");if(i.lessThan(0))return new A(0);if(!r.lessThan(0))return A.infinity()}if(r.isInfinity&&i.isConstant()){if(i.equals(0))throw new w(r+"^0 is undefined!");return i.lessThan(0)?new A(0):e.multiply(A.infinity(),e.pow(new A(r.sign()),i.clone()))}}var J=r.equals(0),s0=i.equals(0);if(J&&s0)throw new w("0^0 is undefined!");if(J&&i.isConstant()&&i.multiplier.greaterThan(0))return new A(0);if(s0)return new A(1);var m0=i.isConstant(),U0=r.isConstant(),L0=i.isInteger(),o1=r.multiplier,S0=r.clone();if(U0&&m0&&r.equals(0)&&i.lessThan(0))throw new w("Division by zero is not allowed!");if(U.PARSE2NUMBER&&U0&&m0&&r.sign()<0&&B0(i)){var E1,z1,b1;return E1=Math.PI*i,z1=new A(Math.cos(E1)),b1=e.multiply(A.imaginary(),new A(Math.sin(E1))),e.add(z1,b1)}if(U.PARSE2NUMBER&&r.isImaginary()&&m0&&D(i)&&!i.lessThan(0)){var z1,b1,U1,J1,en,Q0,A1;if(z1=r.realpart(),b1=r.imagpart(),z1.isConstant("all")&&b1.isConstant("all"))return A1=U.USE_BIG?A(K0.atan2(Rn.multiplier.toDecimal(),U1.multiplier.toDecimal()).times(i.toString())):Math.atan2(b1,z1)*i,J1=new A(A1),U1=e.pow(A.hyp(z1,b1),i),en=e.multiply(U1.clone(),e.trig.cos(J1.clone())),Q0=e.multiply(U1,e.trig.sin(J1)),e.add(en,e.multiply(A.imaginary(),Q0))}if(S0.toUnitMultiplier(),S0.group===F0&&S0.fname===Q1&&!m0){var tn=S0.args[0];tn.multiplyPower(new A(.5)),tn.multiplier.multiply(S0.multiplier),tn.multiplyPower(i),S0=tn}else{var H1=o1.sign();B0(i)&&H1<0&&(S0.negate(),S0=e.symfunction(D1,[S0]),S0.negate()),S0.multiplyPower(i)}if(U0&&m0&&U.PARSE2NUMBER){var un;H1<0&&(r.negate(),i.multiplier.den.equals(2)?un=new A(U.IMAGINARY):D(i.multiplier)?b0(i.multiplier)?un=new A(1):un=new A(-1):b0(i.multiplier.den)?un=e.pow(e.symfunction(D1,[new A(H1)]),i.clone()):un=new A(Math.pow(H1,i.multiplier.num))),S0=new A(Math.pow(r.multiplier.toDecimal(),i.multiplier.toDecimal())),un&&(S0=e.multiply(S0,un))}else if(L0&&!o1.equals(1)){var vn=i.abs();if(vn.gt(U.MAX_EXP))return i.sign()<0?new A(0):A.infinity();var on=i.multiplier.toDecimal(),cn=Math.sign(on);on=Math.abs(on);var mn=new y0(1);mn.num=o1.num.pow(on),mn.den=o1.den.pow(on),cn<0&&mn.invert(),S0.multiplier=S0.multiplier.multiply(mn)}else{var H1=r.sign();if(i.isConstant()&&r.isConstant()&&!i.multiplier.den.equals(1)&&H1<0)if(i.multiplier.den.equals(2)){var Rn=new A(U.IMAGINARY);r.negate(),i.lessThan(0)&&(Rn.negate(),i.negate()),S0=e.multiply(e.pow(r,i),Rn)}else{var Mn=r.clone();Mn.multiplier.negate(),S0=e.pow(e.symfunction(D1,[new A(H1)]),i.clone());var In=e.pow(new A(Mn.multiplier.num),i.clone()),Ln=e.pow(new A(Mn.multiplier.den),i.clone()),U1=e.divide(In,Ln);S0=e.multiply(S0,U1)}else if(U.PARSE2NUMBER&&i.isImaginary()){var z1=i.realpart(),b1=i.imagpart(),Mn=r.clone().toLinear(),ee=e.pow(Mn.clone(),z1),En=An(Mn.clone()),Hn=P.cos(e.multiply(b1.clone(),En)),re=e.multiply(P.sin(e.multiply(b1,An(Mn))),A.imaginary());S0=e.multiply(ee,e.add(Hn,re)),S0=e.expand(e.parse(S0))}else{var $n=r.group===X&&H1<0,wn=Ae(new A($n?o1.num:Math.abs(o1.num)).setPower(i.clone())),yn=Ae(new A(o1.den).setPower(i.clone()).invert());if(r.imaginary)if(L0){var tn,on,bn;tn=Math.sign(i),on=an(i),bn=on%4,S0=new A(b0(bn)?-1:U.IMAGINARY),(bn===0||tn<0&&bn===1||tn>0&&bn===3)&&S0.negate()}else{var Kn=i.multiplier.multiply(y0.quick(1,2)),se=Math.pow(-1,Kn.num);S0=b0(Kn.den)?new A(-1).setPower(Kn,!0):new A(se)}if(H1<0&&!$n&&S0.negate(),m0&&r.group!==Y0){var de=b0(i.multiplier.den),we=b0(r.power),bn=S0.power.toDecimal(),te=b0(bn);if(de&&we&&!te){if(bn===1)S0=e.symfunction(M1,[S0]);else if(D(bn))S0=e.multiply(e.symfunction(M1,[S0.clone().toLinear()]),S0.clone().setPower(new y0(bn-1)));else{var on=S0.power;S0=e.symfunction(M1,[S0.toLinear()]).setPower(on)}U.POSITIVE_MULTIPLIERS&&S0.fname===M1&&(S0=S0.args[0])}}if(i.equals(2)&&S0.group===O0){var Se=new A(1);S0.each(function(Me){Se=e.multiply(Se,e.pow(Me,i))}),S0=Se}}}if(S0=Ae(S0),wn&&yn&&(S0=e.multiply(S0,d2(e.multiply(wn,yn)))),S0.fname===Q1){var le=S0.group===Y0,xn=le?S0.power.multiplier.toString():S0.power.toString();if(b0(xn)){var je=le?e.divide(S0.power,new A(2)):new A(S0.power.divide(new y0(2))),o1=S0.multiplier;S0=e.pow(S0.args[0],je),S0.multiplier=S0.multiplier.multiply(o1)}}else if(!U.IGNORE_E&&S0.isE()&&S0.group===Y0&&S0.power.contains("pi")&&S0.power.contains(U.IMAGINARY)&&i.group===O0){var J1=i.stripVar(U.IMAGINARY);S0=e.add(P.cos(J1),e.multiply(A.imaginary(),P.sin(J1)))}return S0}else{if(s1(r)&&C)r=r.map(function(ge){return e.pow(ge,i.clone())});else if(P0(r)&&C){var ce=new f1;r.eachElement(function(ge,Me,Ce){ce.set(Me,Ce,e.pow(ge,i.clone()))}),r=ce}else if(j&&P0(i)){var ce=new f1;i.eachElement(function(Me,Ce,w2){ce.set(Ce,w2,e.pow(r.clone(),Me))}),r=ce}return r}},this.comma=function(r,i){return r instanceof S||(r=S.create(r)),r.append(i),r},this.mod=function(r,i){return qn(r,i)},this.slice=function(r,i){return new l(r,i)},this.equals=function(r,i){return r.group!==D0&&!r.isLinear()&&p("Cannot set equality for "+r.toString()),s[r.value]=i.clone(),i},this.percent=function(r){return e.divide(r,new A(100))},this.assign=function(r,i){if(r instanceof S&&i instanceof S)return r.elements.map(function(C,V){return e.assign(C,i.elements[V])}),K1.fromArray(i.elements);if(r.parent){var j=r.parent;return j.elements[j.getter]=i,delete j.getter,j}if(r.group!==D0)throw new J0("Cannot complete operation. Incorrect LH value for "+r);return s[r.value]=i,i},this.function_assign=function(r,i){var j=r.elements.pop();return H(j,r.elements,i)};var ze=function(r){return new A(r===!0?1:0)};this.eq=function(r,i){return ze(r.equals(i))},this.gt=function(r,i){return ze(r.gt(i))},this.gte=function(r,i){return ze(r.gte(i))},this.lt=function(r,i){return ze(r.lt(i))},this.lte=function(r,i){return ze(r.lte(i))},this.factorial=function(r){return this.symfunction(N1,[r])},this.dfactorial=function(r){return this.symfunction(x1,[r])}}var Zn={convert:function(e,t){var f;if(e===0)f=[0,1];else if(e<1e-6||e>1e20){var l=this.quickConversion(Number(e));if(l[1]<=1e20){var S=Math.abs(e),E=e/S;f=this.fullConversion(S.toFixed((l[1]+"").length-1)),f[0]=f[0]*E}else f=l}else f=this.fullConversion(e);return f},quickConversion:function(e){var t=function(l){typeof l!="string"&&(l=l.toString());var S="",E=l.charAt(0);return E==="-"?(l=l.substr(1,l.length),S="-"):E==="+"&&(l=l.substr(1,l.length)),{sign:S,value:l}};function f(l){G1.isScientific(l)&&(l=G(l));var S=t(l),E=S.value.split("."),M;E.length===1?M=E[0]:M=E[0]+E[1];var P=E[1]?E[1].length:0,p0=`1${"0".repeat(P)}`;return M!=="0"&&(M=M.replace(/^0+/,"")),[S.sign+M,p0]}return f(e)},fullConversion:function(e){for(var t=!1,f=0,l=1,S=1,E=0,M=0,P=e,p0=1e-16;!t;){M++,M>1e4&&(t=!0);var l0=Math.floor(P),h0=f+l0*S,t1=l+l0*E,I0=P-l0;I0<p0&&(t=!0),P=1/I0,f=S,l=E,S=h0,E=t1,(Math.abs(h0/t1-e)<p0||M>30)&&(t=!0)}return[h0,t1]}},L1={parser:function(){var e=["classes","setOperator","getOperators","getBrackets","tokenize","toRPN","tree","units"],t=new Un;for(var f in t)e.indexOf(f)===-1&&delete t[f];t.setOperator({precedence:8,operator:"\\",action:"slash",prefix:!0,postfix:!1,leftAssoc:!0,operation:function(S){return S}}),t.setOperator({precedence:8,operator:"\\,",action:"slash_comma",prefix:!0,postfix:!1,leftAssoc:!0,operation:function(S){return S}});var l=t.getBrackets();return l["{"].maps_to=void 0,t}(),space:"~",dot:" \\cdot ",latex:function(e,t){if(e.clone&&(e=e.clone()),e instanceof y.classes.Collection&&(e=e.elements),c1(e)){for(var f=[],l=0;l<e.length;l++){var S=e[l];w0(S)||(S=y.parse(S)),f.push(this.latex(S,t))}return this.brackets(f.join(", "),"square")}else if(P0(e)){for(var E=`\\begin{pmatrix}
`,l=0;l<e.elements.length;l++){for(var M=[],P=e.elements[l],p0=0;p0<P.length;p0++)M.push(this.latex(P[p0],t));E+=M.join(" & "),l<e.elements.length-1&&(E+=`\\\\
`)}return E+="\\end{pmatrix}",E}else if(s1(e)){for(var E="\\left[",l=0;l<e.elements.length;l++)E+=this.latex(e.elements[l],t)+" "+(l!==e.elements.length-1?",\\,":"");return E+="\\right]",E}else if(i1(e)){for(var E="\\{",l=0;l<e.elements.length;l++)E+=this.latex(e.elements[l],t)+" "+(l!==e.elements.length-1?",\\,":"");return E+="\\}",E}e=e.clone();var l0=t==="decimal"||t==="decimals",h0=e.power,t1=B(h0),I0=e.multiplier.lessThan(0);if(e.group===k0&&l0)return String(e.multiplier.toDecimal()*Math.pow(e.value,e.power.toDecimal()));e.multiplier=e.multiplier.abs();var G0;if(l0){var m1=String(e.multiplier.toDecimal());G0=[m1,""]}else G0=[e.multiplier.num,e.multiplier.den];var q1=this.value(e,t1,t,I0),_1;t1&&h0.negate(),l0?(_1=w0(h0)?L1.latex(h0,t):String(h0.toDecimal()),String(_1)==="1"&&(_1="")):w0(h0)?_1=this.latex(h0,t):_1=this.formatFrac(h0,!0);var Y1=["",""],$1=t1?1:0;Y1[$1]=_1;var an=(I0?"-":"")+this.set(G0,q1,Y1,e.group===O0);return an.replace(/\+\-/gi,"-")},greek:{alpha:"\\alpha",beta:"\\beta",gamma:"\\gamma",delta:"\\delta",epsilon:"\\epsilon",zeta:"\\zeta",eta:"\\eta",theta:"\\theta",iota:"\\iota",kappa:"\\kappa",lambda:"\\lambda",mu:"\\mu",nu:"\\nu",xi:"\\xi",omnikron:"\\omnikron",pi:"\\pi",rho:"\\rho",sigma:"\\sigma",tau:"\\tau",upsilon:"\\upsilon",phi:"\\phi",chi:"\\chi",psi:"\\psi",omega:"\\omega",Gamma:"\\Gamma",Delta:"\\Delta",Epsilon:"\\Epsilon",Theta:"\\Theta",Lambda:"\\Lambda",Xi:"\\Xi",Pi:"\\Pi",Sigma:"\\Sigma",Phi:"\\Phi",Psi:"\\Psi",Omega:"\\Omega"},symbols:{arccos:"\\arccos",cos:"\\cos",csc:"\\csc",exp:"\\exp",ker:"\\ker",limsup:"\\limsup",min:"\\min",sinh:"\\sinh",arcsin:"\\arcsin",cosh:"\\cosh",deg:"\\deg",gcd:"\\gcd",lg:"\\lg",ln:"\\ln",Pr:"\\Pr",sqrt:"\\sqrt",sup:"\\sup",arctan:"\\arctan",cot:"\\cot",det:"\\det",hom:"\\hom",lim:"\\lim",log:"\\log",LN:"\\LN",sec:"\\sec",tan:"\\tan",arg:"\\arg",coth:"\\coth",dim:"\\dim",inf:"\\inf",liminf:"\\liminf",max:"\\max",sin:"\\sin",tanh:"\\tanh"},value:function(e,t,f,l){var S=e.group,E=e.previousGroup,M=["",""],P=t?1:0;if(e.isInfinity)M[P]="\\infty";else if(S===D0||S===k0||E===D0||E===k0||E===X){var p0=this.formatSubscripts(e.value);p0.replace&&(p0=p0.replace(/(.+)_$/,"$1\\_"));var l0=String(p0).split("_"),h0=this.greek[l0[0]];h0&&(l0[0]=h0,p0=l0.join("_"));var e=this.symbols[l0[0]];e&&(l0[0]=e,p0=l0.join("_")),M[P]=p0}else if(S===F0||E===F0){for(var t1,I0=[],G0=e.fname,m1=0;m1<e.args.length;m1++){var q1=e.args[m1],_1;typeof q1=="string"?_1=q1:_1=this.latex(q1,f),I0.push(_1)}if(G0===Q1)M[P]="\\sqrt"+this.braces(I0.join(","));else if(G0===M1)M[P]=this.brackets(I0.join(","),"abs");else if(G0===D1)M[P]=this.brackets(I0.join(","),"parens");else if(G0==="limit")M[P]=" \\lim\\limits_{"+I0[1]+" \\to "+I0[2]+"} "+I0[0];else if(G0==="integrate")M[P]="\\int"+this.braces(I0[0])+this.braces("d"+I0[1]);else if(G0==="defint")M[P]="\\int\\limits_"+this.braces(I0[1])+"^"+this.braces(I0[2])+" "+I0[0]+" d"+I0[3];else if(G0===N1||G0===x1){var q1=e.args[0];q1.power.equals(1)&&(q1.isComposite()||q1.isCombination())&&(I0[0]=this.brackets(I0[0])),M[P]=I0[0]+(G0===N1?"!":"!!")}else if(G0==="floor")M[P]="\\left \\lfloor"+this.braces(I0[0])+"\\right \\rfloor";else if(G0==="ceil")M[P]="\\left \\lceil"+this.braces(I0[0])+"\\right \\rceil";else if(G0===U.LOG&&I0.length>1)M[P]="\\mathrm"+this.braces(U.LOG)+"_"+this.braces(I0[1])+this.brackets(I0[0]);else if(G0===U.LOG10)M[P]="\\mathrm"+this.braces(U.LOG)+"_"+this.braces(10)+this.brackets(I0[0]);else if(G0==="sum"){var Y1=I0[0],$1=I0[1],an=I0[2],rn=I0[3];M[P]="\\sum\\limits_{"+this.braces($1)+"="+this.braces(an)+"}^"+this.braces(rn)+" "+this.braces(Y1)}else if(G0==="product"){var Y1=I0[0],$1=I0[1],an=I0[2],rn=I0[3];M[P]="\\prod\\limits_{"+this.braces($1)+"="+this.braces(an)+"}^"+this.braces(rn)+" "+this.braces(Y1)}else if(G0==="nthroot")M[P]="\\sqrt["+I0[1]+"]"+this.braces(I0[0]);else if(G0==="mod")M[P]=I0[0]+" \\bmod "+I0[1];else if(G0==="realpart")M[P]="\\operatorname{Re}"+this.brackets(I0[0]);else if(G0==="imagpart")M[P]="\\operatorname{Im}"+this.brackets(I0[0]);else{var t1=G0!==""?"\\mathrm"+this.braces(G0.replace(/_/g,"\\_")):"";e.isConversion?M[P]=t1+this.brackets(I0.join(""),"parens"):M[P]=t1+this.brackets(I0.join(","),"parens")}}else if(e.isComposite()){for(var F1=e.collectSymbols().sort(S===e1||E===e1?function(_n,jn){return jn.group-_n.group}:function(_n,jn){var Bn=w0(_n.power)?-1:_n.power,Xn=w0(jn.power)?-1:jn.power;return Xn-Bn}),qn=[],Fn=F1.length,m1=0;m1<Fn;m1++)qn.push(L1.latex(F1[m1],f));var p0=qn.join("+");M[P]=!(e.isLinear()&&e.multiplier.equals(1))||l?this.brackets(p0,"parens"):p0}else if(S===O0||E===Y0||E===O0){S===O0&&e.distributeExponent();var Nn=[],nn=[],sn=[],hn=[],zn=0,Tn=0,dn=function(Sn,_n,jn){if(jn>1&&_n.length>0)for(var Bn=_n.length,Xn=0;Xn<Bn;Xn++){var Yn=_n[Xn],Qn=Sn[Yn];/^\\left\(.+\\right\)\^\{.+\}$/g.test(Qn)||/^\\left\(.+\\right\)$/g.test(Qn)||(Sn[Yn]=L1.brackets(Qn,"parens"))}return Sn};e.each(function(Sn){var _n=B(Sn.power),jn;_n?(jn=L1.latex(Sn.invert(),f),Tn++,Sn.isComposite()&&(e.multiplier.den!=1&&Math.abs(Sn.power)==1&&(jn=L1.brackets(jn,"parens")),sn.push(Nn.length)),Nn.push(jn)):(jn=L1.latex(Sn,f),zn++,Sn.isComposite()&&(e.multiplier.num!=1&&Math.abs(Sn.power)==1&&(jn=L1.brackets(jn,"parens")),hn.push(nn.length)),nn.push(jn))}),dn(nn,hn,zn),M[0]=nn.join(this.dot),dn(Nn,sn,Tn),M[1]=Nn.join(this.dot)}return M},set:function(e,t,f,l){var S=function(G0){return/^\\left\(.+\\right\)$/.test(G0)};if(f&&(f=this.formatP(f)),l){var E=f[0];f[0]=""}t=this.merge(t,f);var M=e[0],P=e[1],p0=t[0],l0=t[1];p0&&Number(M)===1&&(M=""),Number(P)===1&&(P="");var h0=this.join(M,p0,S(p0)?"":this.dot),t1=this.join(P,l0,S(l0)?"":this.dot);if(h0&&t1){var I0=this.frac(h0,t1);return l&&E&&(I0=this.brackets(I0)+E),I0}else return h0},merge:function(e,t){for(var f=[],l=0;l<2;l++)f[l]=e[l]+t[l];return f},join:function(e,t,f){return!e&&!t?"":e&&!t?e:t&&!e?t:e+f+t},formatSubscripts:function(e){for(var t=e.toString().split("_"),f="";t.length>1;)t.length>0&&(f="_"+this.braces(t.pop()+f));return t[0]+f},formatP:function(e){for(var t=0;t<2;t++){var f=e[t];f&&(e[t]="^"+this.braces(f))}return e},formatFrac:function(e,t){var f=e.num.toString(),l=e.den.toString();return t&&f==="1"&&l==="1"?"":l==="1"?f:this.frac(f,l)},frac:function(e,t){return"\\frac"+this.braces(e)+this.braces(t)},braces:function(e){return"{"+e+"}"},brackets:function(e,t){t=t||"parens";var f={parens:["(",")"],square:["[","]"],brace:["{","}"],abs:["|","|"],angle:["\\langle","\\rangle"]},l=f[t];return"\\left"+l[0]+e+"\\right"+l[1]},filterTokens:function(e){var t=[];c1(e)&&(t.type=e.type);for(var f=["\\","left","right","big","Big","large","Large"],l=0,S=e.length;l<S;l++){var E=e[l],M=e[l+1];E.value==="\\"&&M.value==="\\"?t.push(E):c1(E)?t.push(L1.filterTokens(E)):f.indexOf(E.value)===-1&&t.push(E)}return t},parse:function(e){var t,f,l="",S=this.filterTokens(e),E={cdot:"",times:"",infty:"Infinity"},M=function(F1){return S[typeof F1>"u"?++t:t+=F1]},P=function(){return L1.parse(M())},p0=function(F1){return F1 in E?E[F1]:F1==="*"&&S[t+1].value==="&"?(M(2),","):F1==="&"?(M(),","):F1==="\\"?"],[":F1};for(t=0,f=S.length;t<f;t++){var l0=S[t];if(l0.value==="frac"){var h0=P(),t1=P();l+=h0+"/"+t1}else if(l0.value in L1.symbols)if(l0.value===Q1&&S[t+1].type==="vector"&&S[t+2].type==="Set"){var I0=P(),G0=P();l+=G0+"^"+F("1/"+I0)}else l+=l0.value+P();else if(l0.value==="int"){var m1=P();t++;var q1=M().value;q1=p0(q1.substring(1,q1.length)),l+="integrate"+F(m1+","+q1)}else if(l0.value==="int_"){var f=P();t++;var _1=M().value;if(_1===void 0){t--;var _1=P()}var m1=P(),q1=M().value;if(q1===",")var q1=M().value;if(q1==="differentialD"){t++;var q1=M().value}if(q1==="mathrm"){t++;var q1=M().value}l+="defint"+F(m1+","+f+","+_1+","+q1)}else if(l0.value&&l0.value.startsWith("int_")){var f=l0.value.replace("int_","");console.log("uppernow"),t++;var _1=M().value;if(_1===void 0){t--;var _1=P()}var m1=P(),q1=M().value;if(q1===",")var q1=M().value;if(q1==="differentialD"){t++;var q1=M().value}if(q1==="mathrm"){t++;var q1=M().value}l+="defint"+F(m1+","+f+","+_1+","+q1)}else if(l0.value==="mathrm"){var m1=S[++t][0].value;l+=m1+P()}else if(l0.value==="sum_"||l0.value==="prod_"){var Y1=l0.value==="sum_"?"sum":"product",$1=M();t++;var an=P(),m1=P();l+=Y1+F([m1,p0($1[0]),p0($1[2]),p0(an)].join(","))}else if(l0.value==="lim_"){var $1=M();l+="limit"+F([P(),p0($1[0]),p0($1[2])].join(","))}else if(l0.value==="begin"){var $1=M();if(Array.isArray($1)){var rn=$1[0].value;rn==="matrix"&&(l+="matrix([")}}else if(l0.value==="end"){var $1=M();if(Array.isArray($1)){var rn=$1[0].value;rn==="matrix"&&(l+="])")}}else Array.isArray(l0)?l+=p0(L1.parse(l0)):l+=p0(l0.value.toString())}return F(l)}};function K1(e){s1(e)?this.elements=e.items.slice(0):c1(e)?this.elements=e.slice(0):this.elements=[].slice.call(arguments)}K1.arrayPrefill=function(e,t){var f=[];t=t||0;for(var l=0;l<e;l++)f[l]=t;return f},K1.fromArray=function(e){var t=new K1;return t.elements=e,t},K1.fromSet=function(e){return K1.fromArray(e.elements)},K1.prototype={custom:!0,e:function(e){return e<1||e>this.elements.length?null:this.elements[e-1]},set:function(e,t){w0(t)||(t=new A(t)),this.elements[e]=t},dimensions:function(){return this.elements.length},modulus:function(){return p1("SAFE",function(){return y.pow(this.dot(this.clone()),new A(.5))},void 0,this)},eql:function(e){var t=this.elements.length,f=e.elements||e;if(t!==f.length)return!1;do if(Math.abs(y.subtract(this.elements[t-1],f[t-1]).valueOf())>PRECISION)return!1;while(--t);return!0},clone:function(){for(var e=new K1,t=this.elements.length,f=0;f<t;f++)e.elements.push(this.elements[f].clone());return this.getter&&(e.getter=this.getter.clone()),e},map:function(e){var t=[];return this.each(function(f,l){t.push(e(f,l))}),new K1(t)},each:function(e){var t=this.elements.length,f=t,l;do l=f-t,e(this.elements[l],l+1);while(--t)},toUnitVector:function(){return p1("SAFE",function(){var e=this.modulus();return e.valueOf()===0?this.clone():this.map(function(t){return y.divide(t,e)})},void 0,this)},angleFrom:function(e){return p1("SAFE",function(){var t=e.elements||e,f=this.elements.length;if(f!==t.length)return null;var l=new A(0),S=new A(0),E=new A(0);this.each(function(l0,h0){l=y.add(l,y.multiply(l0,t[h0-1])),S=y.add(S,y.multiply(l0,l0)),E=y.add(E,y.multiply(t[h0-1],t[h0-1]))}),S=y.pow(S,new A(.5)),E=y.pow(E,new A(.5));var M=y.multiply(S,E);if(M.valueOf()===0)return null;var P=y.divide(l,M),p0=P.valueOf();return p0<-1&&(P=-1),p0>1&&(P=1),new A(Math.acos(P))},void 0,this)},isParallelTo:function(e){var t=this.angleFrom(e).valueOf();return t===null?null:t<=PRECISION},isAntiparallelTo:function(e){var t=this.angleFrom(e).valueOf();return t===null?null:Math.abs(t-Math.PI)<=PRECISION},isPerpendicularTo:function(e){var t=this.dot(e);return t===null?null:Math.abs(t)<=PRECISION},add:function(e){return p1("SAFE",function(){var t=e.elements||e;return this.elements.length!==t.length?null:this.map(function(f,l){return y.add(f,t[l-1])})},void 0,this)},subtract:function(e){return p1("SAFE",function(){var t=e.elements||e;return this.elements.length!==t.length?null:this.map(function(f,l){return y.subtract(f,t[l-1])})},void 0,this)},multiply:function(e){return this.map(function(t){return t.clone()*e.clone()})},x:function(e){return this.multiply(e)},dot:function(e){return p1("SAFE",function(){var t=e.elements||e,f=new A(0),l=this.elements.length;if(l!==t.length)return null;do f=y.add(f,y.multiply(this.elements[l-1],t[l-1]));while(--l);return f},void 0,this)},cross:function(e){var t=e.elements||e;if(this.elements.length!==3||t.length!==3)return null;var f=this.elements;return p1("SAFE",function(){return new K1([y.subtract(y.multiply(f[1],t[2]),y.multiply(f[2],t[1])),y.subtract(y.multiply(f[2],t[0]),y.multiply(f[0],t[2])),y.subtract(y.multiply(f[0],t[1]),y.multiply(f[1],t[0]))])},void 0,this)},max:function(){var e=0,t=this.elements.length,f=t,l;do l=f-t,Math.abs(this.elements[l].valueOf())>Math.abs(e.valueOf())&&(e=this.elements[l]);while(--t);return e},magnitude:function(){var e=new A(0);return this.each(function(t){e=y.add(e,y.pow(t,new A(2)))}),y.sqrt(e)},indexOf:function(e){var t=null,f=this.elements.length,l=f,S;do S=l-f,t===null&&this.elements[S].valueOf()===e.valueOf()&&(t=S+1);while(--f);return t},text:function(e){return B1(this)},toString:function(){return this.text()},latex:function(e){for(var t=[],f=0;f<this.elements.length;f++)t.push(L1.latex.call(L1,this.elements[f],e));return"["+t.join(", ")+"]"}};function f1(){var e=arguments,t=e.length,f,l=[];if(P0(e))for(f=0;f<t;f++)l.push(e[f].slice(0));else{var S,E,M;for(f=0;f<t;f++)S=e[f],s1(S)&&(S=S.elements),c1(S)||(S=[S]),M=S.length,E&&E!==M&&p("Unable to create Matrix. Row dimensions do not match!"),l.push(S),E=M}this.elements=l}f1.identity=function(e){for(var t=new f1,f=0;f<e;f++){t.elements.push([]);for(var l=0;l<e;l++)t.set(f,l,f===l?new A(1):new A(0))}return t},f1.fromArray=function(e){function t(f){return f1.apply(this,f)}return t.prototype=f1.prototype,new t(e)},f1.zeroMatrix=function(e,t){for(var f=new f1,l=0;l<e;l++)f.elements.push(K1.arrayPrefill(t,new A(0)));return f},f1.prototype={custom:!0,get:function(e,t){if(this.elements[e])return this.elements[e][t]},map:function(e,t){var f=new f1;return this.each(function(l,S,E){f.set(S,E,e.call(f,l),t)}),f},set:function(e,t,f,l){this.elements[e]||(this.elements[e]=[]),this.elements[e][t]=l||w0(f)?f:new A(f)},cols:function(){return this.elements[0].length},rows:function(){return this.elements.length},row:function(e){return!e||e>this.cols()?[]:this.elements[e-1]},col:function(e){var t=this.rows(),f=[];if(e>this.cols()||!e)return f;for(var l=0;l<t;l++)f.push(this.elements[l][e-1]);return f},eachElement:function(e){var t=this.rows(),f=this.cols(),l,S;for(l=0;l<t;l++)for(S=0;S<f;S++)e.call(this,this.elements[l][S],l,S)},determinant:function(){if(!this.isSquare())return null;var e=this.toRightTriangular(),t=e.elements[0][0],f=e.elements.length-1,l=f,S;do S=l-f+1,t=y.multiply(t,e.elements[S][S]);while(--f);return t},isSquare:function(){return this.elements.length===this.elements[0].length},isSingular:function(){return this.isSquare()&&this.determinant()===0},augment:function(e){var t=this.rows(),f=e.rows();t!==f&&p("Cannot augment matrix. Rows don't match.");for(var l=0;l<t;l++)this.elements[l]=this.elements[l].concat(e.elements[l]);return this},clone:function(){for(var e=this.rows(),t=this.cols(),f=new f1,l=0;l<e;l++){f.elements[l]=[];for(var S=0;S<t;S++){var E=this.elements[l][S];f.elements[l][S]=w0(E)?E.clone():E}}return f},invert:function(){return this.isSquare()||p("Matrix is not square!"),p1("SAFE",function(){var e=this.elements.length,t=e,f,l,S=f1.identity(e),E=this.augment(S).toRightTriangular(),M,P=E.elements[0].length,p0,l0,h0,t1=[],I0;do{f=e-1,l0=[],M=P,t1[f]=[],h0=E.elements[f][f];do p0=P-M,I0=y.divide(E.elements[f][p0],h0.clone()),l0.push(I0),p0>=t&&t1[f].push(I0);while(--M);for(E.elements[f]=l0,l=0;l<f;l++){l0=[],M=P;do p0=P-M,l0.push(y.subtract(E.elements[l][p0].clone(),y.multiply(E.elements[f][p0].clone(),E.elements[l][f].clone())));while(--M);E.elements[l]=l0}}while(--e);return f1.fromArray(t1)},void 0,this)},toRightTriangular:function(){return p1("SAFE",function(){var e=this.clone(),t,f,l,S=this.elements.length,E=S,M,P,p0=this.elements[0].length,l0;do{if(M=E-S,f=e.elements[M][M],f.valueOf()===0){for(var h0=M+1;h0<E;h0++)if(l=e.elements[h0][M],l&&l.valueOf()!==0){t=[],P=p0;do l0=p0-P,t.push(y.add(e.elements[M][l0].clone(),e.elements[h0][l0].clone()));while(--P);e.elements[M]=t;break}}var f=e.elements[M][M];if(f.valueOf()!==0)for(h0=M+1;h0<E;h0++){var t1=y.divide(e.elements[h0][M].clone(),e.elements[M][M].clone());t=[],P=p0;do l0=p0-P,t.push(l0<=M?new A(0):y.subtract(e.elements[h0][l0].clone(),y.multiply(e.elements[M][l0].clone(),t1.clone())));while(--P);e.elements[h0]=t}}while(--S);return e},void 0,this)},transpose:function(){var e=this.elements.length,t=this.elements[0].length,f=new f1,l=t,S,E,M;do{S=t-l,f.elements[S]=[],E=e;do M=e-E,f.elements[S][M]=this.elements[M][S].clone();while(--E)}while(--l);return f},canMultiplyFromLeft:function(e){var t=P0(e)?e.elements.length:e.length;return this.elements[0].length===t},sameSize:function(e){return this.rows()===e.rows()&&this.cols()===e.cols()},multiply:function(e){return p1("SAFE",function(){var t=e.elements||e;if(!this.canMultiplyFromLeft(t)){if(this.sameSize(e)){for(var f=new f1,l=this.rows(),P=0;P<l;P++){var S=y.multiply(new K1(this.elements[P]),new K1(e.elements[P]));f.elements[P]=S.elements}return f}return null}var E=this.elements.length,M=E,P,p0,l0=t[0].length,h0,t1=this.elements[0].length,I0=[],G0,m1,q1;do{P=M-E,I0[P]=[],p0=l0;do{h0=l0-p0,G0=new A(0),m1=t1;do q1=t1-m1,G0=y.add(G0,y.multiply(this.elements[P][q1],t[q1][h0]));while(--m1);I0[P][h0]=G0}while(--p0)}while(--E);return f1.fromArray(I0)},void 0,this)},add:function(e,t){var f=new f1;return this.sameSize(e)&&this.eachElement(function(l,S,E){var M=y.add(l.clone(),e.elements[S][E].clone());t&&(M=t.call(f,M,l,e.elements[S][E])),f.set(S,E,M)}),f},subtract:function(e,t){var f=new f1;return this.sameSize(e)&&this.eachElement(function(l,S,E){var M=y.subtract(l.clone(),e.elements[S][E].clone());t&&(M=t.call(f,M,l,e.elements[S][E])),f.set(S,E,M)}),f},negate:function(){return this.each(function(e){return e.negate()}),this},toVector:function(){if(this.rows()===1||this.cols()===1){var e=new K1;return e.elements=this.elements,e}return this},toString:function(e,t){for(var f=this.rows(),l=[],S=0;S<f;S++)l.push("["+this.elements[S].map(function(E){var M=t?E.multiplier.toDecimal():E.toString();return E!==void 0?M:""}).join(",")+"]");return"matrix"+F(l.join(","))},text:function(){return"matrix("+this.elements.toString("")+")"},latex:function(e){var t=this.cols(),f=this.elements;return k("\\begin{vmatrix}{0}\\end{vmatrix}",function(){var l=[];for(var S in f){for(var E=[],M=0;M<t;M++)E.push(L1.latex.call(L1,f[S][M],e));l.push(E.join(" & "))}return l.join(" \\cr ")})}},f1.prototype.each=f1.prototype.eachElement;function V1(e){if(this.elements=[],s1(e)||(e=K1.fromArray(arguments)),e)for(var t=e.elements,f=0,l=t.length;f<l;f++)this.add(t[f])}V1.fromArray=function(e){function t(f){return V1.apply(this,f)}return t.prototype=V1.prototype,new t(e)},V1.prototype={add:function(e){this.contains(e)||this.elements.push(e.clone())},contains:function(e){for(var t=0;t<this.elements.length;t++){var f=this.elements[t];if(e.equals(f))return!0}return!1},each:function(e){for(var t=this.elements,f=new V1,l=0,S=t.length;l<S;l++){var E=t[l];e.call(this,E,f,l)}return f},clone:function(){var e=new V1;return this.each(function(t){e.add(t.clone())}),e},union:function(e){var t=this.clone();return e.each(function(f){t.add(f)}),t},difference:function(e){var t=this.clone();return e.each(function(f){t.remove(f)}),t},remove:function(e){for(var t=0,f=this.elements.length;t<f;t++){var l=this.elements[t];if(l.equals(e))return H0(this.elements,t),!0}return!1},intersection:function(e){var t=new V1,f=this;return e.each(function(l){f.contains(l)&&t.add(l)}),t},intersects:function(e){return this.intersection(e).elements.length>0},is_subset:function(e){for(var t=e.elements,f=0,l=t.length;f<l;f++)if(!this.contains(t[f]))return!1;return!0},toString:function(){return"{"+this.elements.join(",")+"}"}};var kn={dependencies:{_rename:{"Math2.factorial":"factorial"},factorial:{"Math2.gamma":W0.gamma},gamma_incomplete:{"Math2.factorial":W0.factorial},Li:{"Math2.Ei":W0.Ei,"Math2.bigLog":W0.bigLog,Frac:y0},Ci:{"Math2.factorial":W0.factorial},Ei:{"Math2.factorial":W0.factorial},Si:{"Math2.factorial":W0.factorial},Shi:{"Math2.factorial":W0.factorial},Chi:{isInt:D,nround:u0,"Math2.num_integrate":W0.num_integrate},factor:{"Math2.ifactor":W0.ifactor,Symbol:A},num_integrate:{"Math2.simpson":W0.simpson,nround:u0},fib:{even:b0}},reformat:{diff:function(e,t){var f=e.args[1].toString(),l="var f = "+kn.build(e.args[0].toString(),[f])+";";return t[1]+="var diff = "+W0.diff.toString()+";",t[1]+=l,["diff(f)("+f+")",t]}},getProperName:function(e){var t={continued_fraction:"continuedFraction"};return t[e]||e},compileDependencies:function(e,t){var f=kn.dependencies[e],l=t&&t[1]?t[1]:"",S=t&&t[0]?t[0]:{};for(var E in f)if(typeof f[E]!="object"){var M=E.split(".");l+="var "+(M.length>1?M[1]:M[0])+"="+f[E]+";",S[E]=M.pop()}return[S,l]},getArgsDeps:function(e,t){for(var f=e.args,l=0;l<f.length;l++)e.args[l].each(function(S){S.group===F0&&(t=kn.compileDependencies(S.fname,t))});return t},build:function(e,t){e=p1("PARSE2NUMBER",function(){return y.parse(e)},!0);var f=X0(e),l=[],S=[],E=function(h0,t1){h0.fname===""&&(h0=A.unwrapPARENS(h0)),t1=t1||[];var I0=[],G0=h0.group,m1="",q1=function(F1){var qn=F1===O0?"*":"+",Fn=[];for(var Nn in h0.symbols){var nn=h0.symbols[Nn],sn=E(nn,t1)[0];nn.isComposite()&&(sn=F(sn)),Fn.push(sn)}var hn=Fn.join(qn);return hn=hn&&!h0.multiplier.equals(1)?F(hn):hn,hn},_1=function(F1){var qn;return F1 in Math?qn="Math."+F1:(F1=kn.getProperName(F1),l.indexOf(F1)===-1&&(t1.push("var "+F1+" = "+W0[F1].toString()+"; "),l.push(F1)),qn=F1),qn=qn+F(h0.args.map(function(Fn){return E(Fn,t1)[0]}).join(",")),qn};G0===X?I0.push(h0.multiplier.toDecimal()):h0.multiplier.equals(-1)?m1="-":h0.multiplier.equals(1)||I0.push(h0.multiplier.toDecimal());var Y1;if(G0===D0||G0===k0)Y1=h0.value;else if(G0===F0)if(S=kn.compileDependencies(h0.fname,S),S=kn.getArgsDeps(h0,S),kn.reformat[h0.fname]){var $1=kn.reformat[h0.fname](h0,S);S=$1[1],Y1=$1[0]}else Y1=_1(h0.fname);else if(G0===Y0){var an=h0.previousGroup;an===X||an===D0?Y1=h0.value:an===F0?(Y1=_1(h0.fname),S=kn.compileDependencies(h0.fname,S),S=kn.getArgsDeps(h0,S)):Y1=q1(h0.previousGroup)}else Y1=q1(h0.group);if(h0.group!==X&&!h0.power.equals(1)){var rn=E(y.parse(h0.power));t1.push(rn[1]),Y1="Math.pow"+F(Y1+","+rn[0])}return Y1&&I0.push(m1+Y1),[I0.join("*"),t1.join("").replace(/\n+\s+/g," ")]};t&&(f=t);var M=E(e);for(var P in S[0]){var p0=S[0][P];M[1]=M[1].replace(P,p0),S[1]=S[1].replace(P,p0)}var l0=new Function(f,(S[1]||"")+M[1]+" return "+M[0]+";");return l0}};(function(){u1(y.CONSTANTS),u1(y.functions),y.initConstants(),y.error||(y.error=p),U.LOG_FNS={log:y.functions.log,log10:y.functions.log10}})();var Ee={allSame:T,allNumeric:f0,arguments2Array:T1,arrayAddSlices:g0,arrayClone:c0,arrayMax:K,arrayMin:Z,arrayEqual:O,arrayUnique:$0,arrayGetVariables:Z0,arraySum:g1,block:p1,build:kn.build,clearU:T0,comboSort:a0,compare:x,convertToVector:v1,customError:v,customType:A0,decompose_fn:v0,each:o0,evaluate:_0,even:b0,evenFraction:B0,fillHoles:X1,firstObject:z,format:k,generatePrimes:O1,getCoeffs:P1,getU:i0,importFunctions:y1,inBrackets:F,isArray:c1,isExpression:n1,isFraction:R0,isInt:D,isMatrix:P0,isNegative:B,isNumericSymbol:R1,isPrime:n0,isReserved:b,isSymbol:w0,isVariableSymbol:Z1,isVector:s1,keys:N,knownVariable:q0,nroots:E0,remove:H0,reserveNames:u1,range:c,round:u0,sameSign:z0,scientificToDecimal:G,separate:d1,stringReplace:t0,text:B1,validateName:_,variables:X0,warn:L},me={groups:N0,Symbol:A,Expression:pn,Frac:y0,Vector:K1,Matrix:f1,Parser:Un,Scientific:G1,Fraction:Zn,Math2:W0,LaTeX:L1,Utils:Ee,PARSER:y,PARENTHESIS:D1,Settings:U,err:p,bigInt:h1,bigDec:K0,exceptions:W1},k1=function(e,t,f,l){var S=!1,E=/^([a-z_][a-z\d\_]*)\(([a-z_,\s]*)\):=(.+)$/gi.exec(e);if(E)return j1.setFunction(E[1],E[2].split(","),E[3]);e instanceof pn&&(e=e.toString()),c1(f)||(f=typeof f>"u"?[]:[f]),f.forEach(function(P){if(P==="numer"){S=!0;return}var p0=y.functions[f];p0&&p0[1]===1&&(e=`${P}(${e})`)});var M=p1("PARSE2NUMBER",function(){return y.parse(e,t)},S||U.PARSE2NUMBER);return l?Q[l-1]=M:Q.push(M),new pn(M)};return k1.rpn=function(e){return y.tokenize(y.toRPN(e))},k1.convertToLaTeX=function(e,t){return y.toTeX(e,t)},k1.convertFromLaTeX=function(e){var t=L1.parse(y.tokenize(e));return new pn(y.parse(t))},k1.version=function(e){if(e)try{return me[e].version}catch{return"No module named "+e+" found!"}return a},k1.getWarnings=function(){return u},k1.setConstant=function(e,t){if(_(e),!b(e))if(t==="delete"||t==="")delete y.CONSTANTS[e];else{if(isNaN(t))throw new W("Constant must be a number!");y.CONSTANTS[e]=t}return this},k1.getConstant=function(e){return String(y.constant[e])},k1.setFunction=H,k1.getCore=function(){return me},k1.getExpression=k1.getEquation=pn.getExpression,k1.reserved=function(e){return e?h:h.join(", ")},k1.clear=function(e,t){if(e==="all")Q=[];else if(e==="last")Q.pop();else if(e==="first")Q.shift();else{var f=e?e-1:Q.length;t===!0?Q[f]=void 0:H0(Q,f)}return this},k1.flush=function(){return this.clear("all"),this},k1.expressions=function(e,t,f){for(var l=e?{}:[],S=0;S<Q.length;S++){var E=t?L1.latex(Q[S],f):B1(Q[S],f);e?l[S+1]=E:l.push(E)}return l},k1.register=function(e){var t=this.getCore();if(c1(e))for(var f=0;f<e.length;f++)e&&this.register(e[f]);else if(e&&U.exclude.indexOf(e.name)===-1){if(e.dependencies){for(var f=0;f<e.dependencies.length;f++)if(!t[e.dependencies[f]])throw new Error(k("{0} requires {1} to be loaded!",e.name,e.dependencies[f]))}var l=e.parent,S=e.build.call(t);if(l){t[l]||(t[e.parent]={});var E=l==="nerdamer"?this:t[l];E[e.name]=S}e.visible&&(y.functions[e.name]=[S,e.numargs])}},k1.validateName=_,k1.validVarName=function(e){try{return _(e),h.indexOf(e)===-1}catch{return!1}},k1.supported=function(){return N(y.functions)},k1.numEquations=k1.numExpressions=function(){return Q.length},k1.setVar=function(e,t){return _(e),e in y.CONSTANTS&&p("Cannot set value for constant "+e),t==="delete"||t===""?delete s[e]:s[e]=w0(t)?t:y.parse(t),this},k1.getVar=function(e){return s[e]},k1.clearVars=function(){return s={},this},k1.load=function(e){return e.call(this),this},k1.getVars=function(e,t){e=e||"text";var f={};if(e==="object")f=s;else for(var l in s)e==="latex"?f[l]=s[l].latex(t):e==="text"&&(f[l]=s[l].text(t));return f},k1.set=function(e,t){if(typeof e=="object")for(var f in e)k1.set(f,e[f]);var l=["SAFE"];l.indexOf(e)!==-1&&p("Cannot modify setting: "+e),e==="PRECISION"?(K0.set({precision:t}),U.PRECISION=t,t>21&&this.set("USE_BIG",!0)):e==="USE_LN"&&t===!0?(U.LOG="LN",U.LOG10="log",y.functions.log=U.LOG_FNS.log10,y.functions.log[0]=function(S){return S.isConstant()?new A(Math.log10(S)):y.symfunction(U.LOG10,[S])},y.functions.LN=U.LOG_FNS.log,delete y.functions.log10):U[e]=t},k1.get=function(e){return U[e]},k1.updateAPI=function(e){var t=function(l){return function(){for(var S=[].slice.call(arguments),E=0;E<S.length;E++)S[E]=y.parse(S[E]);return new pn(p1("PARSE2NUMBER",function(){return y.callfunction(l,S)}))}};for(var f in y.functions)(!(f in k1)||e)&&(k1[f]=t(f))},k1.replaceFunction=function(e,t,f){var l=y.functions[e],S=typeof f>"u"?l[1]:f;y.functions[e]=[t.call(void 0,l[0],me),S]},k1.setOperator=function(e,t){y.setOperator(e,t)},k1.getOperator=function(e){return y.getOperator(e)},k1.aliasOperator=function(e,t){y.aliasOperator(e,t)},k1.tree=function(e){return y.tree(y.toRPN(y.tokenize(e)))},k1.htmlTree=function(e,t){var f=this.tree(e);return`<div class="tree">
    <ul>
        <li>
`+f.toHTML(3,t)+`
        </li>
    </ul>
</div>`},k1.addPeeker=function(e,t){y.peekers[e]&&y.peekers[e].push(t)},k1.removePeeker=function(e,t){H0(y.peekers[e],t)},k1.parse=function(e){return String(e).split(";").map(function(t){return y.parse(t)})},k1.updateAPI(),k1}({bigInt:function(){var m=function(a){var y=1e7,h1=7,K0=9007199254740992,N0=D0(K0),I1=Math.log(K0);function V0(c,N){return typeof c>"u"?V0[0]:typeof N<"u"?+N==10?z0(c):c1(c,N):z0(c)}function U(c,N){this.value=c,this.sign=N,this.isSmall=!1}U.prototype=Object.create(V0.prototype);function X(c){this.value=c,this.sign=c<0,this.isSmall=!0}X.prototype=Object.create(V0.prototype);function k0(c){return-K0<c&&c<K0}function D0(c){return c<1e7?[c]:c<1e14?[c%1e7,Math.floor(c/1e7)]:[c%1e7,Math.floor(c/1e7)%1e7,Math.floor(c/1e14)]}function Y0(c){F0(c);var N=c.length;if(N<4&&G(c,N0)<0)switch(N){case 0:return 0;case 1:return c[0];case 2:return c[0]+c[1]*y;default:return c[0]+(c[1]+c[2]*y)*y}return c}function F0(c){for(var N=c.length;c[--N]===0;);c.length=N+1}function x0(c){for(var N=new Array(c),z=-1;++z<c;)N[z]=0;return N}function O0(c){return c>0?Math.floor(c):Math.ceil(c)}function e1(c,N){var z=c.length,x=N.length,H=new Array(z),K=0,Z=y,O,c0;for(c0=0;c0<x;c0++)O=c[c0]+N[c0]+K,K=O>=Z?1:0,H[c0]=O-K*Z;for(;c0<z;)O=c[c0]+K,K=O===Z?1:0,H[c0++]=O-K*Z;return K>0&&H.push(K),H}function M0(c,N){return c.length>=N.length?e1(c,N):e1(N,c)}function D1(c,N){var z=c.length,x=new Array(z),H=y,K,Z;for(Z=0;Z<z;Z++)K=c[Z]-H+N,N=Math.floor(K/H),x[Z]=K-N*H,N+=1;for(;N>0;)x[Z++]=N%H,N=Math.floor(N/H);return x}U.prototype.add=function(c){var N=z0(c);if(this.sign!==N.sign)return this.subtract(N.negate());var z=this.value,x=N.value;return N.isSmall?new U(D1(z,Math.abs(x)),this.sign):new U(M0(z,x),this.sign)},U.prototype.plus=U.prototype.add,X.prototype.add=function(c){var N=z0(c),z=this.value;if(z<0!==N.sign)return this.subtract(N.negate());var x=N.value;if(N.isSmall){if(k0(z+x))return new X(z+x);x=D0(Math.abs(x))}return new U(D1(x,Math.abs(z)),z<0)},X.prototype.plus=X.prototype.add;function Q1(c,N){var z=c.length,x=N.length,H=new Array(z),K=0,Z=y,O,c0;for(O=0;O<x;O++)c0=c[O]-K-N[O],c0<0?(c0+=Z,K=1):K=0,H[O]=c0;for(O=x;O<z;O++){if(c0=c[O]-K,c0<0)c0+=Z;else{H[O++]=c0;break}H[O]=c0}for(;O<z;O++)H[O]=c[O];return F0(H),H}function M1(c,N,z){var x;return G(c,N)>=0?x=Q1(c,N):(x=Q1(N,c),z=!z),x=Y0(x),typeof x=="number"?(z&&(x=-x),new X(x)):new U(x,z)}function N1(c,N,z){var x=c.length,H=new Array(x),K=-N,Z=y,O,c0;for(O=0;O<x;O++)c0=c[O]+K,K=Math.floor(c0/Z),c0%=Z,H[O]=c0<0?c0+Z:c0;return H=Y0(H),typeof H=="number"?(z&&(H=-H),new X(H)):new U(H,z)}U.prototype.subtract=function(c){var N=z0(c);if(this.sign!==N.sign)return this.add(N.negate());var z=this.value,x=N.value;return N.isSmall?N1(z,Math.abs(x),this.sign):M1(z,x,this.sign)},U.prototype.minus=U.prototype.subtract,X.prototype.subtract=function(c){var N=z0(c),z=this.value;if(z<0!==N.sign)return this.add(N.negate());var x=N.value;return N.isSmall?new X(z-x):N1(x,Math.abs(z),z>=0)},X.prototype.minus=X.prototype.subtract,U.prototype.negate=function(){return new U(this.value,!this.sign)},X.prototype.negate=function(){var c=this.sign,N=new X(-this.value);return N.sign=!c,N},U.prototype.abs=function(){return new U(this.value,!1)},X.prototype.abs=function(){return new X(Math.abs(this.value))};function x1(c,N){var z=c.length,x=N.length,H=z+x,K=x0(H),Z=y,O,c0,g0,E0,a0;for(g0=0;g0<z;++g0){E0=c[g0];for(var v0=0;v0<x;++v0)a0=N[v0],O=E0*a0+K[g0+v0],c0=Math.floor(O/Z),K[g0+v0]=O-c0*Z,K[g0+v0+1]+=c0}return F0(K),K}function Q(c,N){var z=c.length,x=new Array(z),H=y,K=0,Z,O;for(O=0;O<z;O++)Z=c[O]*N+K,K=Math.floor(Z/H),x[O]=Z-K*H;for(;K>0;)x[O++]=K%H,K=Math.floor(K/H);return x}function s(c,N){for(var z=[];N-- >0;)z.push(0);return z.concat(c)}function h(c,N){var z=Math.max(c.length,N.length);if(z<=30)return x1(c,N);z=Math.ceil(z/2);var x=c.slice(z),H=c.slice(0,z),K=N.slice(z),Z=N.slice(0,z),O=h(H,Z),c0=h(x,K),g0=h(M0(H,x),M0(Z,K)),E0=M0(M0(O,s(Q1(Q1(g0,O),c0),z)),s(c0,2*z));return F0(E0),E0}function u(c,N){return-.012*c-.012*N+15e-6*c*N>0}U.prototype.multiply=function(c){var N=z0(c),z=this.value,x=N.value,H=this.sign!==N.sign,K;if(N.isSmall){if(x===0)return V0[0];if(x===1)return this;if(x===-1)return this.negate();if(K=Math.abs(x),K<y)return new U(Q(z,K),H);x=D0(K)}return u(z.length,x.length)?new U(h(z,x),H):new U(x1(z,x),H)},U.prototype.times=U.prototype.multiply;function p(c,N,z){return c<y?new U(Q(N,c),z):new U(x1(N,D0(c)),z)}X.prototype._multiplyBySmall=function(c){return k0(c.value*this.value)?new X(c.value*this.value):p(Math.abs(c.value),D0(Math.abs(this.value)),this.sign!==c.sign)},U.prototype._multiplyBySmall=function(c){return c.value===0?V0[0]:c.value===1?this:c.value===-1?this.negate():p(Math.abs(c.value),this.value,this.sign!==c.sign)},X.prototype.multiply=function(c){return z0(c)._multiplyBySmall(this)},X.prototype.times=X.prototype.multiply;function v(c){var N=c.length,z=x0(N+N),x=y,H,K,Z,O,c0;for(Z=0;Z<N;Z++){O=c[Z],K=0-O*O;for(var g0=Z;g0<N;g0++)c0=c[g0],H=2*(O*c0)+z[Z+g0]+K,K=Math.floor(H/x),z[Z+g0]=H-K*x;z[Z+N]=K}return F0(z),z}U.prototype.square=function(){return new U(v(this.value),!1)},X.prototype.square=function(){var c=this.value*this.value;return k0(c)?new X(c):new U(v(D0(Math.abs(this.value))),!1)};function b(c,N){var z=c.length,x=N.length,H=y,K=x0(N.length),Z=N[x-1],O=Math.ceil(H/(2*Z)),c0=Q(c,O),g0=Q(N,O),E0,a0,v0,u0,i0,T0,o0;for(c0.length<=z&&c0.push(0),g0.push(0),Z=g0[x-1],a0=z-x;a0>=0;a0--){for(E0=H-1,c0[a0+x]!==Z&&(E0=Math.floor((c0[a0+x]*H+c0[a0+x-1])/Z)),v0=0,u0=0,T0=g0.length,i0=0;i0<T0;i0++)v0+=E0*g0[i0],o0=Math.floor(v0/H),u0+=c0[a0+i0]-(v0-o0*H),v0=o0,u0<0?(c0[a0+i0]=u0+H,u0=-1):(c0[a0+i0]=u0,u0=0);for(;u0!==0;){for(E0-=1,v0=0,i0=0;i0<T0;i0++)v0+=c0[a0+i0]-H+g0[i0],v0<0?(c0[a0+i0]=v0+H,v0=0):(c0[a0+i0]=v0,v0=1);u0+=v0}K[a0]=E0}return c0=L(c0,O)[0],[Y0(K),Y0(c0)]}function T(c,N){for(var z=c.length,x=N.length,H=[],K=[],Z=y,O,c0,g0,E0,a0;z;){if(K.unshift(c[--z]),F0(K),G(K,N)<0){H.push(0);continue}c0=K.length,g0=K[c0-1]*Z+K[c0-2],E0=N[x-1]*Z+N[x-2],c0>x&&(g0=(g0+1)*Z),O=Math.ceil(g0/E0);do{if(a0=Q(N,O),G(a0,K)<=0)break;O--}while(O);H.push(O),K=Q1(K,a0)}return H.reverse(),[Y0(H),Y0(K)]}function L(c,N){var z=c.length,x=x0(z),H=y,K,Z,O,c0;for(O=0,K=z-1;K>=0;--K)c0=O*H+c[K],Z=O0(c0/N),O=c0-Z*N,x[K]=Z|0;return[x,O|0]}function _(c,N){var z,x=z0(N),H=c.value,K=x.value,Z;if(K===0)throw new Error("Cannot divide by zero");if(c.isSmall)return x.isSmall?[new X(O0(H/K)),new X(H%K)]:[V0[0],c];if(x.isSmall){if(K===1)return[c,V0[0]];if(K==-1)return[c.negate(),V0[0]];var O=Math.abs(K);if(O<y){z=L(H,O),Z=Y0(z[0]);var c0=z[1];return c.sign&&(c0=-c0),typeof Z=="number"?(c.sign!==x.sign&&(Z=-Z),[new X(Z),new X(c0)]):[new U(Z,c.sign!==x.sign),new X(c0)]}K=D0(O)}var g0=G(H,K);if(g0===-1)return[V0[0],c];if(g0===0)return[V0[c.sign===x.sign?1:-1],V0[0]];H.length+K.length<=200?z=b(H,K):z=T(H,K),Z=z[0];var E0=c.sign!==x.sign,a0=z[1],v0=c.sign;return typeof Z=="number"?(E0&&(Z=-Z),Z=new X(Z)):Z=new U(Z,E0),typeof a0=="number"?(v0&&(a0=-a0),a0=new X(a0)):a0=new U(a0,v0),[Z,a0]}U.prototype.divmod=function(c){var N=_(this,c);return{quotient:N[0],remainder:N[1]}},X.prototype.divmod=U.prototype.divmod,U.prototype.divide=function(c){return _(this,c)[0]},X.prototype.over=X.prototype.divide=U.prototype.over=U.prototype.divide,U.prototype.mod=function(c){return _(this,c)[1]},X.prototype.remainder=X.prototype.mod=U.prototype.remainder=U.prototype.mod,U.prototype.pow=function(c){var N=z0(c),z=this.value,x=N.value,H,K,Z;if(x===0)return V0[1];if(z===0)return V0[0];if(z===1)return V0[1];if(z===-1)return N.isEven()?V0[1]:V0[-1];if(N.sign)return V0[0];if(!N.isSmall)throw new Error("The exponent "+N.toString()+" is too large.");if(this.isSmall&&k0(H=Math.pow(z,x)))return new X(O0(H));for(K=this,Z=V0[1];x&!0&&(Z=Z.times(K),--x),x!==0;)x/=2,K=K.square();return Z},X.prototype.pow=U.prototype.pow,U.prototype.modPow=function(c,N){if(c=z0(c),N=z0(N),N.isZero())throw new Error("Cannot take modPow with modulus 0");for(var z=V0[1],x=this.mod(N);c.isPositive();){if(x.isZero())return V0[0];c.isOdd()&&(z=z.multiply(x).mod(N)),c=c.divide(2),x=x.square().mod(N)}return z},X.prototype.modPow=U.prototype.modPow;function G(c,N){if(c.length!==N.length)return c.length>N.length?1:-1;for(var z=c.length-1;z>=0;z--)if(c[z]!==N[z])return c[z]>N[z]?1:-1;return 0}U.prototype.compareAbs=function(c){var N=z0(c),z=this.value,x=N.value;return N.isSmall?1:G(z,x)},X.prototype.compareAbs=function(c){var N=z0(c),z=Math.abs(this.value),x=N.value;return N.isSmall?(x=Math.abs(x),z===x?0:z>x?1:-1):-1},U.prototype.compare=function(c){if(c===1/0)return-1;if(c===-1/0)return 1;var N=z0(c),z=this.value,x=N.value;return this.sign!==N.sign?N.sign?1:-1:N.isSmall?this.sign?-1:1:G(z,x)*(this.sign?-1:1)},U.prototype.compareTo=U.prototype.compare,X.prototype.compare=function(c){if(c===1/0)return-1;if(c===-1/0)return 1;var N=z0(c),z=this.value,x=N.value;return N.isSmall?z==x?0:z>x?1:-1:z<0!==N.sign?z<0?-1:1:z<0?1:-1},X.prototype.compareTo=X.prototype.compare,U.prototype.equals=function(c){return this.compare(c)===0},X.prototype.eq=X.prototype.equals=U.prototype.eq=U.prototype.equals,U.prototype.notEquals=function(c){return this.compare(c)!==0},X.prototype.neq=X.prototype.notEquals=U.prototype.neq=U.prototype.notEquals,U.prototype.greater=function(c){return this.compare(c)>0},X.prototype.gt=X.prototype.greater=U.prototype.gt=U.prototype.greater,U.prototype.lesser=function(c){return this.compare(c)<0},X.prototype.lt=X.prototype.lesser=U.prototype.lt=U.prototype.lesser,U.prototype.greaterOrEquals=function(c){return this.compare(c)>=0},X.prototype.geq=X.prototype.greaterOrEquals=U.prototype.geq=U.prototype.greaterOrEquals,U.prototype.lesserOrEquals=function(c){return this.compare(c)<=0},X.prototype.leq=X.prototype.lesserOrEquals=U.prototype.leq=U.prototype.lesserOrEquals,U.prototype.isEven=function(){return(this.value[0]&1)===0},X.prototype.isEven=function(){return(this.value&1)===0},U.prototype.isOdd=function(){return(this.value[0]&1)===1},X.prototype.isOdd=function(){return(this.value&1)===1},U.prototype.isPositive=function(){return!this.sign},X.prototype.isPositive=function(){return this.value>0},U.prototype.isNegative=function(){return this.sign},X.prototype.isNegative=function(){return this.value<0},U.prototype.isUnit=function(){return!1},X.prototype.isUnit=function(){return Math.abs(this.value)===1},U.prototype.isZero=function(){return!1},X.prototype.isZero=function(){return this.value===0},U.prototype.isDivisibleBy=function(c){var N=z0(c),z=N.value;return z===0?!1:z===1?!0:z===2?this.isEven():this.mod(N).equals(V0[0])},X.prototype.isDivisibleBy=U.prototype.isDivisibleBy;function n0(c){var N=c.abs();if(N.isUnit())return!1;if(N.equals(2)||N.equals(3)||N.equals(5))return!0;if(N.isEven()||N.isDivisibleBy(3)||N.isDivisibleBy(5))return!1;if(N.lesser(49))return!0}function q0(c,N){for(var z=c.prev(),x=z,H=0,K,Z,O;x.isEven();)x=x.divide(2),H++;n:for(Z=0;Z<N.length;Z++)if(!c.lesser(N[Z])&&(O=m(N[Z]).modPow(x,c),!(O.equals(V0[1])||O.equals(z)))){for(K=H-1;K!=0;K--){if(O=O.square().mod(c),O.isUnit())return!1;if(O.equals(z))continue n}return!1}return!0}U.prototype.isPrime=function(c){var N=n0(this);if(N!==a)return N;var z=this.abs(),x=z.bitLength();if(x<=64)return q0(z,[2,325,9375,28178,450775,9780504,1795265022]);for(var H=Math.log(2)*x,K=Math.ceil(c===!0?2*Math.pow(H,2):H),Z=[],O=0;O<K;O++)Z.push(m(O+2));return q0(z,Z)},X.prototype.isPrime=U.prototype.isPrime,U.prototype.isProbablePrime=function(c){var N=n0(this);if(N!==a)return N;for(var z=this.abs(),x=c===a?5:c,H=[],K=0;K<x;K++)H.push(m.randBetween(2,z.minus(2)));return q0(z,H)},X.prototype.isProbablePrime=U.prototype.isProbablePrime,U.prototype.modInv=function(c){for(var N=m.zero,z=m.one,x=z0(c),H=this.abs(),K,Z,O;!H.equals(m.zero);)K=x.divide(H),Z=N,O=x,N=z,x=H,z=Z.subtract(K.multiply(z)),H=O.subtract(K.multiply(H));if(!x.equals(1))throw new Error(this.toString()+" and "+c.toString()+" are not co-prime");return N.compare(0)===-1&&(N=N.add(c)),this.isNegative()?N.negate():N},X.prototype.modInv=U.prototype.modInv,U.prototype.next=function(){var c=this.value;return this.sign?N1(c,1,this.sign):new U(D1(c,1),this.sign)},X.prototype.next=function(){var c=this.value;return c+1<K0?new X(c+1):new U(N0,!1)},U.prototype.prev=function(){var c=this.value;return this.sign?new U(D1(c,1),!0):N1(c,1,this.sign)},X.prototype.prev=function(){var c=this.value;return c-1>-K0?new X(c-1):new U(N0,!0)};for(var j0=[1];2*j0[j0.length-1]<=y;)j0.push(2*j0[j0.length-1]);var f0=j0.length,R0=j0[f0-1];function w0(c){return(typeof c=="number"||typeof c=="string")&&+Math.abs(c)<=y||c instanceof U&&c.value.length<=1}U.prototype.shiftLeft=function(c){if(!w0(c))throw new Error(String(c)+" is too large for shifting.");if(c=+c,c<0)return this.shiftRight(-c);var N=this;if(N.isZero())return N;for(;c>=f0;)N=N.multiply(R0),c-=f0-1;return N.multiply(j0[c])},X.prototype.shiftLeft=U.prototype.shiftLeft,U.prototype.shiftRight=function(c){var N;if(!w0(c))throw new Error(String(c)+" is too large for shifting.");if(c=+c,c<0)return this.shiftLeft(-c);for(var z=this;c>=f0;){if(z.isZero()||z.isNegative()&&z.isUnit())return z;N=_(z,R0),z=N[1].isNegative()?N[0].prev():N[0],c-=f0-1}return N=_(z,j0[c]),N[1].isNegative()?N[0].prev():N[0]},X.prototype.shiftRight=U.prototype.shiftRight;function n1(c,N,z){N=z0(N);for(var x=c.isNegative(),H=N.isNegative(),K=x?c.not():c,Z=H?N.not():N,O=0,c0=0,g0=null,E0=null,a0=[];!K.isZero()||!Z.isZero();)g0=_(K,R0),O=g0[1].toJSNumber(),x&&(O=R0-1-O),E0=_(Z,R0),c0=E0[1].toJSNumber(),H&&(c0=R0-1-c0),K=g0[0],Z=E0[0],a0.push(z(O,c0));for(var v0=z(x?1:0,H?1:0)!==0?m(-1):m(0),u0=a0.length-1;u0>=0;u0-=1)v0=v0.multiply(R0).add(m(a0[u0]));return v0}U.prototype.not=function(){return this.negate().prev()},X.prototype.not=U.prototype.not,U.prototype.and=function(c){return n1(this,c,function(N,z){return N&z})},X.prototype.and=U.prototype.and,U.prototype.or=function(c){return n1(this,c,function(N,z){return N|z})},X.prototype.or=U.prototype.or,U.prototype.xor=function(c){return n1(this,c,function(N,z){return N^z})},X.prototype.xor=U.prototype.xor;var X0=1<<30,g1=(y&-y)*(y&-y)|X0;function d1(c){var N=c.value,z=typeof N=="number"?N|X0:N[0]+N[1]*y|g1;return z&-z}function X1(c,N){if(N.compareTo(c)<=0){var z=X1(c,N.square(N)),x=z.p,H=z.e,K=x.multiply(N);return K.compareTo(c)<=0?{p:K,e:H*2+1}:{p:x,e:H*2}}return{p:m(1),e:0}}U.prototype.bitLength=function(){var c=this;return c.compareTo(m(0))<0&&(c=c.negate().subtract(m(1))),c.compareTo(m(0))===0?m(0):m(X1(c,m(2)).e).add(m(1))},X.prototype.bitLength=U.prototype.bitLength;function s1(c,N){return c=z0(c),N=z0(N),c.greater(N)?c:N}function P0(c,N){return c=z0(c),N=z0(N),c.lesser(N)?c:N}function i1(c,N){if(c=z0(c).abs(),N=z0(N).abs(),c.equals(N))return c;if(c.isZero())return N;if(N.isZero())return c;for(var z=V0[1],x,H;c.isEven()&&N.isEven();)x=Math.min(d1(c),d1(N)),c=c.divide(x),N=N.divide(x),z=z.multiply(x);for(;c.isEven();)c=c.divide(d1(c));do{for(;N.isEven();)N=N.divide(d1(N));c.greater(N)&&(H=N,N=c,c=H),N=N.subtract(c)}while(!N.isZero());return z.isUnit()?c:c.multiply(z)}function R1(c,N){return c=z0(c).abs(),N=z0(N).abs(),c.divide(i1(c,N)).multiply(N)}function Z1(c,N){c=z0(c),N=z0(N);var z=P0(c,N),x=s1(c,N),H=x.subtract(z).add(1);if(H.isSmall)return z.add(Math.floor(Math.random()*H));for(var K=H.value.length-1,Z=[],O=!0,c0=K;c0>=0;c0--){var g0=O?H.value[c0]:y,E0=O0(Math.random()*g0);Z.unshift(E0),E0<g0&&(O=!1)}return Z=Y0(Z),z.add(typeof Z=="number"?new X(Z):new U(Z,!1))}var c1=function(c,N){for(var z=c.length,x,H=Math.abs(N),x=0;x<z;x++){var K=c[x].toLowerCase();if(K!=="-"&&/[a-z0-9]/.test(K)){if(/[0-9]/.test(K)&&+K>=H){if(K==="1"&&H===1)continue;throw new Error(K+" is not a valid digit in base "+N+".")}else if(K.charCodeAt(0)-87>=H)throw new Error(K+" is not a valid digit in base "+N+".")}}if(2<=N&&N<=36&&z<=I1/Math.log(N)){var Z=parseInt(c,N);if(isNaN(Z))throw new Error(K+" is not a valid digit in base "+N+".");return new X(parseInt(c,N))}N=z0(N);var O=[],c0=c[0]==="-";for(x=c0?1:0;x<c.length;x++){var K=c[x].toLowerCase(),g0=K.charCodeAt(0);if(48<=g0&&g0<=57)O.push(z0(K));else if(97<=g0&&g0<=122)O.push(z0(K.charCodeAt(0)-87));else if(K==="<"){var E0=x;do x++;while(c[x]!==">");O.push(z0(c.slice(E0+1,x)))}else throw new Error(K+" is not a valid character")}return D(O,N,c0)};function D(c,N,z){var x=V0[0],H=V0[1],K;for(K=c.length-1;K>=0;K--)x=x.add(c[K].times(H)),H=H.times(N);return z?x.negate():x}function B(c){return c<=35?"0123456789abcdefghijklmnopqrstuvwxyz".charAt(c):"<"+c+">"}function r0(c,N){if(N=m(N),N.isZero()){if(c.isZero())return{value:[0],isNegative:!1};throw new Error("Cannot convert nonzero numbers to base 0.")}if(N.equals(-1)){if(c.isZero())return{value:[0],isNegative:!1};if(c.isNegative())return{value:[].concat.apply([],Array.apply(null,Array(-c)).map(Array.prototype.valueOf,[1,0])),isNegative:!1};var z=Array.apply(null,Array(+c-1)).map(Array.prototype.valueOf,[0,1]);return z.unshift([1]),{value:[].concat.apply([],z),isNegative:!1}}var x=!1;if(c.isNegative()&&N.isPositive()&&(x=!0,c=c.abs()),N.equals(1))return c.isZero()?{value:[0],isNegative:!1}:{value:Array.apply(null,Array(+c)).map(Number.prototype.valueOf,1),isNegative:x};for(var H=[],K=c,Z;K.isNegative()||K.compareAbs(N)>=0;){Z=K.divmod(N),K=Z.quotient;var O=Z.remainder;O.isNegative()&&(O=N.minus(O).abs(),K=K.next()),H.push(O.toJSNumber())}return H.push(K.toJSNumber()),{value:H.reverse(),isNegative:x}}function F(c,N){var z=r0(c,N);return(z.isNegative?"-":"")+z.value.map(B).join("")}U.prototype.toArray=function(c){return r0(this,c)},X.prototype.toArray=function(c){return r0(this,c)},U.prototype.toString=function(c){if(c===a&&(c=10),c!==10)return F(this,c);for(var N=this.value,z=N.length,x=String(N[--z]),H="0000000",K;--z>=0;)K=String(N[z]),x+=H.slice(K.length)+K;var Z=this.sign?"-":"";return Z+x},X.prototype.toString=function(c){return c===a&&(c=10),c!=10?F(this,c):String(this.value)},U.prototype.toJSON=X.prototype.toJSON=function(){return this.toString()},U.prototype.valueOf=function(){return parseInt(this.toString(),10)},U.prototype.toJSNumber=U.prototype.valueOf,X.prototype.valueOf=function(){return this.value},X.prototype.toJSNumber=X.prototype.valueOf;function t0(c){if(k0(+c)){var N=+c;if(N===O0(N))return new X(N);throw new Error("Invalid integer: "+c)}var z=c[0]==="-";z&&(c=c.slice(1));var x=c.split(/e/i);if(x.length>2)throw new Error("Invalid integer: "+x.join("e"));if(x.length===2){var H=x[1];if(H[0]==="+"&&(H=H.slice(1)),H=+H,H!==O0(H)||!k0(H))throw new Error("Invalid integer: "+H+" is not a valid exponent.");var K=x[0],Z=K.indexOf(".");if(Z>=0&&(H-=K.length-Z-1,K=K.slice(0,Z)+K.slice(Z+1)),H<0)throw new Error("Cannot include negative exponent part for integers");K+=new Array(H+1).join("0"),c=K}var O=/^([0-9][0-9]*)$/.test(c);if(!O)throw new Error("Invalid integer: "+c);for(var c0=[],g0=c.length,E0=h1,a0=g0-E0;g0>0;)c0.push(+c.slice(a0,g0)),a0-=E0,a0<0&&(a0=0),g0-=E0;return F0(c0),new U(c0,z)}function A0(c){if(k0(c)){if(c!==O0(c))throw new Error(c+" is not an integer.");return new X(c)}return t0(c.toString())}function z0(c){return typeof c=="number"?A0(c):typeof c=="string"?t0(c):c}for(var k=0;k<1e3;k++)V0[k]=new X(k),k>0&&(V0[-k]=new X(-k));return V0.one=V0[1],V0.zero=V0[0],V0.minusOne=V0[-1],V0.max=s1,V0.min=P0,V0.gcd=i1,V0.lcm=R1,V0.isInstance=function(c){return c instanceof U||c instanceof X},V0.randBetween=Z1,V0.fromArray=function(c,N,z){return D(c.map(z0),z0(N||10),z)},V0}();return l1.hasOwnProperty("exports")&&(l1.exports=m),m}(),bigDec:function(m){var a,y,h1,K0,N0=9e15,I1=1e9,V0="0123456789abcdef",U="2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058",X="3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789",k0={precision:20,rounding:4,modulo:1,toExpNeg:-7,toExpPos:21,minE:-N0,maxE:N0,crypto:!1},D0=!0,Y0="[DecimalError] ",F0=Y0+"Invalid argument: ",x0=Y0+"Precision limit exceeded",O0=Y0+"crypto unavailable",e1=Math.floor,M0=Math.pow,D1=/^0b([01]+(\.[01]*)?|\.[01]+)(p[+-]?\d+)?$/i,Q1=/^0x([0-9a-f]+(\.[0-9a-f]*)?|\.[0-9a-f]+)(p[+-]?\d+)?$/i,M1=/^0o([0-7]+(\.[0-7]*)?|\.[0-7]+)(p[+-]?\d+)?$/i,N1=/^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,x1=1e7,Q=7,s=U.length-1,h=X.length-1,u={name:"[object Decimal]"};function p(o){var d,g,q,I=o.length-1,w="",R=o[0];if(I>0){for(w+=R,d=1;d<I;d++)q=o[d]+"",(g=Q-q.length)&&(w+=R0(g)),w+=q;R=o[d],(g=Q-(q=R+"").length)&&(w+=R0(g))}else if(R===0)return"0";for(;R%10==0;)R/=10;return w+R}function v(o,d,g){if(o!==~~o||o<d||o>g)throw Error(F0+o)}function b(o,d,g,q){var I,w,R,$;for(w=o[0];w>=10;w/=10)--d;return--d<0?(d+=Q,I=0):(I=Math.ceil((d+1)/Q),d%=Q),w=M0(10,Q-d),$=o[I]%w|0,q==null?d<3?(d==0?$=$/100|0:d==1&&($=$/10|0),R=g<4&&$==99999||g>3&&$==49999||$==5e4||$==0):R=(g<4&&$+1==w||g>3&&$+1==w/2)&&(o[I+1]/w/100|0)==M0(10,d-2)-1||($==w/2||$==0)&&(o[I+1]/w/100|0)==0:d<4?(d==0?$=$/1e3|0:d==1?$=$/100|0:d==2&&($=$/10|0),R=(q||g<4)&&$==9999||!q&&g>3&&$==4999):R=((q||g<4)&&$+1==w||!q&&g>3&&$+1==w/2)&&(o[I+1]/w/1e3|0)==M0(10,d-3)-1,R}function T(o,d,g){for(var q,I,w=[0],R=0,$=o.length;R<$;){for(I=w.length;I--;)w[I]*=d;for(w[0]+=V0.indexOf(o.charAt(R++)),q=0;q<w.length;q++)w[q]>g-1&&(w[q+1]===void 0&&(w[q+1]=0),w[q+1]+=w[q]/g|0,w[q]%=g)}return w.reverse()}u.absoluteValue=u.abs=function(){var o=new this.constructor(this);return o.s<0&&(o.s=1),_(o)},u.ceil=function(){return _(new this.constructor(this),this.e+1,2)},u.comparedTo=u.cmp=function(o){var d,g,q,I,w=this,R=w.d,$=(o=new w.constructor(o)).d,W=w.s,e0=o.s;if(!R||!$)return W&&e0?W!==e0?W:R===$?0:!R^W<0?1:-1:NaN;if(!R[0]||!$[0])return R[0]?W:$[0]?-e0:0;if(W!==e0)return W;if(w.e!==o.e)return w.e>o.e^W<0?1:-1;for(d=0,g=(q=R.length)<(I=$.length)?q:I;d<g;++d)if(R[d]!==$[d])return R[d]>$[d]^W<0?1:-1;return q===I?0:q>I^W<0?1:-1},u.cosine=u.cos=function(){var o,d,g=this,q=g.constructor;return g.d?g.d[0]?(o=q.precision,d=q.rounding,q.precision=o+Math.max(g.e,g.sd())+Q,q.rounding=1,g=function(I,w){var R,$,W=w.d.length;W<32?(R=Math.ceil(W/3),$=(1/R1(4,R)).toString()):(R=16,$="2.3283064365386962890625e-10"),I.precision+=R,w=i1(I,1,w.times($),new I(1));for(var e0=R;e0--;){var Y=w.times(w);w=Y.times(Y).minus(Y).times(8).plus(1)}return I.precision-=R,w}(q,Z1(q,g)),q.precision=o,q.rounding=d,_(K0==2||K0==3?g.neg():g,o,d,!0)):new q(1):new q(NaN)},u.cubeRoot=u.cbrt=function(){var o,d,g,q,I,w,R,$,W,e0,Y=this,d0=Y.constructor;if(!Y.isFinite()||Y.isZero())return new d0(Y);for(D0=!1,(w=Y.s*M0(Y.s*Y,.3333333333333333))&&Math.abs(w)!=1/0?q=new d0(w.toString()):(g=p(Y.d),(w=((o=Y.e)-g.length+1)%3)&&(g+=w==1||w==-2?"0":"00"),w=M0(g,.3333333333333333),o=e1((o+1)/3)-(o%3==(o<0?-1:2)),(q=new d0(g=w==1/0?"5e"+o:(g=w.toExponential()).slice(0,g.indexOf("e")+1)+o)).s=Y.s),R=(o=d0.precision)+3;;)if(e0=(W=($=q).times($).times($)).plus(Y),q=L(e0.plus(Y).times($),e0.plus(W),R+2,1),p($.d).slice(0,R)===(g=p(q.d)).slice(0,R)){if((g=g.slice(R-3,R+1))!="9999"&&(I||g!="4999")){+g&&(+g.slice(1)||g.charAt(0)!="5")||(_(q,o+1,1),d=!q.times(q).times(q).eq(Y));break}if(!I&&(_($,o+1,0),$.times($).times($).eq(Y))){q=$;break}R+=4,I=1}return D0=!0,_(q,o,d0.rounding,d)},u.decimalPlaces=u.dp=function(){var o,d=this.d,g=NaN;if(d){if(g=((o=d.length-1)-e1(this.e/Q))*Q,o=d[o])for(;o%10==0;o/=10)g--;g<0&&(g=0)}return g},u.dividedBy=u.div=function(o){return L(this,new this.constructor(o))},u.dividedToIntegerBy=u.divToInt=function(o){var d=this.constructor;return _(L(this,new d(o),0,1,1),d.precision,d.rounding)},u.equals=u.eq=function(o){return this.cmp(o)===0},u.floor=function(){return _(new this.constructor(this),this.e+1,3)},u.greaterThan=u.gt=function(o){return this.cmp(o)>0},u.greaterThanOrEqualTo=u.gte=function(o){var d=this.cmp(o);return d==1||d===0},u.hyperbolicCosine=u.cosh=function(){var o,d,g,q,I,w=this,R=w.constructor,$=new R(1);if(!w.isFinite())return new R(w.s?1/0:NaN);if(w.isZero())return $;g=R.precision,q=R.rounding,R.precision=g+Math.max(w.e,w.sd())+4,R.rounding=1,(I=w.d.length)<32?d=(1/R1(4,o=Math.ceil(I/3))).toString():(o=16,d="2.3283064365386962890625e-10"),w=i1(R,1,w.times(d),new R(1),!0);for(var W,e0=o,Y=new R(8);e0--;)W=w.times(w),w=$.minus(W.times(Y.minus(W.times(Y))));return _(w,R.precision=g,R.rounding=q,!0)},u.hyperbolicSine=u.sinh=function(){var o,d,g,q,I=this,w=I.constructor;if(!I.isFinite()||I.isZero())return new w(I);if(d=w.precision,g=w.rounding,w.precision=d+Math.max(I.e,I.sd())+4,w.rounding=1,(q=I.d.length)<3)I=i1(w,2,I,I,!0);else{o=(o=1.4*Math.sqrt(q))>16?16:0|o,I=i1(w,2,I=I.times(1/R1(5,o)),I,!0);for(var R,$=new w(5),W=new w(16),e0=new w(20);o--;)R=I.times(I),I=I.times($.plus(R.times(W.times(R).plus(e0))))}return w.precision=d,w.rounding=g,_(I,d,g,!0)},u.hyperbolicTangent=u.tanh=function(){var o,d,g=this,q=g.constructor;return g.isFinite()?g.isZero()?new q(g):(o=q.precision,d=q.rounding,q.precision=o+7,q.rounding=1,L(g.sinh(),g.cosh(),q.precision=o,q.rounding=d)):new q(g.s)},u.inverseCosine=u.acos=function(){var o,d=this,g=d.constructor,q=d.abs().cmp(1),I=g.precision,w=g.rounding;return q!==-1?q===0?d.isNeg()?j0(g,I,w):new g(0):new g(NaN):d.isZero()?j0(g,I+4,w).times(.5):(g.precision=I+6,g.rounding=1,d=d.asin(),o=j0(g,I+4,w).times(.5),g.precision=I,g.rounding=w,o.minus(d))},u.inverseHyperbolicCosine=u.acosh=function(){var o,d,g=this,q=g.constructor;return g.lte(1)?new q(g.eq(1)?0:NaN):g.isFinite()?(o=q.precision,d=q.rounding,q.precision=o+Math.max(Math.abs(g.e),g.sd())+4,q.rounding=1,D0=!1,g=g.times(g).minus(1).sqrt().plus(g),D0=!0,q.precision=o,q.rounding=d,g.ln()):new q(g)},u.inverseHyperbolicSine=u.asinh=function(){var o,d,g=this,q=g.constructor;return!g.isFinite()||g.isZero()?new q(g):(o=q.precision,d=q.rounding,q.precision=o+2*Math.max(Math.abs(g.e),g.sd())+6,q.rounding=1,D0=!1,g=g.times(g).plus(1).sqrt().plus(g),D0=!0,q.precision=o,q.rounding=d,g.ln())},u.inverseHyperbolicTangent=u.atanh=function(){var o,d,g,q,I=this,w=I.constructor;return I.isFinite()?I.e>=0?new w(I.abs().eq(1)?I.s/0:I.isZero()?I:NaN):(o=w.precision,d=w.rounding,q=I.sd(),Math.max(q,o)<2*-I.e-1?_(new w(I),o,d,!0):(w.precision=g=q-I.e,I=L(I.plus(1),new w(1).minus(I),g+o,1),w.precision=o+4,w.rounding=1,I=I.ln(),w.precision=o,w.rounding=d,I.times(.5))):new w(NaN)},u.inverseSine=u.asin=function(){var o,d,g,q,I=this,w=I.constructor;return I.isZero()?new w(I):(d=I.abs().cmp(1),g=w.precision,q=w.rounding,d!==-1?d===0?((o=j0(w,g+4,q).times(.5)).s=I.s,o):new w(NaN):(w.precision=g+6,w.rounding=1,I=I.div(new w(1).minus(I.times(I)).sqrt().plus(1)).atan(),w.precision=g,w.rounding=q,I.times(2)))},u.inverseTangent=u.atan=function(){var o,d,g,q,I,w,R,$,W,e0=this,Y=e0.constructor,d0=Y.precision,C0=Y.rounding;if(e0.isFinite()){if(e0.isZero())return new Y(e0);if(e0.abs().eq(1)&&d0+4<=h)return(R=j0(Y,d0+4,C0).times(.25)).s=e0.s,R}else{if(!e0.s)return new Y(NaN);if(d0+4<=h)return(R=j0(Y,d0+4,C0).times(.5)).s=e0.s,R}for(Y.precision=$=d0+10,Y.rounding=1,o=g=Math.min(28,$/Q+2|0);o;--o)e0=e0.div(e0.times(e0).plus(1).sqrt().plus(1));for(D0=!1,d=Math.ceil($/Q),q=1,W=e0.times(e0),R=new Y(e0),I=e0;o!==-1;)if(I=I.times(W),w=R.minus(I.div(q+=2)),I=I.times(W),(R=w.plus(I.div(q+=2))).d[d]!==void 0)for(o=d;R.d[o]===w.d[o]&&o--;);return g&&(R=R.times(2<<g-1)),D0=!0,_(R,Y.precision=d0,Y.rounding=C0,!0)},u.isFinite=function(){return!!this.d},u.isInteger=u.isInt=function(){return!!this.d&&e1(this.e/Q)>this.d.length-2},u.isNaN=function(){return!this.s},u.isNegative=u.isNeg=function(){return this.s<0},u.isPositive=u.isPos=function(){return this.s>0},u.isZero=function(){return!!this.d&&this.d[0]===0},u.lessThan=u.lt=function(o){return this.cmp(o)<0},u.lessThanOrEqualTo=u.lte=function(o){return this.cmp(o)<1},u.logarithm=u.log=function(o){var d,g,q,I,w,R,$,W,e0=this.constructor,Y=e0.precision,d0=e0.rounding;if(o==null)o=new e0(10),d=!0;else{if(g=(o=new e0(o)).d,o.s<0||!g||!g[0]||o.eq(1))return new e0(NaN);d=o.eq(10)}if(g=this.d,this.s<0||!g||!g[0]||this.eq(1))return new e0(g&&!g[0]?-1/0:this.s!=1?NaN:g?0:1/0);if(d)if(g.length>1)w=!0;else{for(I=g[0];I%10==0;)I/=10;w=I!==1}if(D0=!1,R=d1(this,$=Y+5),q=d?q0(e0,$+10):d1(o,$),b((W=L(R,q,$,1)).d,I=Y,d0))do if(R=d1(this,$+=10),q=d?q0(e0,$+10):d1(o,$),W=L(R,q,$,1),!w){+p(W.d).slice(I+1,I+15)+1==1e14&&(W=_(W,Y+1,0));break}while(b(W.d,I+=10,d0));return D0=!0,_(W,Y,d0)},u.minus=u.sub=function(o){var d,g,q,I,w,R,$,W,e0,Y,d0,C0,a1=this,r1=a1.constructor;if(o=new r1(o),!a1.d||!o.d)return a1.s&&o.s?a1.d?o.s=-o.s:o=new r1(o.d||a1.s!==o.s?a1:NaN):o=new r1(NaN),o;if(a1.s!=o.s)return o.s=-o.s,a1.plus(o);if(e0=a1.d,C0=o.d,$=r1.precision,W=r1.rounding,!e0[0]||!C0[0]){if(C0[0])o.s=-o.s;else{if(!e0[0])return new r1(W===3?-0:0);o=new r1(a1)}return D0?_(o,$,W):o}if(g=e1(o.e/Q),Y=e1(a1.e/Q),e0=e0.slice(),w=Y-g){for((d0=w<0)?(d=e0,w=-w,R=C0.length):(d=C0,g=Y,R=e0.length),w>(q=Math.max(Math.ceil($/Q),R)+2)&&(w=q,d.length=1),d.reverse(),q=w;q--;)d.push(0);d.reverse()}else{for((d0=(q=e0.length)<(R=C0.length))&&(R=q),q=0;q<R;q++)if(e0[q]!=C0[q]){d0=e0[q]<C0[q];break}w=0}for(d0&&(d=e0,e0=C0,C0=d,o.s=-o.s),R=e0.length,q=C0.length-R;q>0;--q)e0[R++]=0;for(q=C0.length;q>w;){if(e0[--q]<C0[q]){for(I=q;I&&e0[--I]===0;)e0[I]=x1-1;--e0[I],e0[q]+=x1}e0[q]-=C0[q]}for(;e0[--R]===0;)e0.pop();for(;e0[0]===0;e0.shift())--g;return e0[0]?(o.d=e0,o.e=n0(e0,g),D0?_(o,$,W):o):new r1(W===3?-0:0)},u.modulo=u.mod=function(o){var d,g=this,q=g.constructor;return o=new q(o),!g.d||!o.s||o.d&&!o.d[0]?new q(NaN):!o.d||g.d&&!g.d[0]?_(new q(g),q.precision,q.rounding):(D0=!1,q.modulo==9?(d=L(g,o.abs(),0,3,1)).s*=o.s:d=L(g,o,0,q.modulo,1),d=d.times(o),D0=!0,g.minus(d))},u.naturalExponential=u.exp=function(){return g1(this)},u.naturalLogarithm=u.ln=function(){return d1(this)},u.negated=u.neg=function(){var o=new this.constructor(this);return o.s=-o.s,_(o)},u.plus=u.add=function(o){var d,g,q,I,w,R,$,W,e0,Y,d0=this,C0=d0.constructor;if(o=new C0(o),!d0.d||!o.d)return d0.s&&o.s?d0.d||(o=new C0(o.d||d0.s===o.s?d0:NaN)):o=new C0(NaN),o;if(d0.s!=o.s)return o.s=-o.s,d0.minus(o);if(e0=d0.d,Y=o.d,$=C0.precision,W=C0.rounding,!e0[0]||!Y[0])return Y[0]||(o=new C0(d0)),D0?_(o,$,W):o;if(w=e1(d0.e/Q),q=e1(o.e/Q),e0=e0.slice(),I=w-q){for(I<0?(g=e0,I=-I,R=Y.length):(g=Y,q=w,R=e0.length),I>(R=(w=Math.ceil($/Q))>R?w+1:R+1)&&(I=R,g.length=1),g.reverse();I--;)g.push(0);g.reverse()}for((R=e0.length)-(I=Y.length)<0&&(I=R,g=Y,Y=e0,e0=g),d=0;I;)d=(e0[--I]=e0[I]+Y[I]+d)/x1|0,e0[I]%=x1;for(d&&(e0.unshift(d),++q),R=e0.length;e0[--R]==0;)e0.pop();return o.d=e0,o.e=n0(e0,q),D0?_(o,$,W):o},u.precision=u.sd=function(o){var d,g=this;if(o!==void 0&&o!==!!o&&o!==1&&o!==0)throw Error(F0+o);return g.d?(d=f0(g.d),o&&g.e+1>d&&(d=g.e+1)):d=NaN,d},u.round=function(){var o=this,d=o.constructor;return _(new d(o),o.e+1,d.rounding)},u.sine=u.sin=function(){var o,d,g=this,q=g.constructor;return g.isFinite()?g.isZero()?new q(g):(o=q.precision,d=q.rounding,q.precision=o+Math.max(g.e,g.sd())+Q,q.rounding=1,g=function(I,w){var R,$=w.d.length;if($<3)return i1(I,2,w,w);R=(R=1.4*Math.sqrt($))>16?16:0|R,w=w.times(1/R1(5,R)),w=i1(I,2,w,w);for(var W,e0=new I(5),Y=new I(16),d0=new I(20);R--;)W=w.times(w),w=w.times(e0.plus(W.times(Y.times(W).minus(d0))));return w}(q,Z1(q,g)),q.precision=o,q.rounding=d,_(K0>2?g.neg():g,o,d,!0)):new q(NaN)},u.squareRoot=u.sqrt=function(){var o,d,g,q,I,w,R=this,$=R.d,W=R.e,e0=R.s,Y=R.constructor;if(e0!==1||!$||!$[0])return new Y(!e0||e0<0&&(!$||$[0])?NaN:$?R:1/0);for(D0=!1,(e0=Math.sqrt(+R))==0||e0==1/0?(((d=p($)).length+W)%2==0&&(d+="0"),e0=Math.sqrt(d),W=e1((W+1)/2)-(W<0||W%2),q=new Y(d=e0==1/0?"5e"+W:(d=e0.toExponential()).slice(0,d.indexOf("e")+1)+W)):q=new Y(e0.toString()),g=(W=Y.precision)+3;;)if(q=(w=q).plus(L(R,w,g+2,1)).times(.5),p(w.d).slice(0,g)===(d=p(q.d)).slice(0,g)){if((d=d.slice(g-3,g+1))!="9999"&&(I||d!="4999")){+d&&(+d.slice(1)||d.charAt(0)!="5")||(_(q,W+1,1),o=!q.times(q).eq(R));break}if(!I&&(_(w,W+1,0),w.times(w).eq(R))){q=w;break}g+=4,I=1}return D0=!0,_(q,W,Y.rounding,o)},u.tangent=u.tan=function(){var o,d,g=this,q=g.constructor;return g.isFinite()?g.isZero()?new q(g):(o=q.precision,d=q.rounding,q.precision=o+10,q.rounding=1,(g=g.sin()).s=1,g=L(g,new q(1).minus(g.times(g)).sqrt(),o+10,0),q.precision=o,q.rounding=d,_(K0==2||K0==4?g.neg():g,o,d,!0)):new q(NaN)},u.times=u.mul=function(o){var d,g,q,I,w,R,$,W,e0,Y=this,d0=Y.constructor,C0=Y.d,a1=(o=new d0(o)).d;if(o.s*=Y.s,!(C0&&C0[0]&&a1&&a1[0]))return new d0(!o.s||C0&&!C0[0]&&!a1||a1&&!a1[0]&&!C0?NaN:C0&&a1?0*o.s:o.s/0);for(g=e1(Y.e/Q)+e1(o.e/Q),(W=C0.length)<(e0=a1.length)&&(w=C0,C0=a1,a1=w,R=W,W=e0,e0=R),w=[],q=R=W+e0;q--;)w.push(0);for(q=e0;--q>=0;){for(d=0,I=W+q;I>q;)$=w[I]+a1[q]*C0[I-q-1]+d,w[I--]=$%x1|0,d=$/x1|0;w[I]=(w[I]+d)%x1|0}for(;!w[--R];)w.pop();return d?++g:w.shift(),o.d=w,o.e=n0(w,g),D0?_(o,d0.precision,d0.rounding):o},u.toBinary=function(o,d){return c1(this,2,o,d)},u.toDecimalPlaces=u.toDP=function(o,d){var g=this,q=g.constructor;return g=new q(g),o===void 0?g:(v(o,0,I1),d===void 0?d=q.rounding:v(d,0,8),_(g,o+g.e+1,d))},u.toExponential=function(o,d){var g,q=this,I=q.constructor;return o===void 0?g=G(q,!0):(v(o,0,I1),d===void 0?d=I.rounding:v(d,0,8),g=G(q=_(new I(q),o+1,d),!0,o+1)),q.isNeg()&&!q.isZero()?"-"+g:g},u.toFixed=function(o,d){var g,q,I=this,w=I.constructor;return o===void 0?g=G(I):(v(o,0,I1),d===void 0?d=w.rounding:v(d,0,8),g=G(q=_(new w(I),o+I.e+1,d),!1,o+q.e+1)),I.isNeg()&&!I.isZero()?"-"+g:g},u.toFraction=function(o){var d,g,q,I,w,R,$,W,e0,Y,d0,C0,a1=this,r1=a1.d,J0=a1.constructor;if(!r1)return new J0(a1);if(e0=g=new J0(1),q=W=new J0(0),R=(w=(d=new J0(q)).e=f0(r1)-a1.e-1)%Q,d.d[0]=M0(10,R<0?Q+R:R),o==null)o=w>0?d:e0;else{if(!($=new J0(o)).isInt()||$.lt(e0))throw Error(F0+$);o=$.gt(d)?w>0?d:e0:$}for(D0=!1,$=new J0(p(r1)),Y=J0.precision,J0.precision=w=r1.length*Q*2;d0=L($,d,0,1,1),(I=g.plus(d0.times(q))).cmp(o)!=1;)g=q,q=I,I=e0,e0=W.plus(d0.times(I)),W=I,I=d,d=$.minus(d0.times(I)),$=I;return I=L(o.minus(g),q,0,1,1),W=W.plus(I.times(e0)),g=g.plus(I.times(q)),W.s=e0.s=a1.s,C0=L(e0,q,w,1).minus(a1).abs().cmp(L(W,g,w,1).minus(a1).abs())<1?[e0,q]:[W,g],J0.precision=Y,D0=!0,C0},u.toHexadecimal=u.toHex=function(o,d){return c1(this,16,o,d)},u.toNearest=function(o,d){var g=this,q=g.constructor;if(g=new q(g),o==null){if(!g.d)return g;o=new q(1),d=q.rounding}else{if(o=new q(o),d===void 0?d=q.rounding:v(d,0,8),!g.d)return o.s?g:o;if(!o.d)return o.s&&(o.s=g.s),o}return o.d[0]?(D0=!1,g=L(g,o,0,d,1).times(o),D0=!0,_(g)):(o.s=g.s,g=o),g},u.toNumber=function(){return+this},u.toOctal=function(o,d){return c1(this,8,o,d)},u.toPower=u.pow=function(o){var d,g,q,I,w,R,$=this,W=$.constructor,e0=+(o=new W(o));if(!($.d&&o.d&&$.d[0]&&o.d[0]))return new W(M0(+$,e0));if(($=new W($)).eq(1))return $;if(q=W.precision,w=W.rounding,o.eq(1))return _($,q,w);if((d=e1(o.e/Q))>=o.d.length-1&&(g=e0<0?-e0:e0)<=9007199254740991)return I=w0(W,$,g,q),o.s<0?new W(1).div(I):_(I,q,w);if((R=$.s)<0){if(d<o.d.length-1)return new W(NaN);if(!(1&o.d[d])&&(R=1),$.e==0&&$.d[0]==1&&$.d.length==1)return $.s=R,$}return(d=(g=M0(+$,e0))!=0&&isFinite(g)?new W(g+"").e:e1(e0*(Math.log("0."+p($.d))/Math.LN10+$.e+1)))>W.maxE+1||d<W.minE-1?new W(d>0?R/0:0):(D0=!1,W.rounding=$.s=1,g=Math.min(12,(d+"").length),(I=g1(o.times(d1($,q+g)),q)).d&&b((I=_(I,q+5,1)).d,q,w)&&(d=q+10,+p((I=_(g1(o.times(d1($,d+g)),d),d+5,1)).d).slice(q+1,q+15)+1==1e14&&(I=_(I,q+1,0))),I.s=R,D0=!0,W.rounding=w,_(I,q,w))},u.toPrecision=function(o,d){var g,q=this,I=q.constructor;return o===void 0?g=G(q,q.e<=I.toExpNeg||q.e>=I.toExpPos):(v(o,1,I1),d===void 0?d=I.rounding:v(d,0,8),g=G(q=_(new I(q),o,d),o<=q.e||q.e<=I.toExpNeg,o)),q.isNeg()&&!q.isZero()?"-"+g:g},u.toSignificantDigits=u.toSD=function(o,d){var g=this.constructor;return o===void 0?(o=g.precision,d=g.rounding):(v(o,1,I1),d===void 0?d=g.rounding:v(d,0,8)),_(new g(this),o,d)},u.toString=function(){var o=this,d=o.constructor,g=G(o,o.e<=d.toExpNeg||o.e>=d.toExpPos);return o.isNeg()&&!o.isZero()?"-"+g:g},u.truncated=u.trunc=function(){return _(new this.constructor(this),this.e+1,1)},u.valueOf=u.toJSON=function(){var o=this,d=o.constructor,g=G(o,o.e<=d.toExpNeg||o.e>=d.toExpPos);return o.isNeg()?"-"+g:g};var L=function(){function o(q,I,w){var R,$=0,W=q.length;for(q=q.slice();W--;)R=q[W]*I+$,q[W]=R%w|0,$=R/w|0;return $&&q.unshift($),q}function d(q,I,w,R){var $,W;if(w!=R)W=w>R?1:-1;else for($=W=0;$<w;$++)if(q[$]!=I[$]){W=q[$]>I[$]?1:-1;break}return W}function g(q,I,w,R){for(var $=0;w--;)q[w]-=$,$=q[w]<I[w]?1:0,q[w]=$*R+q[w]-I[w];for(;!q[0]&&q.length>1;)q.shift()}return function(q,I,w,R,$,W){var e0,Y,d0,C0,a1,r1,J0,S1,ln,fn,W1,W0,B1,w1,pn,G1,y0,A,Un,Zn,L1=q.constructor,K1=q.s==I.s?1:-1,f1=q.d,V1=I.d;if(!(f1&&f1[0]&&V1&&V1[0]))return new L1(q.s&&I.s&&(f1?!V1||f1[0]!=V1[0]:V1)?f1&&f1[0]==0||!V1?0*K1:K1/0:NaN);for(W?(a1=1,Y=q.e-I.e):(W=x1,a1=Q,Y=e1(q.e/a1)-e1(I.e/a1)),Un=V1.length,y0=f1.length,fn=(ln=new L1(K1)).d=[],d0=0;V1[d0]==(f1[d0]||0);d0++);if(V1[d0]>(f1[d0]||0)&&Y--,w==null?(w1=w=L1.precision,R=L1.rounding):w1=$?w+(q.e-I.e)+1:w,w1<0)fn.push(1),r1=!0;else{if(w1=w1/a1+2|0,d0=0,Un==1){for(C0=0,V1=V1[0],w1++;(d0<y0||C0)&&w1--;d0++)pn=C0*W+(f1[d0]||0),fn[d0]=pn/V1|0,C0=pn%V1|0;r1=C0||d0<y0}else{for((C0=W/(V1[0]+1)|0)>1&&(V1=o(V1,C0,W),f1=o(f1,C0,W),Un=V1.length,y0=f1.length),G1=Un,W0=(W1=f1.slice(0,Un)).length;W0<Un;)W1[W0++]=0;(Zn=V1.slice()).unshift(0),A=V1[0],V1[1]>=W/2&&++A;do C0=0,(e0=d(V1,W1,Un,W0))<0?(B1=W1[0],Un!=W0&&(B1=B1*W+(W1[1]||0)),(C0=B1/A|0)>1?(C0>=W&&(C0=W-1),(e0=d(J0=o(V1,C0,W),W1,S1=J0.length,W0=W1.length))==1&&(C0--,g(J0,Un<S1?Zn:V1,S1,W))):(C0==0&&(e0=C0=1),J0=V1.slice()),(S1=J0.length)<W0&&J0.unshift(0),g(W1,J0,W0,W),e0==-1&&(e0=d(V1,W1,Un,W0=W1.length))<1&&(C0++,g(W1,Un<W0?Zn:V1,W0,W)),W0=W1.length):e0===0&&(C0++,W1=[0]),fn[d0++]=C0,e0&&W1[0]?W1[W0++]=f1[G1]||0:(W1=[f1[G1]],W0=1);while((G1++<y0||W1[0]!==void 0)&&w1--);r1=W1[0]!==void 0}fn[0]||fn.shift()}if(a1==1)ln.e=Y,y=r1;else{for(d0=1,C0=fn[0];C0>=10;C0/=10)d0++;ln.e=d0+Y*a1-1,_(ln,$?w+ln.e+1:w,R,r1)}return ln}}();function _(o,d,g,q){var I,w,R,$,W,e0,Y,d0,C0,a1=o.constructor;n:if(d!=null){if(!(d0=o.d))return o;for(I=1,$=d0[0];$>=10;$/=10)I++;if((w=d-I)<0)w+=Q,R=d,W=(Y=d0[C0=0])/M0(10,I-R-1)%10|0;else if((C0=Math.ceil((w+1)/Q))>=($=d0.length)){if(!q)break n;for(;$++<=C0;)d0.push(0);Y=W=0,I=1,R=(w%=Q)-Q+1}else{for(Y=$=d0[C0],I=1;$>=10;$/=10)I++;W=(R=(w%=Q)-Q+I)<0?0:Y/M0(10,I-R-1)%10|0}if(q=q||d<0||d0[C0+1]!==void 0||(R<0?Y:Y%M0(10,I-R-1)),e0=g<4?(W||q)&&(g==0||g==(o.s<0?3:2)):W>5||W==5&&(g==4||q||g==6&&(w>0?R>0?Y/M0(10,I-R):0:d0[C0-1])%10&1||g==(o.s<0?8:7)),d<1||!d0[0])return d0.length=0,e0?(d-=o.e+1,d0[0]=M0(10,(Q-d%Q)%Q),o.e=-d||0):d0[0]=o.e=0,o;if(w==0?(d0.length=C0,$=1,C0--):(d0.length=C0+1,$=M0(10,Q-w),d0[C0]=R>0?(Y/M0(10,I-R)%M0(10,R)|0)*$:0),e0)for(;;){if(C0==0){for(w=1,R=d0[0];R>=10;R/=10)w++;for(R=d0[0]+=$,$=1;R>=10;R/=10)$++;w!=$&&(o.e++,d0[0]==x1&&(d0[0]=1));break}if(d0[C0]+=$,d0[C0]!=x1)break;d0[C0--]=0,$=1}for(w=d0.length;d0[--w]===0;)d0.pop()}return D0&&(o.e>a1.maxE?(o.d=null,o.e=NaN):o.e<a1.minE&&(o.e=0,o.d=[0])),o}function G(o,d,g){if(!o.isFinite())return X1(o);var q,I=o.e,w=p(o.d),R=w.length;return d?(g&&(q=g-R)>0?w=w.charAt(0)+"."+w.slice(1)+R0(q):R>1&&(w=w.charAt(0)+"."+w.slice(1)),w=w+(o.e<0?"e":"e+")+o.e):I<0?(w="0."+R0(-I-1)+w,g&&(q=g-R)>0&&(w+=R0(q))):I>=R?(w+=R0(I+1-R),g&&(q=g-I-1)>0&&(w=w+"."+R0(q))):((q=I+1)<R&&(w=w.slice(0,q)+"."+w.slice(q)),g&&(q=g-R)>0&&(I+1===R&&(w+="."),w+=R0(q))),w}function n0(o,d){var g=o[0];for(d*=Q;g>=10;g/=10)d++;return d}function q0(o,d,g){if(d>s)throw D0=!0,g&&(o.precision=g),Error(x0);return _(new o(U),d,1,!0)}function j0(o,d,g){if(d>h)throw Error(x0);return _(new o(X),d,g,!0)}function f0(o){var d=o.length-1,g=d*Q+1;if(d=o[d]){for(;d%10==0;d/=10)g--;for(d=o[0];d>=10;d/=10)g++}return g}function R0(o){for(var d="";o--;)d+="0";return d}function w0(o,d,g,q){var I,w=new o(1),R=Math.ceil(q/Q+4);for(D0=!1;;){if(g%2&&D((w=w.times(d)).d,R)&&(I=!0),(g=e1(g/2))===0){g=w.d.length-1,I&&w.d[g]===0&&++w.d[g];break}D((d=d.times(d)).d,R)}return D0=!0,w}function n1(o){return 1&o.d[o.d.length-1]}function X0(o,d,g){for(var q,I=new o(d[0]),w=0;++w<d.length;){if(!(q=new o(d[w])).s){I=q;break}I[g](q)&&(I=q)}return I}function g1(o,d){var g,q,I,w,R,$,W,e0=0,Y=0,d0=0,C0=o.constructor,a1=C0.rounding,r1=C0.precision;if(!o.d||!o.d[0]||o.e>17)return new C0(o.d?o.d[0]?o.s<0?0:1/0:1:o.s?o.s<0?0:o:NaN);for(d==null?(D0=!1,W=r1):W=d,$=new C0(.03125);o.e>-2;)o=o.times($),d0+=5;for(W+=q=Math.log(M0(2,d0))/Math.LN10*2+5|0,g=w=R=new C0(1),C0.precision=W;;){if(w=_(w.times(o),W,1),g=g.times(++Y),p(($=R.plus(L(w,g,W,1))).d).slice(0,W)===p(R.d).slice(0,W)){for(I=d0;I--;)R=_(R.times(R),W,1);if(d!=null)return C0.precision=r1,R;if(!(e0<3&&b(R.d,W-q,a1,e0)))return _(R,C0.precision=r1,a1,D0=!0);C0.precision=W+=10,g=w=$=new C0(1),Y=0,e0++}R=$}}function d1(o,d){var g,q,I,w,R,$,W,e0,Y,d0,C0,a1=1,r1=o,J0=r1.d,S1=r1.constructor,ln=S1.rounding,fn=S1.precision;if(r1.s<0||!J0||!J0[0]||!r1.e&&J0[0]==1&&J0.length==1)return new S1(J0&&!J0[0]?-1/0:r1.s!=1?NaN:J0?0:r1);if(d==null?(D0=!1,Y=fn):Y=d,S1.precision=Y+=10,q=(g=p(J0)).charAt(0),!(Math.abs(w=r1.e)<15e14))return e0=q0(S1,Y+2,fn).times(w+""),r1=d1(new S1(q+"."+g.slice(1)),Y-10).plus(e0),S1.precision=fn,d==null?_(r1,fn,ln,D0=!0):r1;for(;q<7&&q!=1||q==1&&g.charAt(1)>3;)q=(g=p((r1=r1.times(o)).d)).charAt(0),a1++;for(w=r1.e,q>1?(r1=new S1("0."+g),w++):r1=new S1(q+"."+g.slice(1)),d0=r1,W=R=r1=L(r1.minus(1),r1.plus(1),Y,1),C0=_(r1.times(r1),Y,1),I=3;;){if(R=_(R.times(C0),Y,1),p((e0=W.plus(L(R,new S1(I),Y,1))).d).slice(0,Y)===p(W.d).slice(0,Y)){if(W=W.times(2),w!==0&&(W=W.plus(q0(S1,Y+2,fn).times(w+""))),W=L(W,new S1(a1),Y,1),d!=null)return S1.precision=fn,W;if(!b(W.d,Y-10,ln,$))return _(W,S1.precision=fn,ln,D0=!0);S1.precision=Y+=10,e0=R=r1=L(d0.minus(1),d0.plus(1),Y,1),C0=_(r1.times(r1),Y,1),I=$=1}W=e0,I+=2}}function X1(o){return String(o.s*o.s/0)}function s1(o,d){var g,q,I;for((g=d.indexOf("."))>-1&&(d=d.replace(".","")),(q=d.search(/e/i))>0?(g<0&&(g=q),g+=+d.slice(q+1),d=d.substring(0,q)):g<0&&(g=d.length),q=0;d.charCodeAt(q)===48;q++);for(I=d.length;d.charCodeAt(I-1)===48;--I);if(d=d.slice(q,I)){if(I-=q,o.e=g=g-q-1,o.d=[],q=(g+1)%Q,g<0&&(q+=Q),q<I){for(q&&o.d.push(+d.slice(0,q)),I-=Q;q<I;)o.d.push(+d.slice(q,q+=Q));d=d.slice(q),q=Q-d.length}else q-=I;for(;q--;)d+="0";o.d.push(+d),D0&&(o.e>o.constructor.maxE?(o.d=null,o.e=NaN):o.e<o.constructor.minE&&(o.e=0,o.d=[0]))}else o.e=0,o.d=[0];return o}function P0(o,d){var g,q,I,w,R,$,W,e0,Y;if(d==="Infinity"||d==="NaN")return+d||(o.s=NaN),o.e=NaN,o.d=null,o;if(Q1.test(d))g=16,d=d.toLowerCase();else if(D1.test(d))g=2;else{if(!M1.test(d))throw Error(F0+d);g=8}for((w=d.search(/p/i))>0?(W=+d.slice(w+1),d=d.substring(2,w)):d=d.slice(2),R=(w=d.indexOf("."))>=0,q=o.constructor,R&&(w=($=(d=d.replace(".","")).length)-w,I=w0(q,new q(g),w,2*w)),w=Y=(e0=T(d,g,x1)).length-1;e0[w]===0;--w)e0.pop();return w<0?new q(0*o.s):(o.e=n0(e0,Y),o.d=e0,D0=!1,R&&(o=L(o,I,4*$)),W&&(o=o.times(Math.abs(W)<54?M0(2,W):a.pow(2,W))),D0=!0,o)}function i1(o,d,g,q,I){var w,R,$,W,e0=o.precision,Y=Math.ceil(e0/Q);for(D0=!1,W=g.times(g),$=new o(q);;){if(R=L($.times(W),new o(d++*d++),e0,1),$=I?q.plus(R):q.minus(R),q=L(R.times(W),new o(d++*d++),e0,1),(R=$.plus(q)).d[Y]!==void 0){for(w=Y;R.d[w]===$.d[w]&&w--;);if(w==-1)break}w=$,$=q,q=R,R=w}return D0=!0,R.d.length=Y+1,R}function R1(o,d){for(var g=o;--d;)g*=o;return g}function Z1(o,d){var g,q=d.s<0,I=j0(o,o.precision,1),w=I.times(.5);if((d=d.abs()).lte(w))return K0=q?4:1,d;if((g=d.divToInt(I)).isZero())K0=q?3:2;else{if((d=d.minus(g.times(I))).lte(w))return K0=n1(g)?q?2:3:q?4:1,d;K0=n1(g)?q?1:4:q?3:2}return d.minus(I).abs()}function c1(o,d,g,q){var I,w,R,$,W,e0,Y,d0,C0,a1=o.constructor,r1=g!==void 0;if(r1?(v(g,1,I1),q===void 0?q=a1.rounding:v(q,0,8)):(g=a1.precision,q=a1.rounding),o.isFinite()){for(r1?(I=2,d==16?g=4*g-3:d==8&&(g=3*g-2)):I=d,(R=(Y=G(o)).indexOf("."))>=0&&(Y=Y.replace(".",""),(C0=new a1(1)).e=Y.length-R,C0.d=T(G(C0),10,I),C0.e=C0.d.length),w=W=(d0=T(Y,10,I)).length;d0[--W]==0;)d0.pop();if(d0[0]){if(R<0?w--:((o=new a1(o)).d=d0,o.e=w,d0=(o=L(o,C0,g,q,0,I)).d,w=o.e,e0=y),R=d0[g],$=I/2,e0=e0||d0[g+1]!==void 0,e0=q<4?(R!==void 0||e0)&&(q===0||q===(o.s<0?3:2)):R>$||R===$&&(q===4||e0||q===6&&1&d0[g-1]||q===(o.s<0?8:7)),d0.length=g,e0)for(;++d0[--g]>I-1;)d0[g]=0,g||(++w,d0.unshift(1));for(W=d0.length;!d0[W-1];--W);for(R=0,Y="";R<W;R++)Y+=V0.charAt(d0[R]);if(r1){if(W>1)if(d==16||d==8){for(R=d==16?4:3,--W;W%R;W++)Y+="0";for(W=(d0=T(Y,I,d)).length;!d0[W-1];--W);for(R=1,Y="1.";R<W;R++)Y+=V0.charAt(d0[R])}else Y=Y.charAt(0)+"."+Y.slice(1);Y=Y+(w<0?"p":"p+")+w}else if(w<0){for(;++w;)Y="0"+Y;Y="0."+Y}else if(++w>W)for(w-=W;w--;)Y+="0";else w<W&&(Y=Y.slice(0,w)+"."+Y.slice(w))}else Y=r1?"0p+0":"0";Y=(d==16?"0x":d==2?"0b":d==8?"0o":"")+Y}else Y=X1(o);return o.s<0?"-"+Y:Y}function D(o,d){if(o.length>d)return o.length=d,!0}function B(o){return new this(o).abs()}function r0(o){return new this(o).acos()}function F(o){return new this(o).acosh()}function t0(o,d){return new this(o).plus(d)}function A0(o){return new this(o).asin()}function z0(o){return new this(o).asinh()}function k(o){return new this(o).atan()}function c(o){return new this(o).atanh()}function N(o,d){o=new this(o),d=new this(d);var g,q=this.precision,I=this.rounding,w=q+4;return o.s&&d.s?o.d||d.d?!d.d||o.isZero()?(g=d.s<0?j0(this,q,I):new this(0)).s=o.s:!o.d||d.isZero()?(g=j0(this,w,1).times(.5)).s=o.s:d.s<0?(this.precision=w,this.rounding=1,g=this.atan(L(o,d,w,1)),d=j0(this,w,1),this.precision=q,this.rounding=I,g=o.s<0?g.minus(d):g.plus(d)):g=this.atan(L(o,d,w,1)):(g=j0(this,w,1).times(d.s>0?.25:.75)).s=o.s:g=new this(NaN),g}function z(o){return new this(o).cbrt()}function x(o){return _(o=new this(o),o.e+1,2)}function H(o){if(!o||typeof o!="object")throw Error(Y0+"Object expected");var d,g,q,I=o.defaults===!0,w=["precision",1,I1,"rounding",0,8,"toExpNeg",-N0,0,"toExpPos",0,N0,"maxE",0,N0,"minE",-N0,0,"modulo",0,9];for(d=0;d<w.length;d+=3)if(g=w[d],I&&(this[g]=k0[g]),(q=o[g])!==void 0){if(!(e1(q)===q&&q>=w[d+1]&&q<=w[d+2]))throw Error(F0+g+": "+q);this[g]=q}if(g="crypto",I&&(this[g]=k0[g]),(q=o[g])!==void 0){if(q!==!0&&q!==!1&&q!==0&&q!==1)throw Error(F0+g+": "+q);if(q){if(typeof crypto>"u"||!crypto||!crypto.getRandomValues&&!crypto.randomBytes)throw Error(O0);this[g]=!0}else this[g]=!1}return this}function K(o){return new this(o).cos()}function Z(o){return new this(o).cosh()}function O(o,d){return new this(o).div(d)}function c0(o){return new this(o).exp()}function g0(o){return _(o=new this(o),o.e+1,3)}function E0(){var o,d,g=new this(0);for(D0=!1,o=0;o<arguments.length;)if((d=new this(arguments[o++])).d)g.d&&(g=g.plus(d.times(d)));else{if(d.s)return D0=!0,new this(1/0);g=d}return D0=!0,g.sqrt()}function a0(o){return o instanceof a||o&&o.name==="[object Decimal]"||!1}function v0(o){return new this(o).ln()}function u0(o,d){return new this(o).log(d)}function i0(o){return new this(o).log(2)}function T0(o){return new this(o).log(10)}function o0(){return X0(this,arguments,"lt")}function b0(){return X0(this,arguments,"gt")}function B0(o,d){return new this(o).mod(d)}function $0(o,d){return new this(o).mul(d)}function Z0(o,d){return new this(o).pow(d)}function C1(o){var d,g,q,I,w=0,R=new this(1),$=[];if(o===void 0?o=this.precision:v(o,1,I1),q=Math.ceil(o/Q),this.crypto)if(crypto.getRandomValues)for(d=crypto.getRandomValues(new Uint32Array(q));w<q;)(I=d[w])>=429e7?d[w]=crypto.getRandomValues(new Uint32Array(1))[0]:$[w++]=I%1e7;else{if(!crypto.randomBytes)throw Error(O0);for(d=crypto.randomBytes(q*=4);w<q;)(I=d[w]+(d[w+1]<<8)+(d[w+2]<<16)+((127&d[w+3])<<24))>=214e7?crypto.randomBytes(4).copy(d,w):($.push(I%1e7),w+=4);w=q/4}else for(;w<q;)$[w++]=1e7*Math.random()|0;for(q=$[--w],o%=Q,q&&o&&(I=M0(10,Q-o),$[w]=(q/I|0)*I);$[w]===0;w--)$.pop();if(w<0)g=0,$=[0];else{for(g=-1;$[0]===0;g-=Q)$.shift();for(q=1,I=$[0];I>=10;I/=10)q++;q<Q&&(g-=Q-q)}return R.e=g,R.d=$,R}function u1(o){return _(o=new this(o),o.e+1,this.rounding)}function H0(o){return(o=new this(o)).d?o.d[0]?o.s:0*o.s:o.s||NaN}function p1(o){return new this(o).sin()}function y1(o){return new this(o).sinh()}function T1(o){return new this(o).sqrt()}function P1(o,d){return new this(o).sub(d)}function _0(o){return new this(o).tan()}function v1(o){return new this(o).tanh()}function O1(o){return _(o=new this(o),o.e+1,1)}return(a=function o(d){var g,q,I;function w(R){var $,W,e0,Y=this;if(!(Y instanceof w))return new w(R);if(Y.constructor=w,R instanceof w)return Y.s=R.s,void(D0?!R.d||R.e>w.maxE?(Y.e=NaN,Y.d=null):R.e<w.minE?(Y.e=0,Y.d=[0]):(Y.e=R.e,Y.d=R.d.slice()):(Y.e=R.e,Y.d=R.d?R.d.slice():R.d));if((e0=typeof R)=="number"){if(R===0)return Y.s=1/R<0?-1:1,Y.e=0,void(Y.d=[0]);if(R<0?(R=-R,Y.s=-1):Y.s=1,R===~~R&&R<1e7){for($=0,W=R;W>=10;W/=10)$++;return void(D0?$>w.maxE?(Y.e=NaN,Y.d=null):$<w.minE?(Y.e=0,Y.d=[0]):(Y.e=$,Y.d=[R]):(Y.e=$,Y.d=[R]))}return 0*R!=0?(R||(Y.s=NaN),Y.e=NaN,void(Y.d=null)):s1(Y,R.toString())}if(e0!=="string")throw Error(F0+R);return(W=R.charCodeAt(0))===45?(R=R.slice(1),Y.s=-1):(W===43&&(R=R.slice(1)),Y.s=1),N1.test(R)?s1(Y,R):P0(Y,R)}if(w.prototype=u,w.ROUND_UP=0,w.ROUND_DOWN=1,w.ROUND_CEIL=2,w.ROUND_FLOOR=3,w.ROUND_HALF_UP=4,w.ROUND_HALF_DOWN=5,w.ROUND_HALF_EVEN=6,w.ROUND_HALF_CEIL=7,w.ROUND_HALF_FLOOR=8,w.EUCLID=9,w.config=w.set=H,w.clone=o,w.isDecimal=a0,w.abs=B,w.acos=r0,w.acosh=F,w.add=t0,w.asin=A0,w.asinh=z0,w.atan=k,w.atanh=c,w.atan2=N,w.cbrt=z,w.ceil=x,w.cos=K,w.cosh=Z,w.div=O,w.exp=c0,w.floor=g0,w.hypot=E0,w.ln=v0,w.log=u0,w.log10=T0,w.log2=i0,w.max=o0,w.min=b0,w.mod=B0,w.mul=$0,w.pow=Z0,w.random=C1,w.round=u1,w.sign=H0,w.sin=p1,w.sinh=y1,w.sqrt=T1,w.sub=P1,w.tan=_0,w.tanh=v1,w.trunc=O1,d===void 0&&(d={}),d&&d.defaults!==!0)for(I=["precision","rounding","toExpNeg","toExpPos","maxE","minE","modulo","crypto"],g=0;g<I.length;)d.hasOwnProperty(q=I[g++])||(d[q]=this[q]);return w.config(d),w}(k0)).default=a.Decimal=a,U=new a(U),X=new a(X),l1.exports?(typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"&&(u[Symbol.for("nodejs.util.inspect.custom")]=u.toString,u[Symbol.toStringTag]="Decimal"),l1.exports=a):(m||(m=typeof self<"u"&&self&&self.self==self?self:window),h1=m.Decimal,a.noConflict=function(){return m.Decimal=h1,a},m.Decimal=a),a}(U2)});l1.exports=j1}(Ie)),Ie.exports}var y2=Ne();const _2=L2(y2);var Re={exports:{}},Ue={exports:{}},Le;function Xe(){return Le||(Le=1,function(l1){{var j1=Ne();$e()}(function(){var m=j1.getCore(),a=m.PARSER,y=m.groups.N,h1=m.groups.P,K0=m.groups.S,N0=m.groups.EX,I1=m.groups.FN,V0=m.groups.PL,U=m.groups.CP,X=m.groups.CB,k0=m.Utils.keys,D0=m.Utils.even,Y0=m.Utils.variables,F0=m.Utils.format,x0=m.Utils.round,O0=m.Frac,e1=m.Utils.isInt,M0=m.Symbol,D1=m.Settings.CONST_HASH,Q1=m.Utils.importFunctions();m.Utils.evaluate;function M1(s,h,u){if(m.Utils.isSymbol(s))this.parse(s),this.variable=this.variable||h;else if(isNaN(s))typeof s=="string"&&this.parse(a.parse(s));else{if(u=u||0,h===void 0)throw new m.exceptions.InvalidVariableNameError("Polynomial expects a variable name when creating using order");this.coeffs=[],this.coeffs[u]=s,this.fill(s)}}M1.fromArray=function(s,h){if(typeof h>"u")throw new m.exceptions.InvalidVariableNameError("A variable name must be specified when creating polynomial from array");var u=new M1;return u.coeffs=s,u.variable=h,u},M1.fit=function(s,h,u,p,v,b){var T=new Array(v+1),L=u-h;T[0]=h,T[v]=s,L-=s*Math.pow(p,v);for(var _=v-1;_>0;_--){var G=Math.pow(p,_),n0=L/G,q0=Math.sign(n0),j0=q0*Math.floor(Math.abs(n0));L-=j0*G,T[_]=j0}if(L!==0)return null;for(var _=0;_<T.length;_++)T[_]=new O0(T[_]);return M1.fromArray(T,b)},M1.prototype={parse:function(s,h){if(this.variable=Y0(s)[0],!s.isPoly())throw m.exceptions.NerdamerTypeError("Polynomial Expected! Received "+m.Utils.text(s));if(h=h||[],s.power.absEquals(1)||(s=a.expand(s)),s.group===m.groups.N)h[0]=s.multiplier;else if(s.group===m.groups.S)h[s.power.toDecimal()]=s.multiplier;else for(var u in s.symbols){var p=s.symbols[u],v=p.power;if(m.Utils.isSymbol(v))throw new m.exceptions.NerdamerTypeError("power cannot be a Symbol");v=p.group===y?0:v.toDecimal(),p.symbols?this.parse(p,h):h[v]=p.multiplier}this.coeffs=h,this.fill()},fill:function(s){s=Number(s)||0;for(var h=this.coeffs.length,u=0;u<h;u++)this.coeffs[u]===void 0&&(this.coeffs[u]=new O0(s));return this},trim:function(){for(var s=this.coeffs.length;s--;){var h=this.coeffs[s],u=h.equals(0);if(h&&u){if(s===0)break;this.coeffs.pop()}else break}return this},modP:function(s){for(var h=this.coeffs.length,u=0;u<h;u++){var p=this.coeffs[u];if(p<0){for(var v,b=u;b<h;b++)if(this.coeffs[b]>0){v=this.coeffs[b];break}if(v){for(b;b>u;b--)this.coeffs[b]=this.coeffs[b].subtract(new O0(1)),this.coeffs[b-1]=this.coeffs[b-1].add(new O0(s));p=this.coeffs[u]}}var T=p.mod(s),L=p.subtract(T).divide(s);if(!L.equals(0)){var _=u+1,G=this.coeffs[_]||new O0(0);G=G.add(L),this.coeffs[_]=new O0(G),this.coeffs[u]=new O0(T)}}return this},add:function(s){for(var h=Math.max(this.coeffs.length,s.coeffs.length),u=0;u<h;u++){var p=this.coeffs[u]||new O0(0),v=s.coeffs[u]||new O0(0);this.coeffs[u]=p.add(v)}return this},subtract:function(s){for(var h=Math.max(this.coeffs.length,s.coeffs.length),u=0;u<h;u++){var p=this.coeffs[u]||new O0(0),v=s.coeffs[u]||new O0(0);this.coeffs[u]=p.subtract(v)}return this},divide:function(s){for(var h=this.variable,u=m.Utils.arrayClone(this.coeffs),p=m.Utils.arrayClone(s.coeffs),v=u.length,b=p.length-1,T=[],L=0;L<v;L++){var _=v-(L+1),G=_-b,n0=u[_].divide(p[b]);if(G<0)break;T[G]=n0;for(var q0=0;q0<=b;q0++)u[q0+G]=u[q0+G].subtract(p[q0].multiply(n0))}var j0=M1.fromArray(u,h||"x").trim(),f0=M1.fromArray(T,h||"x");return[f0,j0]},multiply:function(s){for(var h=this.coeffs.length,u=s.coeffs.length,p=[],v=0;v<h;v++)for(var b=this.coeffs[v],T=0;T<u;T++){var L=v+T,_=s.coeffs[T],G=p[L]||new O0(0);p[L]=G.add(b.multiply(_))}return this.coeffs=p,this},isZero:function(){for(var s=this.coeffs.length,h=0;h<s;h++){var u=this.coeffs[h];if(!u.equals(0))return!1}return!0},sub:function(s){for(var h=new O0(0),u=this.coeffs.length,p=0;p<u;p++){var v=this.coeffs[p];v.equals(0)||(h=h.add(v.multiply(new O0(Math.pow(s,p)))))}return h},clone:function(){var s=new M1;return s.coeffs=this.coeffs,s.variable=this.variable,s},deg:function(){return this.trim(),this.coeffs.length-1},lc:function(){return this.coeffs[this.deg()].clone()},monic:function(){for(var s=this.lc(),h=this.coeffs.length,u=0;u<h;u++)this.coeffs[u]=this.coeffs[u].divide(s);return this},gcd:function(s){var h=this.coeffs.length-1,u=s.coeffs.length-1,p;if(h<u)return s.gcd(this);for(var v=this;!s.isZero();){var b=s.clone();v=v.clone(),p=v.divide(b),s=p[1],v=b}var T=m.Math2.QGCD.apply(null,v.coeffs);if(!T.equals(1))for(var L=v.coeffs.length,_=0;_<L;_++)v.coeffs[_]=v.coeffs[_].divide(T);return v},diff:function(){for(var s=[],h=this.coeffs.length,u=1;u<h;u++)s.push(this.coeffs[u].multiply(new O0(u)));return this.coeffs=s,this},integrate:function(){for(var s=[0],h=this.coeffs.length,u=0;u<h;u++){var p=new O0(u+1);s[p]=this.coeffs[u].divide(p)}return this.coeffs=s,this},gcf:function(s){for(var h=function(L){for(var _=0;_<L.length;_++)if(!L[_].equals(0))return _},u=[],p=0;p<this.coeffs.length;p++){var v=this.coeffs[p];!v.equals(0)&&u.indexOf(v)===-1&&u.push(v)}var b=[m.Math2.QGCD.apply(void 0,u),h(this.coeffs)].toDecimal();if(s){var T=[];T[b[1]-1]=b[0],b=M1.fromArray(T,this.variable).fill()}return b},quad:function(s){var h=[];if(this.coeffs.length>3)throw new Error("Cannot calculate quadratic order of "+(this.coeffs.length-1));if(this.coeffs.length===0)throw new Error("Polynomial array has no terms");var u=this.coeffs[2]||0,p=this.coeffs[1]||0,v=this.coeffs[0],b=p*p-4*u*v;return b<0&&!s||(h[0]=(-p+Math.sqrt(b))/(2*u),h[1]=(-p-Math.sqrt(b))/(2*u)),h},squareFree:function(){for(var s=this.clone(),h=1,u=s.clone().diff(),p=s.clone().gcd(u),v=s.divide(p)[0],b=M1.fromArray([new O0(1)],s.variable);!p.equalsNumber(1);){var T=v.gcd(p),L=v.divide(T)[0];if(!L.equalsNumber(1)&&h>1){for(var _=L.clone(),G=1;G<h;G++)_.multiply(L.clone());L=_}b=b.multiply(L),h++,v=T,p=p.divide(T)[0]}return[b,v,h]},toSymbol:function(){var s=this.coeffs.length,h=this.variable;if(s===0)return new m.Symbol(0);for(var u=s-1,p="",v=0;v<s;v++){var b=v===u?"":"+",T=this.coeffs[v];T.equals(0)||(p+=T+"*"+h+"^"+v+b)}return a.parse(p)},equalsNumber:function(s){return this.trim(),this.coeffs.length===1&&this.coeffs[0].toDecimal()===String(s)},toString:function(){return this.toSymbol().toString()}},M0.prototype.coeffs=function(s,h){h&&!this.isPoly(!0)&&a.error("Polynomial expected when requesting coefficients with order"),s=s||[];var u=this.clone().distributeMultiplier();if(u.isComposite())for(var p in u.symbols){var v=u.symbols[p];v.isComposite()?v.clone().distributeMultiplier().coeffs(s,h):h?s[v.isConstant()?0:v.power.toDecimal()]=v.multiplier:s.push(v.multiplier)}else if(h)s[u.isConstant(!0)?0:u.power.toDecimal()]=u.multiplier;else if(u.group===X&&u.isImaginary()){var b=new M0(u.multiplier);u.each(function(L){(L.isConstant(!0)||L.imaginary)&&(b=a.multiply(b,L))}),s.push(b)}else s.push(u.multiplier);if(h)for(var T=0;T<s.length;T++)s[T]===void 0&&(s[T]=new M0(0));return s},M0.prototype.tBase=function(s){if(typeof s>"u")throw new Error("Symbol.tBase requires a map object!");for(var h=[],u=this.collectSymbols(null,null,null,!0),p=u.length,v=0;v<p;v++){var b=u[v],T=b.group,L=new x1(b.multiplier,[],s);if(T===X)for(var _ in b.symbols){var G=b.symbols[_];L.terms[s[_]]=G.power}else L.terms[s[b.value]]=b.power;h.push(L.fill()),L.updateCount()}return h},M0.prototype.altVar=function(s){var h=this.multiplier.toString(),u=this.power.toString();return(h==="1"?"":h+"*")+s+(u==="1"?"":"^"+u)},M0.prototype.sameVars=function(s){if(!(this.symbols||this.group===s.group))return!1;for(var h in this.symbols){var u=this.symbols[h],p=s.symbols[h];if(!p||u.value!==p.value)return!1}return!0},M0.prototype.groupTerms=function(s){s=String(s);var h,u,p,v=[];return this.each(function(b){if(b.group===V0){p=b.groupTerms(s);for(var T=0;T<p.length;T++){var L=p[T];L&&(v[T]=L)}}else h=m.Utils.decompose_fn(b,s,!0),u=h.x.value===s?Number(h.x.power):0,v[u]=a.add(v[u]||new M0(0),h.a)}),v},M0.prototype.collectFactors=function(){var s=[];return this.group===X?this.each(function(h){s.push(h.clone())}):s.push(this.clone()),s};function N1(){this.factors={},this.length=0}N1.prototype.getNumberSymbolics=function(){var s=0;return this.each(function(h){h.isConstant(!0)||s++}),s},N1.prototype.add=function(s){if(s.equals(0))return this;if(s.equals(-1)&&this.length>0){var h=m.Utils.firstObject(this.factors,null,!0);return this.add(a.symfunction(m.Settings.PARENTHESIS,[h.obj]).negate()),delete this.factors[h.key],this.length--,this}if(s.group===X){var u=this;s.multiplier.equals(1)||u.add(new M0(s.multiplier)),s.each(function(b){u.add(b)})}else{this.preAdd&&(s=this.preAdd(s)),this.pFactor&&(s=a.pow(s,new M0(this.pFactor)));var p=s.isConstant();if(p&&s.equals(1))return this;var v=p?s.value:s.text();v in this.factors?(this.factors[v]=a.multiply(this.factors[v],s),this.factors[v].equals(1)&&(delete this.factors[v],this.length--)):(this.factors[v]=s,this.length++)}return this},N1.prototype.toSymbol=function(){for(var s=new M0(1),h=Object.values(this.factors).sort(function(T,L){return T.group>L.group}),u=0,p=h.length;u<p;u++){var v=h[u],b=v.power.equals(1)&&v.fname!==""?a.symfunction(m.PARENTHESIS,[v]):v;s=a.multiply(s,b)}return s.fname===""&&(s=M0.unwrapPARENS(s)),s},N1.prototype.merge=function(s){for(var h in s)h in this.factors?this.factors[h]=a.multiply(this.factors[h],s[h]):this.factors[h]=s[h];return this},N1.prototype.each=function(s){for(var h in this.factors){var u=this.factors[h];u.fname===m.PARENTHESIS&&u.isLinear()&&(u=u.args[0]),s.call(this,u,h)}return this},N1.prototype.count=function(){return k0(this.factors).length},N1.prototype.clean=function(){try{var s=m.Settings.CONST_HASH;this.factors[s].lessThan(0)&&(this.factors[s].equals(-1)?delete this.factors[s]:this.factors[s].negate(),this.each(function(h){h.negate()}))}catch{}},N1.prototype.toString=function(){return this.toSymbol().toString()};function x1(s,h,u){this.terms=h||[],this.coeff=s,this.map=u,this.sum=new m.Frac(0),this.image=void 0}x1.prototype.updateCount=function(){this.count=this.count||0;for(var s=0;s<this.terms.length;s++)this.terms[s].equals(0)||this.count++;return this},x1.prototype.getVars=function(){for(var s=[],h=0;h<this.terms.length;h++){var u=this.terms[h];this.getRevMap(),u.equals(0)||s.push(this.rev_map[h])}return s.join(" ")},x1.prototype.len=function(){return typeof this.count>"u"&&this.updateCount(),this.count},x1.prototype.toSymbol=function(s){s=s||this.getRevMap();for(var h=new M0(this.coeff),u=0;u<this.terms.length;u++){var p=s[u],v=this.terms[u];if(!(v.equals(0)||p===D1)){var b=new M0(p);b.power=v,h=a.multiply(h,b)}}return h},x1.prototype.getRevMap=function(){if(this.rev_map)return this.rev_map;var s={};for(var h in this.map)s[this.map[h]]=h;return this.rev_map=s,s},x1.prototype.generateImage=function(){return this.image=this.terms.join(" "),this},x1.prototype.getImg=function(){return this.image||this.generateImage(),this.image},x1.prototype.fill=function(){for(var s=this.map.length,h=0;h<s;h++)typeof this.terms[h]>"u"?this.terms[h]=new m.Frac(0):this.sum=this.sum.add(this.terms[h]);return this},x1.prototype.divide=function(s){for(var h=this.coeff.divide(s.coeff),u=this.terms.length,p=new x1(h,[],this.map),v=0;v<u;v++)p.terms[v]=this.terms[v].subtract(s.terms[v]),p.sum=p.sum.add(p.terms[v]);return p},x1.prototype.multiply=function(s){for(var h=this.coeff.multiply(s.coeff),u=this.terms.length,p=new x1(h,[],this.map),v=0;v<u;v++)p.terms[v]=this.terms[v].add(s.terms[v]),p.sum=p.sum.add(p.terms[v]);return p},x1.prototype.isZero=function(){return this.coeff.equals(0)},x1.prototype.toString=function(){return"{ coeff: "+this.coeff.toString()+", terms: ["+this.terms.join(",")+"]: sum: "+this.sum.toString()+", count: "+this.count+"}"},m.Utils.toMapObj=function(s){for(var h=0,u={},p=0;p<s.length;p++){var v=s[p];typeof u[v]>"u"&&(u[v]=h,h++)}return u.length=h,u},m.Utils.filledArray=function(s,h,u){for(var p=[];h--;)p[h]=u?new u(s):s;return p},m.Utils.arrSum=function(s){for(var h=0,u=s.length,p=0;p<u;p++)h+=s[p];return h},m.Utils.haveIntersection=function(s,h){var u;return h.length>s.length&&(u=h,h=s,s=u),s.some(function(p){return h.indexOf(p)>-1})},m.Utils.subFunctions=function(s,h){h=h||{};var u=[];return s.each(function(p){if(p.group===I1||p.previousGroup===I1){var v=m.Utils.text(p,"hash"),b=h[v];if(b)u.push(p.altVar(b));else{var T=p.fname+k0(h).length;h[v]=T,u.push(p.altVar(T))}}else p.group===X||p.group===V0||p.group===U?u.push(m.Utils.subFunctions(p,h)):u.push(p.text())}),s.group===U||s.group===V0?s.altVar(m.Utils.inBrackets(u.join("+"))):s.group===X?s.altVar(m.Utils.inBrackets(u.join("*"))):s.text()},m.Utils.getFunctionsSubs=function(s){var h={};for(var u in s)h[s[u]]=a.parse(u);return h};var Q=m.Algebra={version:"1.4.6",proots:function(s,h){h=h||7;var u=0,p=[],v=function(i1,R1,Z1){for(var c1=P0(i1,R1,Z1).concat(p),D=0;D<u;D++)c1.unshift(0);return c1};if(s instanceof M0&&s.isPoly()){if(s.distributeMultiplier(),s.group===V0){var b=m.Utils.arrayMin(k0(s.symbols)),T=s.symbols[b].clone().toUnitMultiplier();s=a.expand(a.divide(s,T)),p.push(0)}if(s.group===m.groups.S)return[0];if(s.group===m.groups.PL)var q0=k0(s.symbols),L=m.Utils.arrayMin(q0),s=m.PARSER.divide(s,m.PARSER.parse(s.value+"^"+L));for(var _=k0(s.symbols).sort().pop(),G=s.group===m.groups.PL?s.symbols:s.symbols[_],n0=G.group,q0=n0===K0?[G.power.toDecimal()]:k0(G.symbols),j0=[],f0=m.Utils.arrayMax(q0),R0=1;R0<=f0;R0++){var w0=0;q0.indexOf(R0+"")!==-1&&(n0===K0?w0=G.multiplier:w0=G.symbols[R0].multiplier),j0.unshift(w0)}return j0.push(s.symbols[D1].multiplier),G.group===K0&&(j0[0]=G.multiplier),v(j0,q0,f0)}else if(m.Utils.isArray(s)){for(var n1=s,j0=[],q0=[],X0=0,R0=0;R0<n1.length;R0++){for(var g1=n1[R0][0],d1=n1[R0][1],X1=d1-X0-1,s1=0;s1<X1;s1++)j0.unshift(0);j0.unshift(g1),d1!==0&&q0.push(d1),X0=d1}var f0=Math.max.apply(void 0,q0);return v(j0,q0,f0)}else throw new m.exceptions.NerdamerTypeError("Cannot calculate roots. Symbol must be a polynomial!");function P0(i1,R1,Z1){var c1=100,D=i1.slice(0);if(i1.unshift(Z1),Z1>c1)throw new m.exceptions.ValueLimitExceededError("This utility accepts polynomials of degree up to "+c1+". ");var B=[],r0={};for(r0.Degree=Z1,R0=0;R0<Z1;R0++)B.push(0);var F=B.slice(0);function t0(E0,a0,v0,u0,i0,T0){i0[0]=T0.b=u0[0],i0[1]=T0.a=-(a0*T0.b)+u0[1];for(var o0=2;o0<E0;o0++)i0[o0]=-(a0*T0.a+v0*T0.b)+u0[o0],T0.b=T0.a,T0.a=i0[o0]}function A0(E0,a0,v0,u0,i0,T0,o0,b0,B0){var $0=new Object,Z0=3;return $0.b=$0.a=0,t0(a0,o0,b0,T0,B0,$0),i0.c=$0.a,i0.d=$0.b,Math.abs(i0.c)<=100*E0*Math.abs(T0[a0-1])&&Math.abs(i0.d)<=100*E0*Math.abs(T0[a0-2])||(i0.h=b0*u0,Math.abs(i0.d)>=Math.abs(i0.c)?(Z0=2,i0.e=v0/i0.d,i0.f=i0.c/i0.d,i0.g=o0*u0,i0.a3=i0.e*(i0.g+v0)+i0.h*(u0/i0.d),i0.a1=-v0+i0.f*u0,i0.a7=i0.h+(i0.f+o0)*v0):(Z0=1,i0.e=v0/i0.c,i0.f=i0.d/i0.c,i0.g=i0.e*o0,i0.a3=i0.e*v0+(i0.g+i0.h/i0.c)*u0,i0.a1=-(v0*(i0.d/i0.c))+u0,i0.a7=i0.g*i0.d+i0.h*i0.f+v0)),Z0}function z0(E0,a0,v0,u0,i0,T0,o0,b0,B0){var $0;if(v0==3){o0[1]=o0[0]=0;for(var Z0=2;Z0<a0;Z0++)o0[Z0]=b0[Z0-2];return}if($0=v0==1?i0:u0,Math.abs(T0.a1)>10*E0*Math.abs($0)){T0.a7/=T0.a1,T0.a3/=T0.a1,o0[0]=B0[0],o0[1]=-(B0[0]*T0.a7)+B0[1];for(var Z0=2;Z0<a0;Z0++)o0[Z0]=-(B0[Z0-1]*T0.a7)+b0[Z0-2]*T0.a3+B0[Z0]}else{o0[0]=0,o0[1]=-(B0[0]*T0.a7);for(var Z0=2;Z0<a0;Z0++)o0[Z0]=-(B0[Z0-1]*T0.a7)+b0[Z0-2]*T0.a3}}function k(E0,a0,v0,u0,i0,T0,o0,b0,B0,$0,Z0,C1,u1,H0,p1,y1,T1){var P1,_0,v1,O1,o,d,g,q,I;a0.b=a0.a=0,E0!=3&&(E0!=2?(P1=v0+u1*o0+C1*$0,_0=b0+(u1+H0*$0)*B0):(P1=(v0+Z0)*$0+C1,_0=($0+u1)*b0+H0*B0),v1=-(p1[y1-1]/T1[y1]),O1=-(p1[y1-2]+v1*T1[y1-1])/T1[y1],o=H0*O1*u0,d=v1*T0,g=v1*v1*i0,q=-(d+g)+o,I=-q+_0+v1*P1,I!=0&&(a0.a=-((u1*(g+d)+H0*(v1*u0+O1*T0))/I)+u1,a0.b=H0*(1+q/I)))}function c(E0,a0,v0,u0){var i0,T0,o0;if(u0.sr=u0.si=u0.lr=u0.li=0,E0==0){u0.sr=a0!=0?-(v0/a0):u0.sr;return}if(v0==0){u0.lr=-(a0/E0);return}i0=a0/2,Math.abs(i0)<Math.abs(v0)?(o0=v0>=0?E0:-E0,o0=-o0+i0*(i0/Math.abs(v0)),T0=Math.sqrt(Math.abs(o0))*Math.sqrt(Math.abs(v0))):(o0=-(E0/i0*(v0/i0))+1,T0=Math.sqrt(Math.abs(o0))*Math.abs(i0)),o0>=0?(T0=i0>=0?-T0:T0,u0.lr=(-i0+T0)/E0,u0.sr=u0.lr!=0?v0/u0.lr/E0:u0.sr):(u0.lr=u0.sr=-(i0/E0),u0.si=Math.abs(T0/E0),u0.li=-u0.si)}function N(E0,a0,v0,u0,i0,T0,o0,b0,B0,$0,Z0,C1){var u1=new Object,H0,p1,y1,T1,P1,_0,v1,O1,o,d,g,q=0,I,w=0;v0.NZ=0,_0=u0,O1=i0;do{if(u1.li=u1.lr=u1.si=u1.sr=0,c(1,_0,O1,u1),v0.szr=u1.sr,v0.szi=u1.si,v0.lzr=u1.lr,v0.lzi=u1.li,Math.abs(Math.abs(v0.szr)-Math.abs(v0.lzr))>.01*Math.abs(v0.lzr))break;for(t0(o0,_0,O1,B0,T0,b0),p1=Math.abs(-(v0.szr*b0.b)+b0.a)+Math.abs(v0.szi*b0.b),d=Math.sqrt(Math.abs(O1)),H0=2*Math.abs(T0[0]),P1=-(v0.szr*b0.b),g=1;g<a0;g++)H0=H0*d+Math.abs(T0[g]);if(H0=H0*d+Math.abs(P1+b0.a),H0=(9*H0+2*Math.abs(P1)-7*(Math.abs(b0.a+P1)+d*Math.abs(b0.b)))*E0,p1<=20*H0){v0.NZ=2;break}if(q++,q>20)break;if(q>=2&&T1<=.01&&p1>=y1&&!w){for(T1=T1<E0?Math.sqrt(E0):Math.sqrt(T1),_0-=_0*T1,O1+=O1*T1,t0(o0,_0,O1,B0,T0,b0),g=0;g<5;g++)I=A0(E0,a0,b0.a,b0.b,Z0,C1,_0,O1,$0),z0(E0,a0,I,b0.a,b0.b,Z0,C1,$0,T0);w=1,q=0}y1=p1,I=A0(E0,a0,b0.a,b0.b,Z0,C1,_0,O1,$0),z0(E0,a0,I,b0.a,b0.b,Z0,C1,$0,T0),I=A0(E0,a0,b0.a,b0.b,Z0,C1,_0,O1,$0),k(I,b0,b0.a,Z0.a1,Z0.a3,Z0.a7,b0.b,Z0.c,Z0.d,Z0.f,Z0.g,Z0.h,_0,O1,C1,a0,B0),v1=b0.a,o=b0.b,o!=0&&(T1=Math.abs((-O1+o)/o),_0=v1,O1=o)}while(o!=0)}function z(E0,a0,v0,u0,i0,T0,o0,b0,B0){var $0,Z0,C1,u1,H0,p1,y1,T1,P1,_0,v1,O1=u0-1;for(a0.NZ=v1=P1=0,y1=v0.a;;){for(p1=i0[0],o0[0]=p1,_0=1;_0<T0;_0++)o0[_0]=p1=p1*y1+i0[_0];for(C1=Math.abs(p1),u1=Math.abs(y1),$0=.5*Math.abs(o0[0]),_0=1;_0<T0;_0++)$0=$0*u1+Math.abs(o0[_0]);if(C1<=20*E0*(2*$0-C1)){a0.NZ=1,a0.szr=y1,a0.szi=0;break}if(v1++,v1>10)break;if(v1>=2&&Math.abs(T1)<=.001*Math.abs(-T1+y1)&&C1>H0){P1=1,a0.a=y1;break}for(H0=C1,B0[0]=Z0=b0[0],_0=1;_0<u0;_0++)B0[_0]=Z0=Z0*y1+b0[_0];if(Math.abs(Z0)>Math.abs(b0[O1])*10*E0)for(T1=-(p1/Z0),b0[0]=o0[0],_0=1;_0<u0;_0++)b0[_0]=T1*B0[_0-1]+o0[_0];else for(b0[0]=0,_0=1;_0<u0;_0++)b0[_0]=B0[_0-1];for(Z0=b0[0],_0=1;_0<u0;_0++)Z0=Z0*y1+b0[_0];T1=Math.abs(Z0)>Math.abs(b0[O1])*10*E0?-(p1/Z0):0,y1+=T1}return P1}function x(E0,a0,v0,u0,i0,T0,o0,b0,B0,$0,Z0,C1){var u1=new Object,H0=new Object,p1=new Array(a0),y1=new Array(a0),T1,P1,_0,v1,O1,o,d,g,q,I,w,R,$,W,e0,Y,d0,C0,a1,r1=1,J0,S1,ln,fn,W1,W0;for(C1.NZ=0,v1=_0=.25,O1=u0,g=i0,u1.b=u1.a=0,t0(B0,Z0,i0,b0,$0,u1),T1=u1.a,P1=u1.b,H0.h=H0.g=H0.f=H0.e=H0.d=H0.c=H0.a7=H0.a3=H0.a1=0,fn=A0(E0,o0,T1,P1,H0,T0,Z0,i0,p1),J0=0;J0<v0;J0++){if(C0=1,z0(E0,o0,fn,T1,P1,H0,T0,p1,$0),fn=A0(E0,o0,T1,P1,H0,T0,Z0,i0,p1),k(fn,u1,T1,H0.a1,H0.a3,H0.a7,P1,H0.c,H0.d,H0.f,H0.g,H0.h,Z0,i0,T0,o0,b0),e0=u1.a,d0=Y=u1.b,I=T0[o0-1]!=0?-(b0[o0]/T0[o0-1]):0,w=$=1,J0!=0&&fn!=3&&($=d0!=0?Math.abs((d0-g)/d0):$,w=I!=0?Math.abs((I-O1)/I):w,W=$<d?$*d:1,R=w<o?w*o:1,W1=W<v1?1:0,S1=R<_0?1:0,S1||W1)){for(a1=0;a1<o0;a1++)y1[a1]=T0[a1];for(q=I,ln=W0=0;;){if(!(C0&&(C0=0)==0&&S1&&(!W1||R<W))){if(N(E0,o0,C1,e0,Y,$0,B0,u1,b0,p1,H0,T0),T1=u1.a,P1=u1.b,C1.NZ>0)return;if(r1=W0=1,v1*=.25,ln||!S1)r1=0;else for(a1=0;a1<o0;a1++)T0[a1]=y1[a1]}if(r1!=0){if(u1.a=q,r1=z(E0,C1,u1,o0,b0,B0,$0,T0,p1),q=u1.a,C1.NZ>0)return;if(ln=1,_0*=.25,r1!=0){e0=-(q+q),Y=q*q;continue}}for(a1=0;a1<o0;a1++)T0[a1]=y1[a1];if(!W1||W0)break}t0(B0,Z0,i0,b0,$0,u1),T1=u1.a,P1=u1.b,fn=A0(E0,o0,T1,P1,H0,T0,Z0,i0,p1)}g=d0,O1=I,d=$,o=w}}function H(E0,a0,v0,u0){var i0=E0.Degree,T0=3.141592653589793/180,o0=Math.LN2,b0=E0.Degree+1,B0=new Array(b0),$0=new Array(b0),Z0=new Array(b0),C1=new Array(b0),u1=new Object,H0=new Object,p1,y1,T1,P1,_0,v1,O1,o,d,g,q,I,w,R,$,W,e0,Y,d0,C0,a1,r1,J0,S1;I=1;do y1=I,I/=2,w=1+I;while(w>1);var ln=Number.MIN_VALUE/y1,fn=Math.cos(94*T0),W1=Math.sin(94*T0),W0=Math.sqrt(.5),B1=-W0;for(H0.NZ=d0=0,H0.szr=H0.szi=H0.lzr=H0.lzi=0;a0[i0]==0;)v0[d0]=u0[d0]=0,i0--,d0++;for(J0=i0+1;i0>=1;){if(i0<=2){i0<2?(v0[E0.Degree-1]=-(a0[1]/a0[0]),u0[E0.Degree-1]=0):(u1.li=u1.lr=u1.si=u1.sr=0,c(a0[0],a0[1],a0[2],u1),v0[E0.Degree-2]=u1.sr,u0[E0.Degree-2]=u1.si,v0[E0.Degree-1]=u1.lr,u0[E0.Degree-1]=u1.li);break}for(O1=0,o=Number.MAX_VALUE,w1=0;w1<J0;w1++)g=Math.abs(a0[w1]),g>O1&&(O1=g),g!=0&&g<o&&(o=g);if(d=ln/o,(d<=1&&O1>=10||d>1&&Number.MAX_VALUE/d>=O1)&&(d=d==0?Number.MIN_VALUE:d,a1=Math.floor(Math.log(d)/o0+.5),_0=Math.pow(2,a1),_0!=1))for(w1=0;w1<J0;w1++)a0[w1]*=_0;for(var w1=0;w1<J0;w1++)$0[w1]=Math.abs(a0[w1]);$0[i0]=-$0[i0],r1=i0-1,g=Math.exp((Math.log(-$0[i0])-Math.log($0[0]))/i0),$0[r1]!=0&&(q=-$0[i0]/$0[r1],g=q<g?q:g),q=g;do{g=q,q=.1*g,v1=$0[0];for(var w1=1;w1<J0;w1++)v1=v1*q+$0[w1]}while(v1>0);P1=g;do{T1=v1=$0[0];for(var w1=1;w1<i0;w1++)v1=g*v1+$0[w1],T1=g*T1+v1;v1=g*v1+$0[i0],P1=v1/T1,g-=P1}while(Math.abs(P1/g)>.005);p1=g;for(var w1=1;w1<i0;w1++)B0[w1]=(i0-w1)*a0[w1]/i0;for(B0[0]=a0[0],I=a0[i0],w=a0[r1],S1=B0[r1]==0?1:0,C0=0;C0<5;C0++)if(R=B0[r1],S1){for(var w1=0;w1<r1;w1++)d0=r1-w1,B0[d0]=B0[d0-1];B0[0]=0,S1=B0[r1]==0?1:0}else{W=-I/R;for(var w1=0;w1<r1;w1++)d0=r1-w1,B0[d0]=W*B0[d0-1]+a0[d0];B0[0]=a0[0],S1=Math.abs(B0[r1])<=Math.abs(w)*y1*10?1:0}for(var w1=0;w1<i0;w1++)C1[w1]=B0[w1];for(C0=1;C0<=20;C0++)if(Y=-(W1*B1)+fn*W0,B1=W1*W0+fn*B1,W0=Y,$=p1*W0,e0=-(2*$),x(y1,b0,20*C0,$,p1,B0,i0,a0,J0,Z0,e0,H0),H0.NZ!=0){d0=E0.Degree-i0,v0[d0]=H0.szr,u0[d0]=H0.szi,J0=J0-H0.NZ,i0=J0-1;for(var w1=0;w1<J0;w1++)a0[w1]=Z0[w1];H0.NZ!=1&&(v0[d0+1]=H0.lzr,u0[d0+1]=H0.lzi);break}else for(var w1=0;w1<i0;w1++)B0[w1]=C1[w1];if(C0>20){E0.Degree-=i0;break}}}H(r0,D,F,B);var K=B.length;for(R0=0;R0<K;R0++){var Z=x0(B[R0],h+8),O=x0(F[R0],h+8);O=h-String(O).length>2?O:F[R0];var c0=Z<0?"-":"";O===0&&(O=""),Z===0&&(Z=""),Z=Math.abs(Z)===1?c0+"i":Z?Z+"*i":"";var g0=O&&Z?O+"+"+Z:O+Z;F[R0]=g0.replace(/\+\-/g,"-")}return F}},roots:function(s){if(s.isConstant(!0,!0))return m.Utils.nroots(s);var h=Q.proots(s).map(function(u){return a.parse(u)});return m.Vector.fromArray(h)},froot:function(s,h,u){var p=function(v){for(var b=1e-12,T=u||m.Utils.build(m.Calculus.diff(s.clone())),L=s instanceof Function?s:m.Utils.build(s),_=1e4,G=!1,n0=0;!G;){var q0=v-L(v)/T(v),j0=Math.abs(q0)-Math.abs(v),f0=Math.abs(j0);v=q0,f0<b?G=!0:n0>_&&(v=null,G=!0),n0++}return v};return p(Number(h))},quad:function(s,h,u){var p=function(v,b,T,L){return a.parse("-("+b+"+"+L+"*sqrt(("+b+")^2-4*("+v+")*("+T+")))/(2*"+v+")")};return[p(s,h,u,1),p(s,h,u,-1)]},sumProd:function(s,h){return Q.quad(-h,s,-1).map(function(u){return u.invert()})},coeffs:function(s,h,u){h=String(h),s=a.expand(s),u=u||[new M0(0)],s.group===N0&&s.contains(h,!0)&&a.error("Unable to get coefficients using expression "+s.toString());var p=Y0(s);if(p.length===1&&p[0]===h&&!s.isImaginary())for(var v=new M1(s).coeffs.map(function(q0){return new M0(q0)}),b=0,T=v.length;b<T;b++){var L=v[b],_=u[b];_&&(L=a.add(_,L)),u[b]=L}else if(h||a.error("Polynomial contains more than one variable. Please specify which variable is to be used!"),p.indexOf(h)===-1)u[0]=a.add(s,u[0]);else if(u=u||[new M0(0)],s.group===X){var G=s.symbols[h];G||a.error("Expression is not a polynomial!");var n0=Number(G.power);L=a.divide(s.clone(),G.clone()),(L.contains(h,!0)||n0<0||!e1(n0))&&a.error("Expression is not a polynomial!");var _=u[n0];_&&(L=a.add(_,L)),u[n0]=L}else s.group===U&&s.each(function(q0){Q.coeffs(q0.clone(),h,u)},!0);for(var b=0,T=u.length;b<T;b++)typeof u[b]>"u"&&(u[b]=new M0(0));return u},polyPowers:function(s,h,u){u=u||[];var p=p=s.group;if(p===V0&&h===s.value)u=u.concat(k0(s.symbols));else if(p===U)for(var v in s.symbols){var b=s.symbols[v],p=b.group,T=b.value;if(p===K0&&h===T)u.push(b.power);else if(p===V0||p===U)u=Q.polyPowers(b,h,u);else if(p===X&&b.contains(h)){var L=b.symbols[h];L&&u.push(L.power)}else(p===y||h!==T)&&u.push(0)}else p===X&&s.contains(h)&&u.push(m.Utils.decompose_fn(s,h,!0).x.power);return m.Utils.arrayUnique(u).sort()},Factor:{split:function(s){var h=new M0(1),u=new M0(1);return Q.Factor.factor(s,new N1).each(function(p){var v=a.parse(p);p.isConstant(!0)?h=a.multiply(h,v):u=a.multiply(u,v)}),[h,u]},mix:function(s,h){for(var u=k0(s),p=u.length,v=[],b=0;b<p;b++){for(var T=u[b],L=s[T],_=v.length,G=0;G<_;G++){var n0=v[G]*T;v.push(n0),h&&v.push(-n0)}for(var G=1;G<=L;G++)v.push(Math.pow(T,G))}return v},common:function(s,h){try{if(s.group===U){for(var u=a.expand(s.clone(),!0).collectSymbols(null,null,function(n0,q0){return(q0.length||1)-(n0.length||1)}),p={},v=[],b=0;b<u.length;b++){var T=u[b];v.push(T.multiplier.clone()),T.each(function(n0){var q0=Number(n0.power);if(isNaN(q0))throw new Error("exiting");n0.value in p?(q0<p[n0.value][0]&&(p[n0.value][0]=q0),p[n0.value][1].push(n0)):p[n0.value]=[q0,[n0]]})}var L=new M0(1);for(var _ in p)p[_][1].length===u.length&&(L=a.multiply(L,a.pow(new M0(_),new M0(p[_][0]))));var G=m.Math2.QGCD.apply(null,v);if(!G.equals(1)){h.add(new M0(G));for(var b=0;b<u.length;b++)u[b].multiplier=u[b].multiplier.divide(G)}if(!L.equals(1)){h.add(L),s=new M0(0);for(var b=0;b<u.length;b++)s=a.add(s,a.divide(u[b],L.clone()))}}}catch{}return s},zeroes:function(s,h){var u=function(){throw new m.exceptions.ValueLimitExceededError("Exiting")};try{var p,v,b,T,L;s=a.expand(s.clone()),L=s.toString(),p=Y0(s),b=new M0(0);for(var _=[],G=[],n0=0,q0=p.length;n0<p.length;n0++){for(var j0={},f0=0;f0<q0;f0++)n0!==f0&&(j0[p[f0]]=0);v=a.parse(L,j0);var R0=v.power;e1(R0)||u(),_.push(v),G.push(v.power)}if(m.Utils.allSame(G)){var w0=s.length,n1=_.length;n1===2&&(T=new O0(G[0]/(w0-1))),n1===3&&(T=new O0(G[0]/Math.round((Math.sqrt(8*w0-1)-3)/2)))}else T=m.Math2.QGCD.apply(null,G);e1(T)||u();for(var n0=0;n0<_.length;n0++){var X0=_[n0],g1=X0.power.clone().divide(T);X0.multiplier=new O0(Math.pow(X0.multiplier,1/g1)),X0.power=T.clone(),b=a.add(b,X0)}if(b.group!==U)return s;for(;;){var d1=Q.div(s.clone(),b.clone());if(d1[1].equals(0)){if(s=d1[0],h.add(b.clone()),s.equals(1))break}else break}}catch{}return s},factor:function(s,h){if(s.isConstant())return m.Math2.factor(s);var u=a.parse(s),p=Q.Factor._factor(u,h);if(p.equals(s))return p;if(p.group===X){var v=new M0(1),b=a.parse(p.power),T=a.parse(p.multiplier);p.toUnitMultiplier(),p.multiplier.lessThan(0)&&(v.negate(),p.negate()),p.each(function(L){var _=a.parse(Q.Factor._factor(L));_.group===X?(T=a.multiply(T,M0.create(_.multiplier)),_.each(function(G){var n0=a.parse(Q.Factor._factor(G));v=a.multiply(v,n0),n0.group===X&&(T=a.multiply(T,M0.create(n0.multiplier)))})):v=a.multiply(v,_)}),p=a.pow(a.multiply(T,v),b)}return p},quadFactor:function(s,h){if(s.isPoly()&&Q.degree(s.equals(2))){var u=m.Utils.variables(s)[0],p=Q.coeffs(s,u),v=Q.Factor._factor(p[2].clone());if(v.group===X){var b=v.collectSymbols();if(b.length>2)return s;var T=a.multiply(a.parse(p[0]),a.parse(b[0])),L=a.parse(p[1]).negate(),_=a.parse(b[1]),G=Q.quad(_,L,T).filter(function(j0){if(m.Utils.isInt(j0))return j0});if(G.length===1){var n0=G[0],q0=a.divide(p[0],a.parse(n0));m.Utils.isInt(q0)&&(h.add(a.parse(F0("({0})*({1})+({2})",b[1],u,q0))),h.add(a.parse(F0("({0})*({1})+({2})",b[0],u,n0))),s=new M0(1))}}}return s},cubeFactor:function(s,h){if(s.isComposite()){var u=s.collectSymbols();if(u.length===2){var p=u[0].sign(),v=u[0].clone().abs(),b=u[1].sign(),T=u[1].clone().abs();if(v.isCube()&&T.isCube()){p<b&&([p,b]=[b,p],[v,T]=[T,v]);var L=a.parse(v.getNth(3)),_=a.parse(T.getNth(3)),G=a.multiply(a.expand(a.pow(v.clone().toUnitMultiplier(),a.parse("1/3"))),L),n0=a.multiply(a.expand(a.pow(T.clone().toUnitMultiplier(),a.parse("1/3"))),_);p===1&&b===-1?(h.add(a.parse(F0("(({0})-({1}))",G,n0))),h.add(a.parse(F0("(({0})^2+({0})*({1})+({1})^2)",G,n0))),s=M0(1)):p===1&&b===1&&(h.add(a.parse(F0("(({0})+({1}))",G,n0))),h.add(a.parse(F0("(({0})^2-({0})*({1})+({1})^2)",G,n0))),s=M0(1))}}}return s},_factor:function(s,h){if(s.group,s.group===I1){var u=s.args[0];if(u.group===K0&&u.isSimple())return s}else if(s.group===K0&&s.isSimple())return s;if(s.group===U){s.distributeMultiplier(!0);var p=new M0(0);s.each(function(F){(F.group===U&&F.power.greaterThan(1)||F.group===X)&&(F=a.expand(F)),p=a.add(p,F)}),p.power=s.power,s=p}s.group===I1&&s.fname!=="sqrt"&&(s=m.Utils.evaluate(s));var v=s.clone();try{if(s.group===X){var w0=a.parse(s.power),b,T,L,_,G,n0;if(b=Q.Simplify.strip(s.getDenom()),T=Q.Simplify.strip(s.getNum()),L=b.pop(),_=T.pop(),_.equals(s))return s;n0=Q.Factor.factor(_),G=Q.Factor.factor(L);var q0=Q.Simplify.unstrip(T,n0),j0=Q.Simplify.unstrip(b,G),f0=a.divide(q0,j0);return f0}if(s.group===K0)return s;if(s.isConstant()){if(s.equals(1))return s.clone();var R0=m.Math2.factor(s);return R0}var w0=s.power.clone();if(e1(w0)&&!(w0.lessThan(0)&&s.group===I1)){var n1=w0.sign();s.toLinear(),h=h||new N1;var X0={};s=a.parse(m.Utils.subFunctions(s,X0)),k0(X0).length>0&&(h.preAdd=function(t0){var A0=a.parse(t0,m.Utils.getFunctionsSubs(X0));return A0}),s.isLinear()||(h.pFactor=s.power.toString(),s.toLinear());var g1=Y0(s);s.isImaginary()&&g1.push(m.Settings.IMAGINARY);var d1=g1.length>1;if(d1){var X1=!0,s1=!0;if(s.each(function(t0){t0.group!==K0&&(X1=!1),t0.multiplier.equals(1)||(s1=!1)}),X1&&s1)return a.pow(a.parse(s,m.Utils.getFunctionsSubs(X0)),a.parse(w0))}var P0=new N1;s=Q.Factor.coeffFactor(s,P0),P0.each(function(t0){D0(w0)&&t0.lessThan(0)&&t0.negate(),n1<0&&t0.invert(),h.add(t0)});var i1=new N1;if(s=Q.Factor.powerFactor(s,i1),i1.each(function(t0){n1<0&&t0.invert(),h.add(t0)}),d1)s=Q.Factor.cubeFactor(s,h),s=Q.Factor.mfactor(s,h),h.each(function(t0){n1<0&&t0.power.negate()});else{var R1=g1[0];s=Q.Factor.squareFree(s,h,R1);var Z1=new N1;s=Q.Factor.trialAndError(s,Z1,R1);var c1=Z1.toSymbol();if(c1.equals(v))return c1;for(var D in Z1.factors){var B=Z1.factors[D];h.add(a.pow(B,a.parse(w0)))}s.equals(v)&&(s=Q.Factor.quadFactor(s,h))}s=a.parse(s,m.Utils.getFunctionsSubs(X0));var r0=h.length===1;h.add(a.pow(s,a.parse(w0)));var f0=h.toSymbol();return r0&&s.equals(1)&&f0.isLinear()&&(f0=a.pow(f0,a.parse(w0))),f0}return s}catch{return v}},reduce:function(s,h){if(s.group===U&&s.length===2){var u=s.collectSymbols().sort(function(q0,j0){return j0.multiplier-q0.multiplier});if(u[0].power.equals(u[1].power)){var p=a.parse(u[0].power),v=u[0].clone().toLinear(),b=u[1].clone().toLinear();h.add(a.add(v.clone(),b.clone())),b.negate();for(var T=Number(p),L=new M0(0),_=1;_<=T;_++){var G=a.pow(v.clone(),a.subtract(p.clone(),new M0(_))),n0=a.pow(b.clone(),a.subtract(new M0(_),new M0(1)));L=a.add(L,a.multiply(G,n0))}return L}}return s},squareFree:function(s,h,u){if(s.isConstant()||s.group===K0)return s;var p=new M1(s,u),v=p.squareFree(),b=v[2];if(b!==1){var T=v[1].toSymbol();T.power=T.power.multiply(new O0(b)),h.add(Q.Factor.factor(T));var L=Q.Factor.squareFree(v[0].toSymbol(),h);return L}return s},powerFactor:function(s,h){if(s.group!==V0||s.previousGroup===N0)return s;var u=k0(s.symbols);if(!m.Utils.allNumeric(u))return s;var p=m.Utils.arrayMin(u),v=new M0(0),b=a.parse(s.value+"^"+p);return s.each(function(T){T=a.divide(T,b.clone()),v=a.add(v,T)}),h.add(b),v},coeffFactor:function(s,h){if(s.isComposite()){var u=m.Math2.QGCD.apply(null,s.coeffs());if(!u.equals(1))s.each(function(T){T.isComposite()?T.each(function(L){L.multiplier=L.multiplier.divide(u)}):T.multiplier=T.multiplier.divide(u)}),s.updateHash();else{var p=function(T){var L;return T.group===X?(L=0,T.each(function(_){L+=_.power})):L=Number(T.power),L},v=s.collectSymbols(null,null,null,!0).sort(function(T,L){return T.isConstant(!0)?1:L.power-T.power}),b=v[0];(p(b)>p(v[1])||v[1].isConstant(!0))&&b.multiplier.lessThan(0)&&(h.add(new M0(-1)),s.each(function(T){T.negate()},!0))}h&&h.add(new M0(u))}return s},trialAndError:function(s,h,u){var p=s.clone();try{var v=[];if(s.isConstant()||s.group===K0)return s;for(var b=new M1(s,u),T=b.coeffs[0],L=m.Math2.ifactor(T),_=Q.proots(s),G=0;G<_.length;G++){var n0=_[G],q0=1;if(!isNaN(n0)){for(var j0 in L){var f0=m.Utils.round(Math.log(j0)/Math.log(Math.abs(n0)),8);if(e1(f0)){n0=j0,q0=f0;break}}var R0=new O0(n0),w0=[new O0(R0.num).negate()];w0[q0]=new O0(R0.den);var n1=M1.fromArray(w0,b.variable).fill(),X0=b.divide(n1);X0[1].equalsNumber(0)&&(b=X0[0],v.push(n1.toSymbol()))}}return b.equalsNumber(1)||(b=Q.Factor.search(b,h)),v.forEach(function(g1){h.add(g1)}),b.toSymbol()}catch{return p}},search:function(s,h,u){u=u||10;var p=s.variable,v=function(d1,X1,s1,P0){var i1=M1.fit(d1,X1,s1,u,P0,p);if(i1&&i1.coeffs.length>1){var R1=s.divide(i1);if(R1[1].equalsNumber(0))return h.add(i1.toSymbol()),[R1[0],i1]}return null},b=s.coeffs[0],T=m.Math2.ifactor(b),L=s.lc(),_=m.Math2.ifactor(L),G=s.sub(u),n0=m.Math2.ifactor(G),q0=Q.Factor.mix(n0,G<0),j0=Math.ceil(s.coeffs.length/2),f0=L.lessThan(0),R0=b.lessThan(0);for(_[1]=1,T[1]=1;j0--;)for(var w0 in _)for(var n1 in T)for(var X0=0;X0<q0.length;X0++){var g1=v(w0,n1,q0[X0],j0);if(g1)return s=g1[0],m.Utils.isPrime(s.sub(u))||(s=Q.Factor.search(s,h)),s;g1||(f0&&R0?g1=v(-w0,-n1,q0[X0],j0):f0?g1=v(-w0,n1,q0[X0],j0):R0&&(g1=v(w0,-n1,q0[X0],j0)))}return s},mSqfrFactor:function(s,h){if(s.group!==I1)for(var u=Y0(s).reverse(),p=0;p<u.length;p++)do{if(u[p]===s.value){h.add(s),s=new M0(1);continue}var v=m.Calculus.diff(s,u[p]),b=Q.Factor.coeffFactor(v);if(b.equals(0))break;var T=!0;if(b.isConstant()&&s.isComposite()&&s.each(function(G){G.multiplier%b!==0&&(T=!1)},!0),T){var L=Q.div(s,b.clone()),_=L[1].equals(0);if(s.equals(L[0])&&L[1].equals(0))break;if(L[0].isConstant()){h.add(L[0]);break}}else _=!1;_&&(h.add(L[0]),s=b)}while(_);return s},sqdiff:function(s,h){if(s.isConstant("all"))return s;try{var u=function(n0){return m.Utils.block("POSITIVE_MULTIPLIERS",function(){return M0.unwrapPARENS(Q1.sqrt(Q1.abs(n0)))},!0)},p=m.Utils.separate(s.clone()),v=[];for(var b in p)b!=="constants"&&v.push(p[b]);if(v.sort(function(n0,q0){return q0.power-n0.power}),v.length===2){var T,L;if(T=v.pop(),L=v.pop(),D0(T.power)&&D0(L.power)&&T.sign()===L.sign()&&T.group===K0&&L.group===K0)throw new Error("Unable to factor");if(T.isComposite()&&L.power.equals(2)){L=u(L);var _=Q.Factor.factor(a.add(T,p.constants));_.power.equals(2)&&(_.toLinear(),h.add(a.subtract(_.clone(),L.clone())),h.add(a.add(_,L)),s=new M0(1))}else if(T=T.powSimp(),L=L.powSimp(),(T.group===K0||T.fname==="")&&T.power.equals(2)&&(L.group===K0||L.fname==="")&&L.power.equals(2)&&!p.constants){if(T.multiplier.lessThan(0)){var G=L;L=T,T=G}T.multiplier.greaterThan(0)&&(T=u(T),L=u(L)),h.add(a.subtract(T.clone(),L.clone())),h.add(a.add(T,L)),s=new M0(1)}}}catch{}return s},mfactor:function(s,h){if(s.group===I1)if(s.fname==="sqrt"){var u=new N1,p=Q.Factor.common(s.args[0].clone(),u);p=Q.Factor.coeffFactor(p,u),s=a.multiply(a.symfunction("sqrt",[p]),a.parse(s.multiplier)),u.each(function(Z1){s=a.multiply(s,a.parse(m.Utils.format("sqrt({0})",Z1)))})}else h.add(s);else{s=Q.Factor.mSqfrFactor(s,h);for(var v=Y0(s),b=s.collectSymbols().map(function(Z1){return M0.unwrapSQRT(Z1)}),T={},L={},_=v.length,G=b.length,n0=0;n0<_;n0++){var q0=v[n0];T[q0]=new M0(0);for(var j0=0;j0<G;j0++){var f0=b[j0];if(f0.contains(q0)){var R0=f0.value===q0?f0.power.toDecimal():f0.symbols[q0].power.toDecimal();(!L[q0]||R0<L[q0])&&(L[q0]=R0),T[q0]=a.add(T[q0],f0.clone())}}}for(var w0 in T){var n1=a.parse(w0+"^"+L[w0]),X0=a.divide(T[w0],n1),g1=a.expand(X0);if(g1.equals(1))break;var d1=Q.div(s.clone(),g1);if(d1[0].equals(0))break;if(d1[1].equals(0)){var X1=!1;if(d1[0].each(function(Z1){e1(Z1.multiplier)||(X1=!0)}),X1){d1[1]=a.expand(a.multiply(d1[1],g1));break}}var s1=e1(g1)&&g1.lessThan(0);if(d1[1].equals(0)&&!s1){var P0=Q.div(s.clone(),d1[0].clone()),n1=P0[0];if(n1.equals(0)||(s=P0[1],n1.equals(-1)&&!s.equals(0)))return s;var i1=d1[0];if(s.equals(i1)){var R1=Q.Factor.reduce(i1,h);return s.equals(R1)?R1:Q.Factor.mfactor(R1,h)}else if(h.add(i1),s.equals(0))return n1;return n1.isConstant("all")?(h.add(n1),n1):Q.Factor.mfactor(n1,h)}}}return s=Q.Factor.sqdiff(s,h),s=Q.Factor.zeroes(s,h),s}},allLinear:function(s){for(var h=s.length,u=0;u<h;u++)if(!Q.isLinear(s[u]))return!1;return!0},isLinear:function(s){var h=!1,u=s.group;if(u===V0||u===U){h=!0;for(var p in s.symbols){var v=s.symbols[p],b=v.group;if((b===I1||b===N0)&&(h=!1),b===X)h=Y0(v).length===1;else if(b===V0||b===U)h=Q.isLinear(v);else if(v.group!==y&&v.power.toString()!=="1"){h=!1;break}}}else u===K0&&s.power===1&&(h=!0);return h},gcd:function(){var s;if(arguments.length===1&&arguments[0]instanceof m.Vector?s=arguments[0].elements:s=m.Utils.arguments2Array(arguments),s.length===0)return new M0(1);if(s.length===1)return s[0];for(var h=[],u=!1,p=0;p<s.length;p++)if(s[p].group===I1&&s[p].fname==="gcd")s=s.concat(arguments[p].args),s.splice(p,1);else{var v=Y0(s[p]);if(m.Utils.haveIntersection(v,h)){u=!0;break}else h=h.concat(v)}if(u||h.length===0)if(s.every(function(T){return T.getDenom().equals(1)})){for(var b=s[0],p=1;p<s.length;p++)b=Q.gcd_(s[p],b);return b}else return a.divide(Q.gcd.apply(null,s.map(function(T){return T.getNum()})),Q.lcm.apply(null,s.map(function(T){return T.getDenom()})));else return a.symfunction("gcd",s)},gcd_:function(s,h){if((s.group===I1||s.group===h1)&&(s=m.Utils.block("PARSE2NUMBER",function(){return a.parse(s)})),h.group===I1&&(h=m.Utils.block("PARSE2NUMBER",function(){return a.parse(h)})),s.isConstant()&&h.isConstant())return new M0(m.Math2.QGCD(new O0(+s),new O0(+h)));var u=a.multiply(s.getDenom()||new M0(1),h.getDenom()||new M0(1)).invert();if(s=a.multiply(s.clone(),u.clone()),h=a.multiply(h.clone(),u.clone()),s=a.expand(s),h=a.expand(h),s.group===X||h.group===X){var p=a.divide(s.clone(),h.clone()),v=a.multiply(h.clone(),p.getDenom().invert());if(!v.equals(1))return v}if(s.group===N0||h.group===N0){var b=new M0(m.Math2.GCD(s.multiplier,h.multiplier)),T=Q.gcd_(s.value===D1?new M0(1):a.parse(s.value),h.value===D1?new M0(1):a.parse(h.value)),L=Q.gcd_(a.parse(s.power),a.parse(h.power));return a.multiply(b,a.pow(T,L))}if(s.length<h.length){var v=s;s=h,h=v}var _=Y0(s),G=Y0(h);if(_.length===G.length&&_.length===1&&_[0]===G[0]||_.length===1&&G.length===0||_.length===0&&G.length===1)return s=new M1(s),h=new M1(h),a.divide(s.gcd(h).toSymbol(),u);var n0=[];s.each(function(f0){n0.push(f0.multiplier)}),h.each(function(f0){n0.push(f0.multiplier)});for(var q0;!h.equals(0);){var v=h.clone();if(s=s.clone(),q0=Q.div(s,v),h=q0[1],q0[0].equals(0))return a.divide(new M0(m.Math2.QGCD(s.multiplier,h.multiplier)),u);s=v}var j0=m.Math2.QGCD.apply(void 0,n0);return j0.equals(1)||s.each(function(f0){f0.multiplier=f0.multiplier.divide(j0)}),s.equals(1)&&!s.isConstant()&&!h.isConstant()?a.divide(a.symfunction("gcd",arguments),u):a.divide(s,u)},lcm:function(){var s;arguments.length===1?arguments[0]instanceof m.Vector?s=arguments[0].elements:a.error("lcm expects either 1 vector or 2 or more arguments"):s=m.Utils.arguments2Array(arguments);var h=s.reduce(function(b,T){return a.multiply(b,T.clone())},new M0(1)),u=function(b,T){T=Number(T);var L=[],_,G,n0,q0=Math.pow(2,b.length);for(G=T;G<q0;G++){_=[],n0=b.length-1;do G&1<<n0&&_.push(b[n0]);while(n0--);_.length===T&&L.push(_)}return L}(arguments,arguments.length-1).map(function(b){return b.reduce(function(T,L){return a.multiply(T,L.clone())},new M0(1))}),p;s.every(function(b){return m.Utils.isVariableSymbol(b)})?p=a.symfunction("gcd",m.Utils.arrayUnique(u)):p=Q.gcd.apply(null,u);var v=a.divide(h,p);return v},divide:function(s,h){var u,p,v,b;return v=m.Algebra.Factor.factor(s.clone()),b=v.getDenom(),b.isConstant("all")?b=new M0(1):s=a.expand(M0.unwrapPARENS(a.multiply(v,b.clone()))),u=Q.div(s,h),p=a.divide(u[1],h),a.divide(a.add(u[0],p),b)},div:function(s,h){var u=[new M0(0),s.clone()];try{if(h.isConstant("all"))return s.each(function(g0){g0.multiplier=g0.multiplier.divide(h.multiplier)}),[s,new M0(0)];if(s=a.expand(s),h=a.expand(h),s.group===K0&&h.group===U){var p=s.value,v=m.Utils.decompose_fn(h.clone(),p,!0);if(s.isLinear()&&v.x&&v.x.isLinear()&&h.isLinear()){var b=M0.create(s.multiplier);return[a.divide(b.clone(),v.a.clone()),a.divide(a.multiply(b,v.b),v.a).negate()]}}if(s.group===K0&&h.group===K0){var T=a.divide(s.clone(),h.clone());return T.isConstant()?[T,new M0(0)]:[new M0(0),s.clone()]}var L=s.hasFunc(),_=h.hasFunc(),G=!1;if(L||_){G=!0;var n0={},s=a.parse(m.Utils.subFunctions(s,n0)),h=a.parse(m.Utils.subFunctions(h,n0)),q0=m.Utils.getFunctionsSubs(n0)}var j0=m.Utils.arrayUnique(Y0(s).concat(Y0(h))),f0,R0;if((s.isImaginary()||h.isImaginary())&&j0.push(m.Settings.IMAGINARY),j0.length===1){var w0=new M1(s).divide(new M1(h));f0=w0[0].toSymbol(),R0=w0[1].toSymbol()}else{j0.push(D1);var n1=function(g0){for(var E0=new M0(0),a0=0;a0<g0.length;a0++){var v0=g0[a0].toSymbol();E0=a.add(E0,v0)}return E0},X0=function(g0,E0){var a0=Math.max.apply(null,g0.terms),v0=0,u0;if(!E0){for(var i0=0;i0<g0.terms.length;i0++)if(g0.terms[i0].equals(a0)&&(u0=i0,v0++),v0>1)return}if(E0){for(i0=0;i0<g0.terms.length;i0++)if(g0.terms[i0].equals(a0)){u0=i0;break}}return[a0,u0,g0]},g1=function(g0,E0){E0=E0||0;var a0=g0[E0],v0=g0.length;if(a0){for(var u0=X0(a0),i0=E0+1;i0<v0;i0++){var T0=g0[i0],o0=a0.sum.equals(T0.sum);if(!o0&&u0)break;if(o0){for(var b0,B0,$0,Z0,C1=a0.terms.length,u1=0;u1<C1;u1++){var H0=a0.terms[u1],p1=T0.terms[u1];(typeof b0>"u"||H0.greaterThan(b0))&&(b0=H0,$0=u1),(typeof B0>"u"||p1.greaterThan(B0))&&(B0=p1,Z0=u1)}var y1=b0.subtract(T0.terms[$0]),T1=B0.subtract(a0.terms[Z0]);if(T1>y1){u0=[B0,Z0,T0];break}if(y1>T1){u0=[b0,$0,a0];break}}else if(u0=X0(T0),u0)break;u0=X0(T0)}if(!u0)return X0(g0[0],!0);for(var P1,_0,i0=0;i0<i1.length;i0++){var v1=i1[i0].terms;if(_0=u0[1],_0===v1.length-1)return;if(P1=v1[_0],!P1.equals(0))break}return P1.equals(0)?g1(g0,++E0):u0}},d1=m.Utils.toMapObj(j0),X1=function(g0,E0){return E0.sum.subtract(g0.sum)},s1=function(g0,E0){if(!g0||!E0)return!1;for(var a0=0;a0<g0.terms.length;a0++)if(g0.terms[a0].lessThan(E0.terms[a0]))return!1;return!0},P0=s.tBase(d1).sort(X1),i1=h.tBase(d1).sort(X1),R1=s1(P0[0],i1[0])&&P0[0].count>i1[0].count?i1:P0,Z1=g1(R1),c1=[];if(Z1){var D=Z1[1],B=function(g0,E0){return g0[0].sum.equals(E0[0].sum)?g0.length>=E0.length:!0},r0=function(g0,E0,a0){for(var v0=[],u0=0;u0<g0.length;u0++)for(var i0=g0[u0],T0=0;T0<i0.terms.length;T0++){var o0=v0[T0],b0=i0.terms[T0];u0===0?v0[T0]=b0:o0&&!o0.equals(b0)&&(v0[T0]=void 0)}for(var u0=0;u0<v0.length;u0++){var i0=v0[u0];if(i0&&!i0.equals(0))return u0}return a0},F=function(g0,E0){var a0=g0.len(),v0=E0.len(),u0=E0.terms[D],i0=g0.terms[D];return v0>a0&&u0.greaterThan(i0)?v0-a0:u0.subtract(i0)};D=r0(P0,i1,D),P0.sort(F),i1.sort(F);var t0=i1[0],A0=P0[0],z0=new x1(new O0(1),[],A0.map);if(t0.sum.greaterThan(A0.sum)&&A0.len()>1)for(var k=0;k<A0.terms.length;k++){var c=t0.terms[k].subtract(A0.terms[k]);if(c.equals(0))z0.terms[k]=new O0(0);else{var N=c.add(new O0(1));z0.terms[k]=c;for(var z=0;z<P0.length;z++)P0[z].terms[k]=P0[z].terms[k].add(N)}}for(var x=s1(P0[0],i1[0]),H=0,K=200;x&&B(P0,i1);){if(H++>K)throw new m.exceptions.InfiniteLoopError("Unable to compute!");var w0=P0[0].divide(i1[0]);c1.push(w0),P0.shift();for(var k=1;k<i1.length;k++){var Z=i1[k].multiply(w0).generateImage(),O=P0.length;O===0&&(Z.coeff=Z.coeff.neg(),P0.push(Z),P0.sort(F));for(var z=0;z<O;z++){var c0=P0[z];if(c0.getImg()===Z.getImg()){c0.coeff=c0.coeff.subtract(Z.coeff),c0.coeff.equals(0)&&(m.Utils.remove(P0,z),z--);break}z===O-1&&(Z.coeff=Z.coeff.neg(),P0.push(Z),P0.sort(F))}}if(x=s1(P0[0],i1[0]),!x&&P0.length>=i1.length){for(var k=1;k<P0.length;k++)if(x=s1(P0[k],i1[0]),x){P0.unshift(m.Utils.remove(P0,k));break}}}}f0=n1(c1),R0=n1(P0),typeof z0<"u"&&(z0=z0.toSymbol(),f0=a.divide(f0,z0.clone()),R0=a.divide(R0,z0))}return G&&(f0=a.parse(f0.text(),q0),R0=a.parse(R0.text(),q0)),[f0,R0]}catch{return u}},line:function(s,h,u){m.Utils.isArray(s)&&(s=m.Utils.convertToVector(s)),m.Utils.isArray(h)&&(h=m.Utils.convertToVector(h)),u=a.parse(u||"x"),(!m.Utils.isVector(s)||!m.Utils.isVector(h))&&a.error('Line expects a vector! Received "'+s+'" & "'+h+'"');var p=a.subtract(h.e(1).clone(),s.e(1).clone()),v=a.subtract(h.e(2).clone(),s.e(2).clone()),b=a.divide(v,p),T=a.multiply(u,b.clone()),L=a.multiply(s.e(1).clone(),b);return a.add(a.subtract(T,L),s.e(2).clone())},PartFrac:{createTemplate:function(s,h,u,p){s=Q.Factor.factor(s),s.each(function(n1,X0){if(n1.group===I1&&n1.fname===""&&n1.args[0].group===K0){var g1=n1.args[0];this.symbols?(delete this.symbols[X0],this.symbols[g1.value]=g1):s=n1.args[0]}});var v,b,T,L,_,G,n0;v=h.collectFactors(),b=[],G=[],n0=new M0(1);for(var q0=0;q0<v.length;q0++){var j0=M0.unwrapPARENS(v[q0]);if(j0.power.greaterThan(1)){L=Number(j0.power),T=j0.clone().toLinear(),_=Number(Q.degree(T,p));for(var f0=0;f0<L;f0++){var R0=a.pow(T.clone(),new M0(f0+1));u.push(R0.clone());var w0=a.divide(s.clone(),R0.clone());G.push(_),b.push(w0)}}else{_=Number(Q.degree(j0,p)),u.push(j0);var w0=a.divide(s.clone(),j0.clone());w0=a.expand(M0.unwrapPARENS(w0)),G.push(_),b.push(w0)}}return u=u.map(function(n1){return a.multiply(n1,n0.clone())}),[u,b,G]},partfrac:function(s,h,u){var p=Y0(s);h=h||a.parse(p[0]);try{var v,b,T,X1,L,_,G,n0,q0,j0,f0,R0,w0,n1,X0,g1,d1,X1;if(v=a.expand(s.getNum()),b=a.expand(s.getDenom().toUnitMultiplier()),v.multiplier=s.multiplier,_=v.groupTerms(h),Number(Q.degree(v,h))>=Number(Q.degree(b,h))?(w0=Q.div(v.clone(),a.expand(b.clone())),n1=w0[0],v=w0[1],_=v.groupTerms(h)):n1=new M0(0),Number(Q.degree(b,h))===1){var s1=a.divide(v,b);return u?[n1,s1]:a.add(n1,s1)}L=Q.Factor.factor(b),d1=Q.PartFrac.createTemplate(b.clone(),L,[],h),X1=d1[0],X0=d1[1],G=d1[2],R0=[_.length],n0=[],T=[],g1=[];var P0,i1;X0.map(function(F,t0){P0=X1[t0],i1=G[t0];for(var A0=0;A0<i1;A0++){T.push(P0.clone());var z0=M0.create(h,A0),k=a.expand(a.multiply(F,z0.clone())).groupTerms(h),c=k.length;R0.push(c),n0.push(k),g1.push(z0.clone())}}),q0=m.Utils.arrayMax(R0),f0=new m.Matrix(m.Utils.fillHoles(_,q0)).transpose(),j0=new m.Matrix;for(var R1=0;R1<n0.length;R1++)j0.elements.push(m.Utils.fillHoles(n0[R1],q0));var Z1=a.multiply(j0.transpose().invert(),f0),c1=u?[n1]:n1;return Z1.each(function(F,t0){var A0=a.multiply(g1[t0],a.divide(F,T[t0]));u?c1.push(A0):c1=a.add(c1,A0)}),c1}catch{try{if(s.isComposite()){var D={};s.each(function(t0){var A0=t0.getDenom(),z0=t0.getNum(),k=D[A0];D[A0]=k?a.add(k,z0):z0});var B=new M0(0);for(var r0 in D)B=a.add(B,a.divide(D[r0],a.parse(r0)));s=B}}catch{}}return s}},degree:function(s,h,u){if(u=u||{nd:[],sd:[],depth:0},!h){var p=Y0(s);if(p.length>1)throw new Error("You must specify the variable for multivariate polynomials!");if(p.length===0)return new M0(0);h=a.parse(p[0])}var v=s.group;s.isComposite()?(s=s.clone(),s.distributeExponent(),s.each(function(T){u.depth++,Q.degree(T,h,u),u.depth--})):s.group===X?s.each(function(T){u.depth++,Q.degree(T,h,u),u.depth++}):v===N0&&s.value===h.value?u.sd.push(s.power.clone()):v===K0&&s.value===h.value?u.nd.push(a.parse(s.power)):u.nd.push(new M0(0));var b=u.nd.length>0?m.Utils.arrayMax(u.nd):void 0;return u.depth===0&&u.sd.length>0?(b!==void 0&&u.sd.unshift(b),a.symfunction("max",u.sd)):(m.Utils.isSymbol(b)||(b=a.parse(b)),b)},sqComplete:function(s,h,u){m.Utils.isSymbol(h)||(h=a.parse(h));var p=function(w0){throw w0=w0||"Stopping",new m.exceptions.ValueLimitExceededError(w0)};s.isPoly(!0)||p("Must be a polynomial!");var v,b,T,L,_,G,n0,q0,j0,f0,R0;return j0=m.Utils.inBrackets,s=s.clone(),v=m.Algebra.degree(s,h),v.equals(2)||p("Cannot complete square for degree "+v),n0=m.Algebra.coeffs(s,h),b=n0[2],q0=n0[1].sign(),T=a.divide(n0[1],new M0(2)),L=a.pow(T.clone(),new M0(2)),u?[b,T,_]:(R0=Q1.sqrt(b),G=a.divide(Q1.sqrt(L),R0.clone()),_=a.subtract(n0[0],a.pow(G.clone(),new M0(2))),f0=a.parse(j0(R0.clone()+"*"+h+(q0<0?"-":"+")+G)),{a:f0,c:_,f:a.add(a.pow(f0.clone(),new M0(2)),_.clone())})},Simplify:{strip:function(s){var h=a.parse(s.multiplier);s.toUnitMultiplier();var u=a.parse(s.power);return s.toLinear(),[h,u,s]},unstrip:function(s,h){var u=s[0],p=s[1];return a.multiply(u,a.pow(h,p))},complexSimp:function(s,h){var u,p,v,b,T,L,_,G,n0;return L=s.realpart(),G=s.imagpart(),_=h.realpart(),n0=h.imagpart(),u=a.multiply(L.clone(),_.clone()),p=a.multiply(G.clone(),n0.clone()),v=a.multiply(_.clone(),G),b=a.multiply(L,n0.clone()),T=a.add(a.pow(_,new M0(2)),a.pow(n0,new M0(2))),a.divide(a.add(a.add(u,p),a.multiply(a.subtract(v,b),M0.imaginary())),T)},trigSimp:function(s){if(s.containsFunction(["cos","sin","tan"])){s=s.clone();var h=Q.Simplify.strip(s);s=h.pop();var u=s.clone();if(s.group===U){var p=new M0(0);s.each(function(L){var _=Q.Simplify.trigSimp(L.fnTransform());p=a.add(p,_)},!0),u=a.pow(a.multiply(new M0(s.multiplier),p),new M0(s.power))}else if(s.group===X){var v=s.getNum(),b=s.getDenom();if(v.fname==="sin"&&b.fname==="cos"&&v.args[0].equals(b.args[0])&&v.power.equals(b.power)&&(u=a.parse(m.Utils.format("({0})*({1})*tan({2})^({3})",b.multiplier,v.multiplier,v.args[0],v.power))),u.group===X){var T=new M0(1);u.each(function(L){L.fname==="tan"&&(L=a.parse(m.Utils.format("({0})*sin({1})^({2})/cos({1})^({2})",L.multiplier,Q.Simplify.simplify(L.args[0]),L.power))),T=a.multiply(T,L)}),u=T}}u=Q.Simplify.unstrip(h,u).distributeMultiplier(),s=u}return s},fracSimp:function(s){var h=s.getDenom(),u=s.getNum();if(u.isImaginary()&&h.isImaginary()&&(s=Q.Simplify.complexSimp(u,h)),s.isComposite()){s.power>1&&(s=a.expand(s));var p=s.collectSymbols(),v,b,T,L,_,G,n0,q0,j0,f0,R0,h,u;for(b=p.pop();p.length;)T=p.pop(),L=a.parse(b.getDenom()),_=a.parse(T.getDenom()),G=b.getNum(),n0=T.getNum(),R0=a.multiply(L.clone(),_.clone()),j0=a.multiply(G,_),f0=a.multiply(n0,L),q0=a.add(j0,f0),b=a.divide(q0,R0);return h=a.expand(b.getDenom()),u=a.expand(b.getNum()),u.isImaginary()&&h.isImaginary()?v=Q.Simplify.complexSimp(u,h):v=a.divide(u,h),v.equals(s)?s:Q.Simplify.simplify(v)}return s},ratSimp:function(s){if(s.group===X){var h=s.getDenom(),u=s.getNum().distributeMultiplier(),p=Q.Simplify.fracSimp(h),v=Q.Simplify.fracSimp(u);s=a.divide(v,p)}return s},sqrtSimp:function(s,h){var u;if(s.isSQRT()){var p=Q.Factor.factor(s.args[0].clone()),v=a.parse(p.multiplier),b=v.sign(),u=a.sqrt(v.abs()),T;if(e1(u)){if(p.group===X){var L=new M0(1);p.each(function(n0){if(n0.group===y){var q0=a.sqrt(n0.clone());e1(q0)?u=a.multiply(u,q0):L=a.multiply(L,n0)}else L=a.multiply(L,n0)});var _=a.multiply(L,a.parse(b));T=a.sqrt(_.clone()),T.isImaginary&&(T=a.sqrt(a.expand(_.clone())))}else T=a.sqrt(p.clone().toUnitMultiplier());return a.multiply(u,T)}}else s.isComposite()&&s.isLinear()?(u=new M0(0),s.each(function(G){u=a.add(u,Q.Simplify.sqrtSimp(G))},!0),u=a.multiply(u,a.parse(s.multiplier))):s.group===X&&(u=a.parse(s.multiplier),s.each(function(G){var n0=Q.Simplify.sqrtSimp(G);u=a.multiply(u,n0)},!0),u=a.pow(u,a.parse(s.power)));return u||a.parse(s)},patternSub:function(s){var h={},u=function(v){var b=!1;return v.each(function(T){T.group===U?b=!0:T.symbols&&(b=u(T))}),b},p=function(v){v.each(function(b){if(!(!b.symbols&&b.group!==I1)){if(u(b))p(b);else if(!h[b.value]){var T=m.Utils.getU(s);h[b.value]=T,s=s.sub(b.value,T)}}},!0)};return p(s),[s,h]},simplify:function(s){var h=Q.Simplify.strip(s);if(s=h.pop(),s=Q.Simplify.fracSimp(s),s.isConstant()||s.group===m.groups.S){h.push(s);var u=Q.Simplify.unstrip(h,s);return u}var p=s.clone();if(p=Q.Simplify.trigSimp(p),p=Q.Simplify.ratSimp(p),p=Q.Factor.factor(p),p.group===m.groups.CP&&p.isLinear()){var v=p.multiplier.clone();p.toUnitMultiplier();var b=new M0(0);p.each(function(L){var _=Q.Simplify.simplify(L);b=a.add(b,_)}),p=b,b.multiplier=b.multiplier.multiply(v)}var T=Q.Simplify.unstrip(h,p);return T}},Classes:{Polynomial:M1,Factors:N1,MVTerm:x1}};m.Expression.prototype.simplify=function(){return Q.Simplify.simplify(this.symbol)},j1.useAlgebraDiv=function(){var s=Q.divideFn=a.divide,h=0;a.divide=function(u,p){h++;var v;return h===1?v=m.Algebra.divide(u,p):v=s(u,p),h=0,v}},j1.useParserDiv=function(){Q.divideFn&&(a.divide=Q.divideFn),delete Q.divideFn},j1.register([{name:"factor",visible:!0,numargs:1,build:function(){return Q.Factor.factor}},{name:"simplify",visible:!0,numargs:1,build:function(){return Q.Simplify.simplify}},{name:"gcd",visible:!0,numargs:[1],build:function(){return Q.gcd}},{name:"lcm",visible:!0,numargs:[1],build:function(){return Q.lcm}},{name:"roots",visible:!0,numargs:-1,build:function(){return Q.roots}},{name:"divide",visible:!0,numargs:2,build:function(){return Q.divide}},{name:"div",visible:!0,numargs:2,build:function(){return Q.div}},{name:"partfrac",visible:!0,numargs:[1,2],build:function(){return Q.PartFrac.partfrac}},{name:"deg",visible:!0,numargs:[1,2],build:function(){return Q.degree}},{name:"coeffs",visible:!0,numargs:[1,2],build:function(){var s=function(){var h=Q.coeffs.apply(Q,arguments);return new m.Vector(h)};return s}},{name:"line",visible:!0,numargs:[2,3],build:function(){return Q.line}},{name:"sqcomp",visible:!0,numargs:[1,2],build:function(){var s=function(h,u){try{u=u||Y0(h)[0];var p=Q.sqComplete(h.clone(),u);return p.f}catch{return h}};return s}}]),j1.updateAPI()})()}()),Ue.exports}var ye;function $e(){return ye||(ye=1,function(l1){if(typeof j1>"u"){var j1=Ne();Xe()}(function(){var m=j1.getCore(),a=m.PARSER,y=m.Frac,h1=m.Settings,K0=m.Utils.isSymbol,x0=m.groups.FN,N0=m.Symbol,I1=m.Utils.text,V0=m.Utils.inBrackets,U=m.Utils.isInt,X=m.Utils.format,k0=m.Utils.even,D0=m.Utils.evaluate,Y0=m.groups.N,F0=m.groups.S,x0=m.groups.FN,O0=m.groups.PL,e1=m.groups.CP,M0=m.groups.CB,D1=m.groups.EX,Q1=m.groups.P,M1=h1.LOG,N1="exp",x1="abs",Q="sqrt",s="sin",h="cos",u="tan",p="sec",v="csc",b="cot",T="asin",L="acos",_="atan",G="asec",n0="acsc",q0="acot",j0="sinh",f0="cosh",R0="tanh",w0="csch",n1="sech",X0="coth",g1="asech",d1="acsch",X1="acoth";function s1(B){this.message=B||""}s1.prototype=new Error,N0.prototype.hasIntegral=function(){return this.containsFunction("integrate")},N0.prototype.fnTransform=function(){if(this.group!==x0)return this;var B,r0=this.args[0],F=new N0(this.multiplier),t0=this.clone().toUnitMultiplier();if(this.isLinear())switch(this.fname){case j0:B=a.parse(X("(e^({0})-e^(-({0})))/2",r0));break;case f0:B=a.parse(X("(e^({0})+e^(-({0})))/2",r0));break;case R0:B=a.parse(X("(e^({0})-e^(-({0})))/(e^({0})+e^(-({0})))",r0));break;case u:B=a.parse(X("sin({0})/cos({0})",r0));break;case v:B=a.parse(X("1/sin({0})",r0));break;case p:B=a.parse(X("1/cos({0})",r0));break;default:B=t0}else if(this.power.equals(2))switch(this.fname){case s:B=a.parse(X("1/2-cos(2*({0}))/2",r0));break;case h:B=a.parse(X("1/2+cos(2*({0}))/2",r0));break;case u:B=a.parse(X("sin({0})^2/cos({0})^2",r0));break;case f0:B=a.parse(X("1/2+cosh(2*({0}))/2",r0));break;case j0:B=a.parse(X("-1/2+cosh(2*({0}))/2",r0));break;case R0:B=a.parse(X("(1+cosh(2*({0})))/(-1+cosh(2*({0})))",r0));break;case p:B=a.parse(X("(1-cos(2*({0})))/(1+cos(2*({0})))+1",r0));break;default:B=t0}else if(this.fname===p)B=a.parse(X("1/cos({0})^({1})",this.args[0],this.power));else if(this.fname===v)B=a.parse(X("1/sin({0})^({1})",this.args[0],this.power));else if(this.fname===u)this.power.lessThan(0)?B=a.parse(X("cos({0})^(-({1}))/sin({0})^({1})",this.args[0],this.power.negate())):B=a.parse(X("sin({0})^({1})/cos({0})^({1})",this.args[0],this.power));else if(this.fname===s&&this.power.lessThan(0))B=a.parse(X("csc({0})^(-({1}))",this.args[0],this.power.negate()));else if(this.fname===h&&this.power.lessThan(0))B=a.parse(X("sec({0})^(-({1}))",this.args[0],this.power.negate()));else if(this.fname===s&&this.power.equals(3))B=a.parse(X("(3*sin({0})-sin(3*({0})))/4",this.args[0]));else if(this.fname===h&&this.power.equals(3))B=a.parse(X("(cos(3*({0}))+3*cos({0}))/4",this.args[0]));else if((this.fname===h||this.fname===s)&&k0(this.power)){var A0=this.power/2,z0=a.pow(this.clone().toLinear(),a.parse(2)).fnTransform(),k=a.expand(a.pow(z0,a.parse(A0)));B=new N0(0),k.each(function(c){var N=c.fnTransform();B=a.add(B,N)},!0)}else B=t0;return a.multiply(B,F)},N0.prototype.hasTrig=function(){if(this.isConstant(!0)||this.group===F0)return!1;if(this.fname&&(m.Utils.in_trig(this.fname)||m.Utils.in_inverse_trig(this.fname)))return!0;if(this.symbols){for(var B in this.symbols)if(this.symbols[B].hasTrig())return!0}return!1},m.Expression.prototype.hasIntegral=function(){return this.symbol.hasIntegral()},m.Utils.toCommonDenominator=function(B){if(B.isComposite()&&B.isLinear()){var r0=new N0(B.multiplier),F=new N0(1),t0=new N0(0);B.each(function(z0){F=a.multiply(F,z0.getDenom())},!0),B.each(function(z0){var k=z0.getNum(),c=z0.getDenom(),N=a.multiply(k,a.divide(F.clone(),c));t0=a.add(t0,N)});var A0=a.multiply(r0,m.Algebra.divide(a.expand(t0),a.expand(F)));return A0}return B},m.Utils.in_inverse_trig=function(B){var r0=[T,L,_,n0,G,q0];return r0.indexOf(B)!==-1},m.Utils.in_trig=function(B){var r0=[h,s,u,p,v,b];return r0.indexOf(B)!==-1},m.Utils.in_htrig=function(B){var r0=[j0,f0,R0,d1,g1,X1];return r0.indexOf(B)!==-1},m.Matrix.jacobian=function(B,r0){var F=new m.Matrix;return r0||(r0=m.Utils.arrayGetVariables(B)),r0.forEach(function(t0,A0){B.forEach(function(z0,k){var c=m.Calculus.diff(z0.clone(),t0);F.set(k,A0,c)})}),F},m.Matrix.prototype.max=function(){var B=new N0(0);return this.each(function(r0){var F=r0.abs();F.gt(B)&&(B=F)}),B},m.Matrix.cMatrix=function(B,r0){var F=new m.Matrix;return r0.forEach(function(t0,A0){F.set(A0,0,a.parse(B))}),F};var P0=m.Utils.all_functions=function(B){for(var r0=0,F=B.length;r0<F;r0++)if(B[r0].group!==x0)return!1;return!0},i1=m.Utils.cosAsinBtranform=function(B,r0){var F,t0;return F=B.args[0],t0=r0.args[0],a.parse(X("(sin(({0})+({1}))-sin(({0})-({1})))/2",F,t0))},R1=m.Utils.cosAsinAtranform=function(B,r0){if(Number(r0.power)!==1)return a.multiply(B,r0);var F;return F=B.args[0],a.parse(X("(sin(2*({0})))/2",F))},Z1=m.Utils.cosAsinBtranform=function(B,r0){var F,t0;return F=B.args[0],t0=r0.args[0],a.parse(X("(cos(({0})+({1}))-cos(({0})-({1})))/2",F,t0))},c1=m.Utils.trigTransform=function(B){for(var r0={},F,t0,A0=new N0(1),z0=0,k=B.length;z0<k;z0++)if(F=B[z0],F.group===x0){var c=F.fname;c===h&&r0[s]?(r0[s].args[0].toString()!==F.args[0].toString()?t0=i1(F,r0[s]):t0=R1(F,r0[s]),delete r0[s],A0=a.multiply(A0,t0)):c===s&&r0[h]?(r0[h].args[0].toString()!==F.args[0].toString()?t0=i1(F,r0[h]):t0=R1(F,r0[h]),delete r0[h],A0=a.multiply(A0,t0)):c===s&&r0[s]?(r0[s].args[0].toString()!==F.args[0].toString()?(t0=Z1(F,r0[s]),delete r0[s]):(t0=a.multiply(F,r0[s]),delete r0[s]),A0=t0):r0[c]=F}else A0=a.multiply(A0,F);for(var N in r0)A0=a.multiply(A0,r0[N]);return A0};m.Settings.integration_depth=10,m.Settings.max_lim_depth=10;var D=m.Calculus={version:"1.4.6",sum:function(B,r0,F,t0){if(r0.group!==m.groups.S)throw new m.exceptions.NerdamerTypeError("Index must be symbol. "+I1(r0)+" provided");r0=r0.value;var A0;if(m.Utils.isNumericSymbol(F)&&m.Utils.isNumericSymbol(t0)){var z0=t0-F<200?"":"PARSE2NUMBER";F=Number(F),t0=Number(t0),A0=m.Utils.block(z0,function(){for(var k=B.text(),c={"~":!0},N=new m.Symbol(0),z=F;z<=t0;z++){c[r0]=new N0(z);var x=a.parse(k,c);N=a.add(N,x)}return N})}else A0=a.symfunction("sum",arguments);return A0},product:function(B,r0,F,t0){if(r0.group!==m.groups.S)throw new m.exceptions.NerdamerTypeError("Index must be symbol. "+I1(r0)+" provided");r0=r0.value;var A0;if(m.Utils.isNumericSymbol(F)&&m.Utils.isNumericSymbol(t0)){var z0=t0-F<200?"":"PARSE2NUMBER";A0=m.Utils.block(z0,function(){F=Number(F),t0=Number(t0.multiplier);for(var k=B.text(),c={},N=new m.Symbol(1),z=F;z<=t0;z++)c[r0]=new N0(z),N=a.multiply(N,a.parse(k,c));return N})}else A0=a.symfunction("product",arguments);return A0},diff:function(B,r0,F){if(m.Utils.isVector(B)){var t0=new m.Vector([]);return B.each(function(O){t0.elements.push(D.diff(O,r0,F))}),t0}else if(m.Utils.isMatrix(B)){var A0=new m.Matrix;return B.each(function(O,c0,g0){A0.set(c0,g0,D.diff(O,r0,F))}),A0}var z0=K0(r0)?r0.text():r0;if(F=K0(F)?F.multiplier:F||1,z0===void 0&&(z0=m.Utils.variables(B)[0]),B.group===x0&&B.fname===Q){var k=B.args[0],c=B.power.clone();(k.group!==Y0||k.group!==Q1)&&(k.power=K0(k.power)?a.multiply(k.power,a.multiply(new N0(1/2)),c):k.power.multiply(new y(.5)).multiply(c),k.multiplier=k.multiplier.multiply(B.multiplier)),B=k}if(B.group===x0&&!K0(B.power)){var N=H(a.parse(B)),z=D.diff(B.args[0].clone(),z0);B=a.multiply(N,z)}else B=H(B);return F>1&&(F--,B=D.diff(B,r0,F)),B;function x(O){return(O.value===z0||O.contains(z0,!0))&&(O.multiplier=O.multiplier.multiply(O.power),O.power=O.power.subtract(new y(1)),O.power.equals(0)&&(O=N0(O.multiplier))),O}function H(O){var c0=O.group,g0,E0;if(c0===Y0||c0===F0&&O.value!==z0||c0===Q1)O=N0(0);else if(c0===F0)O=x(O);else if(c0===M0){var a0=O.multiplier.clone();O.toUnitMultiplier();var v0=a.multiply(Z(O),x(O));return v0.multiplier=v0.multiplier.multiply(a0),v0}else if(c0===x0&&O.power.equals(1))switch(O.fname){case M1:E0=O.clone(),O=O.args[0].clone(),O.power=O.power.negate(),O.multiplier=E0.multiplier.divide(O.multiplier);break;case h:O.fname=s,O.multiplier.negate();break;case s:O.fname=h;break;case u:O.fname=p,O.power=new y(2);break;case p:O=K(O,u);break;case v:O=K(O,"-cot");break;case b:O.fname=v,O.multiplier.negate(),O.power=new y(2);break;case T:O=a.parse("(sqrt(1-("+I1(O.args[0])+")^2))^(-1)");break;case L:O=a.parse("-(sqrt(1-("+I1(O.args[0])+")^2))^(-1)");break;case _:O=a.parse("(1+("+I1(O.args[0])+")^2)^(-1)");break;case x1:a0=O.multiplier.clone(),O.toUnitMultiplier(),g0=O.args[0].clone(),g0.toUnitMultiplier(),O=a.parse(V0(I1(O.args[0]))+"/abs"+V0(I1(g0))),O.multiplier=a0;break;case"parens":O=N0(1);break;case"cosh":O.fname="sinh";break;case"sinh":O.fname="cosh";break;case R0:O.fname=n1,O.power=new y(2);break;case n1:O=K(O,"-tanh");break;case w0:var u0=String(O.args[0]);return a.parse("-coth("+u0+")*csch("+u0+")");case X0:var u0=String(O.args[0]);return a.parse("-csch("+u0+")^2");case"asinh":O=a.parse("(sqrt(1+("+I1(O.args[0])+")^2))^(-1)");break;case"acosh":O=a.parse("(sqrt(-1+("+I1(O.args[0])+")^2))^(-1)");break;case"atanh":O=a.parse("(1-("+I1(O.args[0])+")^2)^(-1)");break;case g1:var u0=String(O.args[0]);O=a.parse("-1/(sqrt(1/("+u0+")^2-1)*("+u0+")^2)");break;case X1:O=a.parse("-1/(("+O.args[0]+")^2-1)");break;case d1:var u0=String(O.args[0]);O=a.parse("-1/(sqrt(1/("+u0+")^2+1)*("+u0+")^2)");break;case G:var u0=String(O.args[0]);O=a.parse("1/(sqrt(1-1/("+u0+")^2)*("+u0+")^2)");break;case n0:var u0=String(O.args[0]);O=a.parse("-1/(sqrt(1-1/("+u0+")^2)*("+u0+")^2)");break;case q0:O=a.parse("-1/(("+O.args[0]+")^2+1)");break;case"S":var u0=String(O.args[0]);O=a.parse("sin((pi*("+u0+")^2)/2)");break;case"C":var u0=String(O.args[0]);O=a.parse("cos((pi*("+u0+")^2)/2)");break;case"Si":var u0=O.args[0];O=a.parse("sin("+u0+")/("+u0+")");break;case"Shi":var u0=O.args[0];O=a.parse("sinh("+u0+")/("+u0+")");break;case"Ci":var u0=O.args[0];O=a.parse("cos("+u0+")/("+u0+")");break;case"Chi":var u0=O.args[0];O=a.parse("cosh("+u0+")/("+u0+")");break;case"Ei":var u0=O.args[0];O=a.parse("e^("+u0+")/("+u0+")");break;case"Li":var u0=O.args[0];O=a.parse("1/"+h1.LOG+"("+u0+")");break;case"erf":O=a.parse("(2*e^(-("+O.args[0]+")^2))/sqrt(pi)");break;case"atan2":var i0=String(O.args[0]),T0=String(O.args[1]);O=a.parse("("+T0+")/(("+T0+")^2+("+i0+")^2)");break;case"sign":O=new N0(0);break;case"sinc":O=a.parse(X("(({0})*cos({0})-sin({0}))*({0})^(-2)",O.args[0]));break;case h1.LOG10:O=a.parse("1/(("+O.args[0]+")*"+h1.LOG+"(10))");break;default:O=a.symfunction("diff",[O,r0])}else if(c0===D1||c0===x0&&K0(O.power)){var o0;c0===D1?o0=O.value:c0===x0&&O.contains(z0)?o0=O.fname+V0(I1(O.args[0])):o0=O.value+V0(I1(O.args[0])),a.multiply(a.parse(M1+V0(o0)),O.power.clone()),g0=D.diff(a.multiply(a.parse(M1+V0(o0)),O.power.clone()),z0),O=a.multiply(O,g0)}else if(c0===x0&&!O.power.equals(1))g0=O.clone(),g0.toLinear(),g0.toUnitMultiplier(),O=a.multiply(x(O.clone()),H(g0));else if(c0===e1||c0===O0){var b0=O.clone(),B0=new N0(0);for(var $0 in O.symbols)B0=a.add(B0,D.diff(O.symbols[$0].clone(),z0));O=a.multiply(x(b0),B0)}return O.updateHash(),O}function K(O,c0,g0){return a.multiply(O,a.parse(c0+V0(g0||I1(O.args[0]))))}function Z(O){for(var c0=O.collectSymbols(),g0=new N0(0),E0=c0.length,a0=0;a0<E0;a0++){for(var v0=D.diff(c0[a0].clone(),z0),u0=0;u0<E0;u0++)a0!==u0&&(v0=a.multiply(v0,c0[u0].clone()));g0=a.add(g0,v0)}return g0}},integration:{u_substitution:function(B,r0){function F(T0,o0,b0){var B0=D.diff(o0,r0),$0=b0?b0(T0,o0):a.divide(T0.clone(),B0);return $0.contains(r0,!0)?null:$0}function t0(T0,o0){var b0=D.integrate(a.symfunction(T0,[new N0(N)]),N,0);return b0=b0.sub(new N0(N),o0),b0.updateHash(),b0}var A0=B[0].clone(),z0=B[1].clone(),k=A0.group,c=z0.group,N="__u__",z;if(k===x0&&c!==x0){var x=A0.args[0];if(z=F(z0,x.clone()),z)return a.multiply(z,t0(A0.fname,x));if(z=F(z0,A0),z)return D.integration.poly_integrate(A0)}else if(c===x0&&k!==x0){var x=z0.args[0];if(z=F(A0,x.clone()),z)return a.multiply(z,t0(z0.fname,x))}else if(k===x0&&c===x0){if(z=F(A0.clone(),z0.clone()),z||(z=F(z0.clone(),A0.clone()),z))return a.multiply(D.integration.poly_integrate(z0),z)}else if(k===D1&&c!==D1){var H=A0.power;if(z=F(z0,H.clone()),!z){var K=D.integration.decompose_arg(H.clone(),r0),Z=D.diff(K[2].clone(),r0),O=D.integration.decompose_arg(Z.clone(),r0);if(a.multiply(K[1],O[1]).power.equals(z0.power)){var c0=a.divide(K[0].clone(),O[0].clone()),g0=a.multiply(c0.clone(),a.pow(new N0(A0.value),a.multiply(K[0],new N0(N))));return g0=a.multiply(g0,new N0(N)),D.integration.by_parts(g0,N,0,{}).sub(N,K[1].clone())}}var E0=D.integrate(A0.sub(H.clone(),new N0(N)),N,0),a0=a.multiply(E0.sub(new N0(N),H),z);return a0}else if(c===D1&&k!==D1){var H=z0.power;z=F(A0,H.clone());var E0=D.integrate(z0.sub(H,new N0(N)),N,0);return a.multiply(E0.sub(new N0(N),H),z)}else if(A0.isComposite()||z0.isComposite()){var v0=function(T0,o0){var b0=D.diff(o0,r0),B0=m.Algebra.Factor.factor(T0),$0=m.Algebra.Factor.factor(b0),Z0=a.divide(B0,$0);return Z0},u0=A0.isComposite()?A0.clone().toLinear():A0.clone(),i0=z0.isComposite()?z0.clone().toLinear():z0.clone();if(z=F(u0.clone(),i0.clone(),v0),z)return a.multiply(D.integration.poly_integrate(z0),z);if(z=F(i0.clone(),u0.clone(),v0),z)return a.multiply(D.integration.poly_integrate(A0),z)}},poly_integrate:function(B){var r0=B.power.toString(),F=B.multiplier.toDecimal(),t0=B.toUnitMultiplier().toLinear();return Number(r0)===-1?a.multiply(new N0(F),a.symfunction(M1,[t0])):a.parse(X("({0})*({1})^(({2})+1)/(({2})+1)",F,t0,r0))},stop:function(B){throw B=B||"Unable to compute integral!",m.Utils.warn(B),new s1(B)},partial_fraction:function(B,r0,F,t0){K0(r0)||(r0=a.parse(r0));var A0,z0;return A0=new N0(0),z0=m.Algebra.PartFrac.partfrac(B,r0),z0.group===M0&&z0.isLinear()?(z0.each(function(k){k.isLinear()||D.integration.stop()}),z0.each(function(k){A0=a.add(A0,D.integrate(k,r0,F,t0))})):A0=a.add(A0,D.integrate(z0,r0,F,t0)),A0},get_udv:function(B){var r0=[[],[],[],[],[]],F=function(x){var H=x.group;if(H===x0){var K=x.fname;m.Utils.in_trig(K)||m.Utils.in_htrig(K)?r0[3].push(x):m.Utils.in_inverse_trig(K)?r0[1].push(x):K===M1?r0[0].push(x):D.integration.stop()}else H===F0||x.isComposite()&&x.isLinear()||H===M0&&x.isLinear()?r0[2].push(x):H===D1||x.isComposite()&&!x.isLinear()?r0[4].push(x):D.integration.stop()};B.group===M0?B.each(function(x){F(N0.unwrapSQRT(x,!0))}):F(B);for(var t0,A0=new N0(1),z0=0;z0<5;z0++){var k=r0[z0],c,N=k.length;if(N>0){if(N>1){c=new N0(1);for(var z=0;z<N;z++)c=a.multiply(c,k[z].clone())}else c=k[0].clone();t0?A0=a.multiply(A0,c):(t0=c,t0.multiplier=t0.multiplier.multiply(B.multiplier))}}return[t0,A0]},trig_sub:function(B,r0,F,t0,A0,z0){A0=A0||D.integration.decompose_arg(B.clone().toLinear(),r0),A0[3],A0[2];var k=A0[0],c=A0[1];if(c.power.equals(2)&&k.greaterThan(0)){var N=m.Utils.getU(B),z=a.parse(u+V0(N)),x=a.parse(p+V0(N)+"^2"),H=a.multiply(B.sub(c,z),x),K=D.integrate(H,N,F,t0).sub(z,c);return m.Utils.clearU(z),K}},by_parts:function(B,r0,F,t0){t0.previous=t0.previous||[];var A0,z0,k,c,N,z,x,H,K,Z,O,c0;if(A0=D.integration.get_udv(B),z0=A0[0],k=A0[1],c=N0.unwrapSQRT(a.expand(D.diff(z0.clone(),r0)),!0),O=c.clone().stripVar(r0),c=a.divide(c,O.clone()),N=D.integrate(k.clone(),r0,F||0),z=a.multiply(N.clone(),c),c0=z.toString(),t0.previous.indexOf(c0)!==-1&&m.Utils.in_trig(z0.fname)&&k.isE())return t0.is_cyclic=!0,new N0(1);if(t0.previous.push(c0),x=a.multiply(z0,N),Z=z.multiplier.clone(),z.toUnitMultiplier(),K=a.multiply(D.integrate(z.clone(),r0,F,t0),O),K.multiplier=K.multiplier.multiply(Z),H=a.subtract(x,K),t0.is_cyclic&&(t0.previous.pop(),t0.previous.length===0)){H=a.expand(H);var g0=new N0(0);H.each(function(E0){E0.contains(r0)||(g0=a.add(g0,E0.clone()))}),H=a.divide(a.subtract(H,g0.clone()),a.subtract(new N0(1),g0))}return H},decompose_arg:m.Utils.decompose_fn},integrate:function(B,r0,F,t0){if(!r0){var A0=m.Utils.variables(B);A0.length===1&&(r0=A0[0]),r0=r0||"x"}if(m.Utils.isVector(B)){var z0=new m.Vector([]);return B.each(function(k){z0.elements.push(D.integrate(k,r0))}),z0}return isNaN(r0)||a.error("variable expected but received "+r0),B.isConstant(!0)?a.multiply(B.clone(),a.parse(r0)):(t0=t0||{},m.Utils.block("PARSE2NUMBER",function(){F=F||0;var k=K0(r0)?r0.toString():r0,c=N0.unwrapSQRT(B.clone(),!0),N=c.group,z;try{if(++F>m.Settings.integration_depth&&D.integration.stop("Maximum depth reached. Exiting!"),!c.contains(k,!0))z=a.multiply(c.clone(),a.parse(k));else if(N===F0)z=D.integration.poly_integrate(c,k,F);else if(N===D1)if(c.previousGroup===x0&&!(c.fname==="sqrt"||c.fname===h1.PARENTHESIS)&&D.integration.stop(),c.contains(k)&&c.previousGroup!==x0)if(c.power.contains(k))D.integration.stop();else{var x=D.diff(c.clone().toLinear(),k);x.contains(k)&&D.integration.stop(),z=D.integration.poly_integrate(c,k,F)}else{var H=D.diff(c.power.clone(),k);if(H.contains(k)){var K=H.stripVar(k),Z=a.divide(H.clone(),K.clone());if(Z.group===F0&&Z.isLinear())return K.multiplier=K.multiplier.divide(new y(2)),a.parse(X("({2})*(sqrt(pi)*erf(sqrt(-{0})*{1}))/(2*sqrt(-{0}))",K,k,c.multiplier));D.integration.stop()}if(c.isE())H.isLinear()?z=c:H.isE()&&H.power.group===F0&&H.power.power.equals(1)?z=a.multiply(a.symfunction("Ei",[c.power.clone()]),c.power):D.integration.stop();else{var O=a.symfunction(M1,[a.parse(c.value)]);z=a.divide(c,O)}z=a.divide(z,H)}else if(c.isComposite()&&c.isLinear()){var c0=a.parse(c.multiplier);c.toUnitMultiplier(),z=new N0(0),c.each(function(Cn){z=a.add(z,D.integrate(Cn,k,F))}),z=a.multiply(c0,z)}else if(N===e1)if(c.power.greaterThan(1)&&(c=a.expand(c)),c.power.equals(1))z=new N0(0),c.each(function(Cn){z=a.add(z,D.integrate(Cn,k,F))},!0);else{var g0=Number(c.power),c0=c.multiplier.clone();c.toUnitMultiplier();var E0=c.clone().toLinear(),a0=D.integration.decompose_arg(E0,k),v0=a0[3],u0=a0[2],H=a0[0],Z=a0[1];if(g0===-1&&Z.group!==O0&&Z.power.equals(2)){var i0=U(v0)?v0>0:!0;if(Z.group===F0&&Z.power.equals(2)&&i0){var T0=function(oe){var Pn=new N0(1);return oe.each(function(Vn){Pn=a.multiply(Pn,Vn.fname==="abs"?Vn.args[0]:Vn)}),Pn},o0=H.clone(),b0=v0.clone();o0=a.pow(o0,new N0(1/2)),b0=a.pow(b0,new N0(1/2));var O=a.multiply(T0(b0),T0(o0)),B0=a.symfunction(_,[a.divide(a.multiply(H,Z.toLinear()),O.clone())]);z=a.divide(B0,O)}else if(Z.group===F0&&Z.isLinear())z=a.divide(D.integration.poly_integrate(c),H);else if(Z.power.equals(4)){var o0,b0,$0,Z0,C1,u1,H0,p1,y1,T1,P1,_0,v1=V0;o0=a.parse(Q+v1(H)+"*"+k+"^2"),b0=a.parse(Q+v1(2)+"*"+v1(H)+"^"+v1("1/4")+"*"+v1(v0)+"^"+v1("1/4")+"*"+k),$0=a.parse(Q+v1(v0)),H0=a.add(a.add(o0.clone(),b0.clone()),$0.clone()),p1=a.add(a.subtract(o0,b0),$0),Z0=a.parse(Q+v1(2)+"*"+v1(v0)+"^"+v1("3/4")),C1=a.parse(Q+v1(v0)+"*"+v1(v0)+"^"+v1("1/4")+"*"+k),u1=a.parse("2*"+v1(v0)+"*"+Q+v1(2)+"*"+v1(v0)+"^"+v1("1/4")),P1=a.divide(a.subtract(Z0.clone(),C1.clone()),a.multiply(u1.clone(),p1)),_0=a.divide(a.add(Z0,C1),a.multiply(u1,H0.clone())),z=a.add(D.integrate(P1,k,F,t0),D.integrate(_0,k,F,t0))}else z=D.integration.partial_fraction(c,k,F)}else if(g0===-1/2)if(Z.group===F0&&Z.power.equals(2))if(u0.multiplier.lessThan(0)&&!v0.multiplier.lessThan(0))if(H.negate(),v0.isConstant()&&H.isConstant()){var O=a.symfunction(Q,[H.clone()]),O1=a.symfunction(Q,[a.multiply(H.clone(),v0)]);z=a.divide(a.symfunction(T,[a.divide(u0.toLinear(),O1)]),O)}else{var o=a.symfunction(Q,[H]),d=a.multiply(o.clone(),Z.clone().toLinear());z=a.divide(a.symfunction(_,[a.divide(d,a.symfunction(Q,[E0.clone()]))]),o)}else D.integration.stop();else D.integration.stop();else if(g0===1/2&&Z.power.equals(2)&&H.greaterThan(0))D.integration.stop();else if(Z.isLinear()&&Z.group!==O0)z=a.divide(D.integration.poly_integrate(c),H);else if(Z.power.equals(2)&&H.greaterThan(0)){var g,q,I,w,e0,Y,R,$,W;g=a.parse(Q+V0(H)),q=a.parse(Q+V0(v0)),I=a.multiply(g.clone(),q.clone()).invert(),w=a.pow(v0,new N0(c.power)),W=m.Utils.getU(c),R=a.multiply(I,Z.clone().toLinear()),$=a.parse(_+V0(R));var e0=(Math.abs(c.power)-1)*2,Y=D.integrate(a.parse(h+V0(W)+"^"+e0));return m.Utils.clearU(W),a.multiply(Y.sub(W,$),w)}else if(c.group!==M0&&!c.power.lessThan(0))z=D.integration.by_parts(c,k,F,t0);else{var B0=c.clone().toLinear(),d0=m.Algebra.Factor.factor(B0),C0=d0.toString()!==B0.toString();if(m.Algebra.degree(B0,a.parse(k)).equals(2)&&!C0)try{var H0,a1,R,r1;r1=m.Algebra.sqComplete(B0,k),R=m.Utils.getU(B0),H0=r1.f.sub(r1.a,R),a1=a.pow(H0,a.parse(c.power)),z=D.integrate(a1,R).sub(R,r1.a)}catch{D.integration.stop()}else z=D.integration.partial_fraction(c,k,F,t0)}z.multiplier=z.multiplier.multiply(c0)}else if(N===x0){var J0=c.args[0],c0=c.multiplier.clone();c.toUnitMultiplier();var a0=D.integration.decompose_arg(J0,k),H=a0[0],Z=a0[1],S1=c.fname;if(S1===M1||S1===T||S1===L||S1===_&&Z.isLinear()){var g0=c.power.toString();if(U(g0)&&(F=F-g0),!J0.isComposite())z=a.multiply(a.parse(c0),D.integration.by_parts(c,k,F,t0));else{var R=m.Utils.getU(c),B0=a.pow(a.parse(M1+V0(R)),new N0(g0)),ln=D.diff(J0,k),fn=a.multiply(B0,ln),Y=D.integrate(fn,R,F,t0);z=a.multiply(a.parse(c0),Y.sub(R,J0))}}else if(S1===u&&c.power.lessThan(0)){var W1=c.clone();return W1.power.negate(),W1.fname=b,a.multiply(a.parse(c0),D.integrate(W1,k,F))}else{if(!H.contains(k,!0)&&c.isLinear())if(S1===x1){var Z=a.divide(J0.clone(),H.clone());if(Z.group===F0&&!Z.power.lessThan(0))if(m.Utils.even(Z.power))z=D.integrate(J0,k,F);else{var W0=D.integrate(Z,k,F);W0.power=W0.power.subtract(new y(1)),z=a.multiply(a.multiply(a.symfunction(x1,[Z.toLinear()]),W0),H)}else D.integration.stop()}else{var B1=c.args[0].group,w1=D.integration.decompose_arg(J0,k);switch((!(B1===e1||B1===F0||B1===M0)||!w1[1].power.equals(1)||J0.hasFunc())&&D.integration.stop(),S1){case h:z=a.symfunction(s,[J0]);break;case s:z=a.symfunction(h,[J0]),z.negate();break;case u:z=a.parse(X(h1.LOG+"(sec({0}))",J0));break;case p:z=a.parse(X(h1.LOG+"(tan({0})+sec({0}))",J0));break;case v:z=a.parse(X("-"+h1.LOG+"(csc({0})+cot({0}))",J0));break;case b:z=a.parse(X(h1.LOG+"(sin({0}))",J0));break;case j0:z=a.symfunction(f0,[J0]);break;case f0:z=a.symfunction(j0,[J0]);break;case R0:z=a.parse(X(h1.LOG+"(cosh({0}))",J0));break;case G:z=D.integration.by_parts(c,k,F,t0);break;case n0:z=D.integration.by_parts(c,k,F,t0);break;case q0:z=D.integration.by_parts(c,k,F,t0);break;case g1:z=D.integration.by_parts(c,k,F,t0);break;case d1:z=D.integration.by_parts(c,k,F,t0);break;case X1:z=D.integration.by_parts(c,k,F,t0);break;case n1:z=a.parse(X("atan(sinh({0}))",J0));break;case w0:z=a.parse(X(h1.LOG+"(tanh(({0})/2))",J0));break;case X0:z=a.parse(X(h1.LOG+"(sinh({0}))",J0));break;case N1:z=D.integrate(a.parse(X("e^({0})",J0)),k,F);break;case"S":var J0=c.args[0].clone(),G1=D.integration.decompose_arg(J0,k),y0=G1[1],A=G1[0],pn=G1[3];z=a.parse(X("(cos((1/2)*pi*(({1})+({0})*({2}))^2)+pi*(({1})+({0})*({2}))*S(({1})+({0})*({2})))/(({0})*pi)",A,pn,Z));break;case"C":var J0=c.args[0].clone(),G1=D.integration.decompose_arg(J0,k),y0=G1[1],A=G1[0],pn=G1[3];z=a.parse(X("(pi*(({1})+({0})*({2}))*C(({1})+({0})*({2}))-sin((1/2)*pi*(({1})+({0})*({2}))^2))/(({0})*pi)",A,pn,y0));break;case"erf":var J0=c.args[0].clone(),G1=D.integration.decompose_arg(J0,k),y0=G1[1],A=G1[0];z=a.parse(X("e^(-(({2}))^2)/(({0})*sqrt(pi))+(1/({0})+({1}))*erf(({2}))",A,y0,J0));break;case"sign":z=a.multiply(c.clone(),J0.clone());break;default:D.integration.stop()}z=a.divide(z,H)}else if(Z.isLinear())if(S1===h||S1===s){var g0=Number(c.power);if(g0<0)c.fname=S1===s?v:p,c.invert().updateHash(),z=D.integrate(c,k,F);else{var J0=c.args[0],Un=c.clone(),Zn=c.clone(),L1=new N0((g0-1)/g0),K1=a.multiply(H.clone(),new N0(g0)).invert();Un.power=Un.power.subtract(new y(1)),Zn.power=Zn.power.subtract(new y(2));var x=a.symfunction(S1===h?s:h,[J0.clone()]);S1===s&&x.negate(),z=a.add(a.multiply(a.multiply(K1,Un),x),a.multiply(L1,D.integrate(a.parse(Zn),k,F)))}}else if(S1===u||S1===b){if(c.args[0].isLinear(k)){var e0=c.power.subtract(new y(1)).toString(),f1=c.clone().toUnitMultiplier(),V1=a.parse(X((S1===b?"-":"")+"1/({2}*{0})*{3}({1})^({0})",e0,J0,H,S1));f1.power=f1.power.subtract(new y(2)),f1.power.equals(0)&&(f1=a.parse(f1)),z=a.subtract(V1,D.integrate(f1,k,F))}}else if(S1===p||S1===v){var kn=c.power.subtract(new y(1)).toString(),Ee=c.power.subtract(new y(2)).toString(),p1=S1===p?u:b,f1=c.clone().toUnitMultiplier(),me=X((S1===v?"-":"")+"1/({0}*{1})*{4}({3})^({2})*{5}({3})",H,kn,Ee,J0,S1,p1),V1=a.parse(me);f1.power=f1.power.subtract(new y(2)),f1.power.equals(0)&&(f1=a.parse(f1)),z=a.add(V1,a.multiply(new N0(Ee/kn),D.integrate(f1,k,F)))}else(S1===f0||S1===j0)&&c.power.equals(2)?z=D.integrate(c.fnTransform(),k,F):D.integration.stop();else D.integration.stop();z.multiplier=z.multiplier.multiply(c0)}}else if(N===O0)z=D.integration.partial_fraction(c,k,F);else if(N===M0){var k1=c.getDenom();k1.group===F0&&(c=a.expand(c));var e=c.stripVar(k),t=a.divide(c.clone(),e.clone());if(e.contains(k)&&(t=a.multiply(t,e),e=new N0(1)),t.group!==M0){if(t.equals(1))return D.integrate(a.expand(c),k,F);t.clone().toLinear().isPoly(!0)&&m.Utils.variables(t).length>1&&(t=m.Algebra.Factor.factor(t)),z=D.integrate(t,k,F)}else{var f=t.collectSymbols().sort(function(Cn,gn){return Cn.group===gn.group?Number(Cn.power)===Number(gn.power)?Cn<gn?1:-1:gn.power-Cn.power:gn.group-Cn.group}).map(function(Cn){var gn=N0.unwrapSQRT(Cn,!0);return gn.fname===N1?a.parse(X("({1})*e^({0})",gn.args[0],gn.multiplier)):gn}),l=f.length;if(c.power<0){if(l===2)return D.integrate(a.expand(c),k,F,t0)}else if(l===2){try{z=D.integration.u_substitution(f,k)}catch{}if(!z){var S=f[0].group,E=f[1].group,M=f[0],P=f[1],p0=M.fname,l0=P.fname;if(c=a.multiply(M.clone(),P.clone()),S===x0&&E===x0)if(p0===M1||l0===M1)z=D.integration.by_parts(c.clone(),k,F,t0);else{f.sort(function(gn,ae){return ae.fname>gn.fname});var h0=M.args[0];(!h0.isLinear()||!(h0.group===e1||h0.group===M0||h0.group===F0))&&D.integration.stop();var a0=D.integration.decompose_arg(h0,k);Z=a0[1],H=a0[0],Z.isLinear()||D.integration.stop();var t1=P.args[0];if(h0.equals(t1))if(p0===s&&l0===h||p0===h&&l0===s)if(M.power.lessThan(0)&&D.integration.stop(),p0===s&&M.power.add(P.power).equals(0))M.fname=u,M.updateHash(),z=D.integrate(M,k,F);else if(k0(M.power)&&l0===h&&P.power.lessThan(0)){var e0=Number(M.power)/2,I0=a.parse(X("(1-cos({0})^2)^({1})",M.args[0],e0));z=D.integrate(a.expand(a.multiply(I0,P.clone())),k,F,t0)}else if(k0(M.power)&&l0===s&&P.power.lessThan(0)){var e0=Number(M.power)/2,I0=a.parse(X("(1-sin({0})^2)^({1})",M.args[0],e0));z=D.integrate(a.expand(a.multiply(I0,P.clone())),k,F,t0)}else{var G0=m.Utils.even(M.power),m1=m.Utils.even(P.power);if(z=new N0(0),!G0||!m1){var R,f1,Y1;G0?(R=M,f1=P):(R=P,f1=M);var q1=R.fname===h?-1:1,e0=f1.power,_1=(e0-1)/2,Y1=a.parse("(1-"+R.fname+m.Utils.inBrackets(h0)+"^2)^"+_1),W1=a.expand(a.multiply(new N0(q1),a.multiply(R.clone(),Y1)));W1.each(function(Pn){z=a.add(z,D.integration.poly_integrate(Pn.clone()))})}else{var $1=function(Pn){var Vn=Pn.power,ve=Vn/2,qe;return Pn.fname===h?qe="((1/2)+(cos(2*("+Pn.args[0]+"))/2))^"+ve:qe="((1/2)-(cos(2*("+Pn.args[0]+"))/2))^"+ve,a.parse(qe)},H=$1(M),v0=$1(P),x=a.multiply(H,v0),W1=a.expand(x);return W1.each(function(Pn){z=a.add(z,D.integrate(Pn,k,F))}),a.multiply(z,e)}}else if(p0===p&&l0===u&&Z.isLinear()&&P.isLinear())z=a.parse(X("sec({0})^({1})/({1})",M.args[0],M.power));else if(p0===u&&l0===p&&Z.isLinear())if(M.isLinear()&&P.isLinear())z=a.divide(a.symfunction(p,[h0.clone()]),H);else if(k0(M.power)){var g0=Number(M.power)/2,x=a.parse(X("(sec({0})^2-1)^({1})",M.args[0],g0));z=D.integrate(a.expand(a.multiply(x,P)),k,F)}else D.integration.stop();else if(p0===p&&l0===h)M.fname=h,M.invert().updateHash(),z=D.integrate(a.multiply(M,P),k,F);else if(p0===s&&l0===v)P.fname=s,P.invert().updateHash(),z=D.integrate(a.multiply(M,P),k,F);else if(p0===u&&(l0===h||l0===s)&&P.power.lessThan(0)){var x=a.multiply(M.fnTransform(),P);z=D.integrate(a.expand(x),k,F)}else{var x=a.multiply(M.fnTransform(),P.fnTransform());z=D.integrate(a.expand(x),k,F)}else if((p0===s||p0===h)&&(l0===s||l0===h))if(M.isLinear()&&P.isLinear())if(M.args[0].isLinear()&&P.args[0].isLinear()){var u0,an;l0===s?(u0=M.args[0],an=P.args[0]):(an=M.args[0],u0=P.args[0]),B0=a.parse(X("(sin(({1})+({0}))+sin(({1})-({0})))/2",u0.toString(),an.toString())),z=D.integrate(B0,k,F)}else{var rn=c1(f);z=D.integrate(a.expand(rn),k,F)}else{var rn=new N0(1);f.map(function(On){var oe=On.fnTransform();rn=a.multiply(rn,oe)});var x=a.expand(rn);z=D.integrate(x,k,F),z.hasIntegral()&&(z=D.integrate(c1(rn.collectSymbols()),k,F))}else D.integration.stop()}else if(S===x0&&E===F0){var F1=M.isLinear();if(M.fname===h&&F1&&P.power.equals(-1))z=a.symfunction("Ci",[M.args[0]]);else if(M.fname===h&&P.power.equals(-1))z=D.integrate(a.multiply(M.fnTransform(),P.clone()),k,F);else if(M.fname===f0&&F1&&P.power.equals(-1))z=a.symfunction("Chi",[M.args[0]]);else if(M.fname===f0&&P.power.equals(-1))z=D.integrate(a.multiply(M.fnTransform(),P.clone()),k,F);else if(M.fname===s&&F1&&P.power.equals(-1))z=a.symfunction("Si",[M.args[0]]);else if(M.fname===s&&P.power.equals(-1))z=D.integrate(a.multiply(M.fnTransform(),P.clone()),k,F);else if(M.fname===j0&&F1&&P.power.equals(-1))z=a.symfunction("Shi",[M.args[0]]);else if(M.fname===j0&&P.power.equals(-1))z=D.integrate(a.multiply(M.fnTransform(),P.clone()),k,F);else if(M.fname===M1&&P.power.equals(-1))z=D.integration.poly_integrate(M,k,F);else if(M.fname==="erf"){if(P.power.equals(1)){var G1=D.integration.decompose_arg(M.args[0],k),A=G1[0],y0=G1[1],J0=M.args[0].toString();z=a.parse(X("(e^(-(({2}))^2)*(sqrt(pi)*e^((({2}))^2)*(2*({0})^2*({1})^2-3)*erf(({2}))+2*({0})*({1})-2))/(4*sqrt(pi)*({0})^2)",A,y0,J0))}}else z=D.integration.by_parts(c,k,F,t0)}else if(S===D1&&E===F0){var Z=p0===M1?D.integration.decompose_arg(M.args[0],k)[1]:null;M.isE()&&(M.power.group===F0||M.power.group===M0)&&P.power.equals(-1)?z=a.symfunction("Ei",[M.power.clone()]):p0===M1&&Z.value===P.value?z=D.integration.poly_integrate(M,k,F):z=D.integration.by_parts(c,k,F,t0)}else if(S===O0&&E===F0){if(P.value===M.value&&M.power.equals(-1)){var qn=Math.min.apply(null,m.Utils.keys(M.symbols)),Fn=Math.min(qn,P.power),Nn=P.clone();Nn.power=new y(Fn),P=a.divide(P,Nn.clone());var x=new N0(0);M.each(function(gn){x=a.add(x,a.divide(gn.clone(),Nn.clone()))}),x.multiplier=M.multiplier,c=a.divide(P,x)}else c=a.expand(c);z=D.integration.partial_fraction(c,k,F)}else if(S===e1&&E===F0){var B0=M.clone().toLinear(),nn=m.Algebra.degree(B0,a.parse(k)).equals(1);if(M.power.equals(-1/2)){var a0=D.integration.decompose_arg(M.clone().toLinear(),k),H=a0[0].negate(),Z=a0[1],v0=a0[3],sn=Number(M.power),hn=Number(P.power);if(U(hn)&&m.Utils.even(hn)&&Z.power.equals(2)){var zn=a.divide(a.multiply(a.pow(v0.clone(),new N0(2)),a.symfunction(Q,[a.divide(v0.clone(),H.clone())])),a.pow(H.clone(),new N0(2)));zn=a.multiply(zn,a.symfunction(Q,[v0]).invert());var Tn=a.parse("sin(u)");Tn.power=Tn.power.multiply(P.power);var Y=D.integrate(Tn,"u",F),dn=a.parse(T+"("+Q+"("+H+"/"+v0+")*"+k+")");z=a.multiply(zn,Y.sub(new N0("u"),dn))}else if(sn===-1/2){var Sn=function(Pn,Vn){var ve=a.parse(D.integrate(Pn,k,F,t0).sub(k,X(Vn,k)));if(!ve.hasIntegral())return ve};hn===-1?z=Sn(a.expand(a.expand(a.pow(a.multiply(M.invert(),P.invert()),new N0(2)))).invert(),"sqrt(1-1/({0})^2)"):hn===-2&&(z=Sn(a.sqrt(a.expand(a.divide(a.pow(c,new N0(2)).invert(),a.pow(new N0(k),new N0(2))).negate())).invert(),"sqrt(1-1/({0})^2)"))}}else if(M.power.equals(-1)&&P.isLinear()&&nn)z=D.integration.partial_fraction(c,k,F);else if(!M.power.lessThan(0)&&U(M.power)){var _n=a.expand(M);z=new N0(0),_n.each(function(gn){gn.group===O0?gn.each(function(ae){z=a.add(z,D.integrate(a.multiply(P.clone(),ae),k,F))}):z=a.add(z,D.integrate(a.multiply(P.clone(),gn),k,F))})}else if(M.power.lessThan(-2))z=D.integration.by_parts(c,k,F,t0);else if(M.power.lessThan(0)&&P.power.greaterThan(1)){var a0=D.integration.decompose_arg(M.clone().toLinear(),k),H=a0[0].negate(),Z=a0[1],v0=a0[3],E0=M.clone().toLinear();if(Z.group!==O0&&Z.isLinear()){var g0=Number(P.power),ln="_u_",R=new N0(ln),jn=a.expand(a.divide(a.pow(a.subtract(R.clone(),v0.clone()),new N0(g0)),R.clone())),Bn={};Bn[ln]=E0;var Xn=a.parse(jn,Bn);z=D.integrate(Xn,k,0)}else if(P.power.greaterThan(Z.power)||P.power.equals(Z.power)){var Yn=new m.Algebra.Classes.Factors;M=m.Algebra.Factor.coeffFactor(M.invert(),Yn);var Qn=m.Algebra.divide(P,M);Qn.group!==M0?(z=new N0(0),Qn.each(function(Vn){z=a.add(z,D.integrate(Vn,k,F))}),Yn.each(function(Vn){z=a.divide(z,Vn)}),z=a.expand(z)):z=D.integration.by_parts(c,k,F,t0)}else z=D.integration.partial_fraction(c,k,F)}else if(M.power.den.equals(2)){var G1=D.integration.decompose_arg(M.clone().toLinear(),k),H=G1[3],Z=G1[1],v0=G1[0],an=G1[2];if(Z.power.equals(2)&&v0.lessThan(0)){H.equals(1)||(e=a.multiply(e,a.pow(H,new N0(2))));var R=k,zn=a.divide(a.pow(v0.clone().negate(),new N0(1/2)),a.pow(H,new N0(1/2))),ln=a.symfunction(h,[new N0(R)]),Wn=a.pow(a.symfunction(h,[new N0(R)]),new N0(M.power.num)),ie=a.pow(a.symfunction(s,[new N0(R)]),new N0(P.power)),Jn=a.multiply(a.multiply(Wn,ln),ie),Y=D.integrate(Jn,R,F);z=Y.sub(R,a.symfunction(T,[a.multiply(new N0(k),zn)]))}else z=D.integration.partial_fraction(c,k,F,t0)}else nn&&(z=D.integration.partial_fraction(c,k,F))}else if(M.isComposite()&&P.isComposite())if(z=new N0(0),M.power.greaterThan(0)&&P.power.greaterThan(0)){var W1=a.expand(c);W1.each(function(gn){z=a.add(z,D.integrate(gn,k,F))},!0)}else{var sn=Number(M.power),hn=Number(P.power);if(sn<0&&hn>0){var x=M;M=P,P=x}sn===-1&&hn===-1?z=D.integration.partial_fraction(c,k):M.each(function(ae){var On=a.multiply(ae,P.clone()),oe=D.integrate(On,k,F);z=a.add(z,oe)})}else if(S===e1&&f[0].power.greaterThan(0))M=a.expand(M),z=new N0(0),M.each(function(Cn){z=a.add(z,D.integrate(a.multiply(Cn,P.clone()),k,F))},!0);else if(S===x0&&E===D1&&m.Utils.in_htrig(M.fname))M=M.fnTransform(),z=D.integrate(a.expand(a.multiply(M,P)),k,F);else if(S===x0&&E===e1||E===x0&&S===e1){if(E===x0&&S===e1){var x=M;M=P,P=x}var ln,pe,g0,L1,ue,he;if(ln=N0.unwrapSQRT(D.diff(M.clone(),k),!0),pe=N0.unwrapSQRT(P,!0),ln.power.equals(pe.power)){if(g0=new N0(P.power),ue=ln.clone().toLinear(),he=P.clone().toLinear(),L1=m.Algebra.divide(ue.toLinear(),he),L1.isConstant()){var Gn=a.pow(L1,g0.negate());z=a.multiply(Gn,D.integration.poly_integrate(M.clone()))}}else z=D.integration.by_parts(c,k,F,t0)}else{var fe=M.clone().toLinear(),An=P.clone().toLinear();S===D1&&E===D1&&M.power.contains(k)&&P.power.contains(k)&&!fe.contains(k)&&!An.contains(k)?z=a.parse(X("(({0})^(({2})*({4}))*({1})^(({3})*({4})))/(log(({0})^({2}))+log(({1})^({3})))",fe.toString(),An.toString(),M.power.multiplier.toString(),P.power.multiplier.toString(),k)):z=D.integration.by_parts(c,k,F,t0)}}}else if(l===3&&(f[2].group===F0&&f[2].power.lessThan(2)||f[0].group===e1)){var Dn=f[0];if(Dn.group===e1){Dn.power.greaterThan(1)&&(Dn=a.expand(Dn));var f1=a.multiply(f[1],f[2]);z=new N0(0),Dn.each(function(gn){var ae=a.multiply(gn,f1.clone()),On=D.integrate(ae,k,F);z=a.add(z,On)},!0)}else z=D.integration.by_parts(c,k,F,t0)}else if(P0(f)){for(var x=new N0(1),ne=0,l=f.length;ne<l;ne++)x=a.multiply(x,f[ne].fnTransform());x=a.expand(x),z=D.integrate(x,k,F)}else{var rn=c1(f);z=D.integrate(a.expand(rn),k,F)}}z=a.multiply(z,e)}if(z)return z}catch(Cn){if(!(Cn instanceof s1||Cn instanceof m.exceptions.DivisionByZero))throw Cn}return a.symfunction("integrate",[B,r0])},!1))},defint:function(B,r0,F,t0){t0=t0||"x";var A0=function(O,c0,g0){try{return a.parse(O,c0)}catch{var E0=D.Limit.limit(O,t0,g0);return E0}},z0=m.Utils.variables(B),k=B.hasTrig(),c,N;if(z0.length===1&&!t0&&(t0=z0[0]),k||(N=D.integrate(B,t0)),!k&&!N.hasIntegral()){var z={},x={},H,K;z[t0]=F,x[t0]=r0,H=A0(N,z,F),K=A0(N,x,r0),c=a.subtract(H,K)}else if(z0.length===1&&r0.isConstant()&&F.isConstant()){var Z=m.Utils.build(B);c=new N0(m.Math2.num_integrate(Z,Number(r0),Number(F)))}else c=a.symfunction("defint",[B,r0,F,t0]);return c},Limit:{interval:function(B,r0){return a.parse(X("[{0}, {1}]",B,r0))},diverges:function(){return D.Limit.interval("-Infinity","Infinity")},divide:function(B,r0,F,t0,A0){if(!(A0++>h1.max_lim_depth)){B.clone();var z0=r0.clone();if(r0.fname===x1){var k=B.sign(),c=t0.sign();if(t0.isInfinity)return a.multiply(new N0(k),new N0(c));if(t0.equals(0)){var N=a.parse(B.multiplier),z=a.parse(r0.multiplier);return a.divide(a.multiply(N,D.Limit.interval("-1","1")),z)}else D.Limit.diverges()}var x=function(i0){if(m.Utils.isVector(i0)){for(var T0=0;T0<i0.elements.length;T0++)if(!i0.elements[T0].isInfinity)return!1;return!0}return i0.isInfinity},H=function(i0,T0){return m.Utils.isVector(i0)?!1:i0.equals(T0)},K;do{var Z=D0(D.Limit.limit(B.clone(),F,t0,A0)),O=D0(D.Limit.limit(r0.clone(),F,t0,A0)),c0=x(Z)&&x(O)||H(Z,0)&&H(O,0);if(c0){var g0=D.diff(B.clone(),F),E0=D.diff(r0.clone(),F),a0=a.expand(a.divide(g0,E0));B=a0.getNum(),r0=a0.getDenom()}}while(c0);var v0=O.equals(0),u0=Number(z0.power);return t0.isConstant(!0)&&v0?K=N0.infinity(m.Utils.even(u0)&&Z.lessThan(0)?-1:void 0):v0?K=D.Limit.diverges():K=a.divide(Z,O),K}},rewriteToLog:function(B){var r0=B.power.clone();return B.toLinear(),a.pow(new N0("e"),a.multiply(r0,a.symfunction(h1.LOG+"",[B])))},getSubbed:function(B,r0,F){var t0;B.group===D1&&(B=D.rewriteToLog(B));try{t0=B.sub(r0,F)}catch{t0=B}return t0},isInterval:function(B){return m.Utils.isVector(B)},isConvergent:function(B){return!(D.Limit.isInterval(B)&&B.elements[0].isInfinity&&B.elements[1].isInfinity||B.containsFunction("limit"))},limit:function(B,r0,F,t0){if(B.isLinear()&&B.isComposite()){var A0=new N0(0);return B.each(function(o){A0=a.add(A0,D.Limit.limit(o,r0,F,t0))},!0),A0}if(B=m.Algebra.Simplify.simplify(B),t0=t0||1,!(t0++>h1.max_lim_depth)){var z0=a.parse(B.multiplier);B.toUnitMultiplier();try{var k;if(B.isConstant(!0))k=B;else{var c={};c[r0]=F;try{var N=a.parse(B.sub(r0,F),c);(N.isConstant(!0)||N.isInfinity)&&(k=N)}catch{}if(!k){var z=B.getNum(),x=B.getDenom();if(x.isConstant(!0)){if(B.group===D1){var H=B.clone().toLinear(),K=B.power.clone(),Z=H.getNum(),O=H.getDenom(),c0=m.Utils.decompose_fn(O,r0,!0);if(Z.group===F0&&Z.multiplier.isOne()&&c0.ax.group===F0&&c0.b.isConstant(!0)&&c0.a.isOne()&&c0.b.isConstant(!0))k=a.parse(X("(1/e^({0}))",c0.b));else{var g0=D.Limit.rewriteToLog(B.clone()),E0=g0.power.clone(),a0=g0.clone().toLinear(),v0=D.Limit.limit(a0,r0,F,t0),u0=D.Limit.limit(E0,r0,F,t0);k=a.pow(v0,u0)}}else if(B.group===x0&&B.args.length===1){var i0,T0=D.Limit.limit(B.args[0],r0,F,t0);if(m.Utils.isVector(T0))return k=T0.map(function(o){var d=B.clone();return d.args[0]=o,D.Limit.limit(a.symfunction(B.fname,[o]),r0,F,t0)}),a.multiply(z0,k);if(T0.isConstant(!0)){var o0=a.symfunction(B.fname,[T0]);try{D0(o0),i0=!0}catch{i0=!1}}if(i0)k=o0;else if(D.Limit.isConvergent(T0)){if(B.fname===M1)switch(T0.toString()){case"0":k=N0.infinity().negate();break;case"Infinity":k=N0.infinity();break;case"-Infinity":k=N0.infinity();break}else if((B.fname===h||B.fname===s)&&F.isInfinity)k=D.Limit.interval(-1,1);else if(B.fname===u){var b0=B.args[0],B0=b0.getNum(),$0=b0.getDenom(),Z0=B0.toUnitMultiplier();(F.isInfinity||Z0.equals("pi")&&$0.equals(2))&&(k=divergent())}else if(B.fname===h1.FACTORIAL&&T0.isInfinity)return N0.infinity()}}else if(B.group===F0){if(B.power>0)return a.parse(B,c);m.Utils.even(B.power)?k=N0.infinity():k=D.Limit.diverges()}else if(B.group===M0){var C1,u1,H0=B.collectSymbols().sort(function(d,g){return d.group-g.group}),H=H0.pop();for(C1=D0(D.Limit.limit(H,r0,F,t0));H0.length;){var p1=H0.pop();u1=D0(D.Limit.limit(p1,r0,F,t0)),C1.isInfinity||!D.Limit.isConvergent(C1)&&u1.equals(0)||C1.equals(0)&&D.Limit.isConvergent(u1)?(p1.containsFunction(M1)&&(p1=[H,H=p1][0]),p1.invert(),C1.isInfinity&&u1.isInfinity?C1=N0.infinity():C1=D.Limit.divide(H,p1,r0,F,t0)):(C1=a.multiply(C1,u1),H=a.multiply(H,p1))}k=C1}else if(B.isComposite()){var y1;B.isLinear()||(B=a.expand(B)),k=new N0(0);for(var H0=B.collectSymbols().sort(function(d,g){return g.group-d.group}),T1=[],P1=new N0(0),_0=0,v1=H0.length;_0<v1;_0++){var O1=H0[_0].clone();O1.group===x0||O1.group===M0&&O1.hasFunc()?P1=a.add(P1,O1):T1.push(O1)}T1.unshift(P1),T1.length!==1&&(H0=T1);for(var _0=0,v1=H0.length;_0<v1;_0++){var O1=H0[_0];try{y1=D.Limit.limit(O1,r0,F,t0)}catch{y1=D.Limit.diverges()}try{k=a.add(k,y1)}catch{if(t0++>h1.max_lim_depth)return;k=D.Limit.limit(D.diff(B,r0),r0,F,t0)}}}}else k=D.Limit.divide(z,x,r0,F,t0)}}k||(k=a.symfunction("limit",[B,r0,F]))}catch{k=a.symfunction("limit",[B,r0,F])}return a.multiply(z0,k)}}},Fresnel:{S:function(B){return B.isConstant(!0)?D.defint(a.parse("sin(pi*x^2/2)"),N0(0),B,"x"):a.symfunction("S",arguments)},C:function(B){return B.isConstant(!0)?D.defint(a.parse("cos(pi*x^2/2)"),N0(0),B,"x"):a.symfunction("C",arguments)}}};j1.register([{name:"diff",visible:!0,numargs:[1,3],build:function(){return D.diff}},{name:"sum",visible:!0,numargs:4,build:function(){return D.sum}},{name:"product",visible:!0,numargs:4,build:function(){return D.product}},{name:"integrate",visible:!0,numargs:[1,2],build:function(){return D.integrate}},{name:"defint",visible:!0,numargs:[3,4],build:function(){return D.defint}},{name:"S",visible:!0,numargs:1,build:function(){return D.Fresnel.S}},{name:"C",visible:!0,numargs:1,build:function(){return D.Fresnel.C}},{name:"limit",visible:!0,numargs:[3,4],build:function(){return D.Limit.limit}}]),j1.updateAPI()})()}()),Re.exports}(function(l1){{var j1=Ne();$e(),Xe()}(function(){var m=j1.getCore(),a=m.PARSER,y=m.Algebra,h1=m.Calculus,K0=h1.integration.decompose_arg,N0=m.Utils.evaluate,I1=m.Utils.remove,V0=m.Utils.format,U=m.Utils.build,X=m.Utils.knownVariable,k0=m.Symbol,D0=m.Utils.isSymbol,Y0=m.Utils.variables,F0=m.groups.S,x0=m.groups.PL,O0=m.groups.CB,e1=m.groups.CP,M0=m.groups.FN,D1=m.Settings,Q1=m.Utils.range,M1=m.Utils.isArray;m.Settings.SOLVE_RADIUS=1e3,m.Settings.ROOTS_PER_SIDE=10,m.Settings.make_pi_conversions=!1,m.Settings.STEP_SIZE=.1,m.Settings.EPSILON=1e-13,m.Settings.MAX_NEWTON_ITERATIONS=200,m.Settings.MAX_NON_LINEAR_TRIES=12,m.Settings.NON_LINEAR_JUMP_AT=50,m.Settings.NON_LINEAR_JUMP_SIZE=100,m.Settings.NON_LINEAR_START=.01,m.Settings.NEWTON_SLICES=200,m.Settings.NEWTON_EPSILON=Number.EPSILON*2,m.Settings.SOLUTION_PROXIMITY=1e-14,m.Settings.FILTER_SOLUTIONS=!0,m.Settings.MAX_SOLVE_DEPTH=10,m.Settings.ZERO_EPSILON=1e-9,m.Settings.MAX_BISECTION_ITER=2e3,m.Settings.BI_SECTION_EPSILON=1e-12,m.Symbol.prototype.hasTrig=function(){return this.containsFunction(["cos","sin","tan","cot","csc","sec"])},m.Symbol.prototype.hasNegativeTerms=function(){if(this.isComposite())for(var u in this.symbols){var p=this.symbols[u];if(p.group===x0&&p.hasNegativeTerms()||this.symbols[u].power.lessThan(0))return!0}return!1};function N1(u,p){if(p.isConstant()&&u.isConstant()&&!u.equals(p)||u.equals(m.Settings.IMAGINARY)&&p.isConstant(!0)||p.equals(m.Settings.IMAGINARY)&&u.isConstant(!0))throw new m.exceptions.NerdamerValueError(u.toString()+" does not equal "+p.toString());this.LHS=u,this.RHS=p}N1.prototype={toString:function(){return this.LHS.toString()+"="+this.RHS.toString()},text:function(u){return this.LHS.text(u)+"="+this.RHS.text(u)},toLHS:function(u){u=typeof u>"u";var p;u?p=this.removeDenom():p=this.clone();var v=p.LHS,b=p.RHS;v.isConstant(!0)&&!b.isConstant(!0)&&([v,b]=[b,v]);var T=a.subtract(v,b),L=u?a.expand(T):T;return L=new N1(L,new k0(0)).removeDenom().LHS,L},removeDenom:function(){var u=this.LHS.clone(),p=this.RHS.clone(),v=a.multiply(u.getDenom(),p.getDenom());if(u=a.expand(a.multiply(u,v.clone())),p=a.expand(a.multiply(p,v)),p.group===e1&&p.group!==e1){var b=u;u=p,p=b}if(u.group===O0){var b=new k0(u.multiplier),T=p.clone();u.each(function(j0){j0.power.lessThan(0)?T=a.divide(T,j0):b=a.multiply(b,j0)}),u=b,p=T}else if(u.group===e1)for(var L in u.symbols){var _=u.symbols[L];if(_.group===O0)for(var G in _.symbols){var n0=_.symbols[G];if(n0.power.lessThan(0))return new N1(a.expand(a.multiply(n0.clone().toLinear(),u)),a.expand(a.multiply(n0.clone().toLinear(),p)))}}return new N1(u,p)},clone:function(){return new N1(this.LHS.clone(),this.RHS.clone())},sub:function(u,p){var v=this.clone();return v.LHS=v.LHS.sub(u.clone(),p.clone()),v.RHS=v.RHS.sub(u.clone(),p.clone()),v},isZero:function(){return m.Utils.evaluate(this.toLHS()).equals(0)},latex:function(u){return[this.LHS.latex(u),this.RHS.latex(u)].join("=")}},a.equals=function(u,p){return new N1(u,p)},function(){var u=a.functions.simplify[0];a.functions.simplify[0]=function(p){return p instanceof N1?(p.LHS=u(p.LHS),p.RHS=u(p.RHS),p):u(p)}}(),m.Expression.prototype.equals=function(u){u instanceof m.Expression&&(u=u.symbol);var p=new N1(this.symbol,u);return p},m.Expression.prototype.solveFor=function(u){var p;if(this.symbol instanceof N1){if(this.symbol.LHS.isConstant()&&this.symbol.RHS.equals(u))return new m.Expression(this.symbol.LHS);if(this.symbol.RHS.isConstant()&&this.symbol.LHS.equals(u))return new m.Expression(this.symbol.RHS);p=this.symbol.toLHS()}else p=this.symbol;return h(p,u).map(function(v){return new m.Expression(v)})},m.Expression.prototype.expand=function(){if(this.symbol instanceof N1){var u=this.symbol.clone();return u.RHS=a.expand(u.RHS),u.LHS=a.expand(u.LHS),new m.Expression(u)}return new m.Expression(a.expand(this.symbol))},m.Expression.prototype.variables=function(){return this.symbol instanceof N1?m.Utils.arrayUnique(Y0(this.symbol.LHS).concat(Y0(this.symbol.RHS))):Y0(this.symbol)};var x1=function(u,p){return a.equals(u,p)};m.Equation=N1;var Q=m.Utils.checkAll=function(u,p){for(var v=0;v<u.length;v++)if(p(u[v]))return!1;return!0},s=m.Solve={version:"2.0.3",solutions:[],solve:function(u,p){var v=h(u,String(p));return new m.Vector(v)},toLHS:function(u,p){if(D0(u))return u;if(!(u instanceof N1)){var v=u.split("=");v[1]=v[1]||"0",u=new N1(a.parse(v[0]),a.parse(v[1]))}return u.toLHS(p)},solveCircle:function(u,p){for(var v=p.map(function(n1){return a.parse(n1)}),b=[],T=[],L=0;L<u.length;L++){for(var _=[],G=0;G<v.length;G++)_.push(Number(m.Algebra.degree(u[L],v[G])));_.push(m.Utils.arraySum(_,!0)),b.push(_)}var n0=u[0],q0=u[1];if(b[0][2]>b[1][2]&&([q0,n0]=[n0,q0],[b[1],b[0]]=[b[0],b[1]]),b[0][0]===1&&b[0][2]===2&&b[1][0]===2&&b[1][2]===4){var j0=p[0],f0=p[1],R0=h(a.parse(q0,X(j0,h(a.parse(n0),j0)[0])),f0).map(function(n1){return n1.toString()}),w0=[h(a.parse(n0,X(f0,R0[0])))[0].toString()];if(R0[1]&&w0.push(h(a.parse(n0,X(f0,R0[1])))[0].toString()),D1.SOLUTIONS_AS_OBJECT){var T={};T[j0]=w0,T[f0]=R0}else R0.unshift(f0),w0.unshift(j0),T=[w0,R0]}return T},solveNonLinearSystem:function(u,p,v){if(p<0)return[];v=typeof v>"u"?m.Settings.NON_LINEAR_START:v;var b=m.Settings.MAX_NON_LINEAR_TRIES,T=Math.floor(b/2);p=typeof p>"u"?b:p;var L=m.Settings.NON_LINEAR_JUMP_AT,_=m.Settings.NON_LINEAR_JUMP_SIZE,G=function(c1,D){return c1.map(function(B,r0){return Number(D.get(r0,0))})},n0=m.Utils.arrayGetVariables(u),q0=m.Matrix.jacobian(u,n0,function(c1){return U(c1,n0)},!0),j0=m.Settings.MAX_NEWTON_ITERATIONS,f0,R0,w0,n1,X0,g1,d1,X1,s1=u.map(function(c1){return U(c1,n0)}),P0=q0.map(function(c1){return U(c1,n0)},!0);n1=m.Matrix.cMatrix(0,n0);var i1=m.Matrix.cMatrix(v,n0);w0=0;do{if(w0>j0)break;f0=G(n0,i1),d1=i1.clone(),s1.forEach(function(c1,D){i1.set(D,0,c1.apply(null,f0))});var R1=new m.Matrix;if(P0.each(function(c1,D,B){var r0=c1.apply(null,f0);R1.set(D,B,r0)}),R1=R1.invert(),R0=a.multiply(R1,i1).negate(),X1=R0.subtract(n1,function(c1){return a.parse(Number(c1))}),n1=d1.add(R0,function(c1){return a.parse(Number(c1))}),i1=n1,w0>=L&&X0>1){p===T&&(v=0);var Z1=p>T?1:-1;return n=p%Math.floor(T)+1,v+=Z1*n*_,s.solveNonLinearSystem(u,--p,v)}if(g1=X0,w0++,X0=X1.max(),Number(X0)===Number(g1))break}while(Number(X0)>=Number.EPSILON);return s.systemSolutions(i1,n0,!0,function(c1){return m.Utils.round(Number(c1),14)})},systemSolutions:function(u,p,v,b){var T=m.Settings.SOLUTIONS_AS_OBJECT?{}:[];return u.each(function(L,_){var G=(v?a.expand(L):L).valueOf();b&&(G=b.call(L,G));var n0=p[_];m.Settings.SOLUTIONS_AS_OBJECT?T[n0]=G:T.push([n0,G])}),T},solveSystemBySubstitution:function(u){var p=Y0(u[0]),v=Y0(u[1]);return u.length===2&&p.length===2&&m.Utils.arrayEqual(p,v)?s.solveCircle(u,p):[]},solveSystem:function(u,p){for(var v=0;v<u.length;v++)u[v]=s.toLHS(u[v]);var b=u.length,T=new m.Matrix,L=new m.Matrix,_=!1,G;if(typeof p>"u"){if(!y.allLinear(u))try{return s.solveNonLinearSystem(u)}catch(B){if(B instanceof m.exceptions.DivisionByZero)return s.solveSystemBySubstitution(u)}if(G=m.Utils.arrayGetVariables(u),G.length===1){var n0=0,q0,j0;do{var j0=u[n0].clone();n0>0&&(j0=j0.sub(G[0],q0[0])),q0=h(j0,G[0])}while(++n0<u.length);var f0;return D1.SOLUTIONS_AS_OBJECT?(f0={},f0[G[0]]=q0):q0.length===0?f0=q0:f0=[G[0],q0],f0}if(G.length<u.length){for(var R0=[],n0=u.length,v=0;v<n0-1;v++)R0.push(a.parse(u[v]));var w0={},f0=s.solveSystem(R0,G);Array.isArray(f0)?f0.forEach(function(F){w0[F[0]]=F[1]}):w0=f0;for(var n1=!0,v=n0-1;v<n0;v++)a.parse(u[v],w0).equals(0)||(n1=!1);if(n1)return f0}for(var v=0;v<G.length;v++)j1.setVar(G[v],"delete");for(var v=0;v<b;v++){for(var j0=u[v],X0=0;X0<G.length;X0++){var g1=G[X0],d1=[];j0.each(function(F){F.contains(g1)&&(d1=d1.concat(F.coeffs()))});var X1=m.Utils.arraySum(d1);T.set(v,X0,X1)}var s1=j0.clone();G.map(function(F){s1=s1.stripVar(F,!0)}),L.set(v,0,s1.negate())}}else for(G=p,_=!0,v=0;v<b;v++){L.set(v,0,new k0(0));for(var j0=a.expand(u[v]).collectSymbols(),X0=0;X0<p.length;X0++){T.set(v,X0,new k0(0));for(var g1=p[X0],P0=0;P0<j0.length;P0++){for(var i1=j0[P0],R1=!1,Z1=0;Z1<p.length;Z1++)i1.contains(p[Z1])&&(R1&&m.err("Multiple variables found for term "+i1),R1=!0);if(i1.contains(g1)){var c1=K0(I1(j0,P0),g1);T.set(v,X0,a.add(T.get(v,X0),c1[0]))}}}for(P0=0;P0<j0.length;P0++)L.set(v,0,a.add(L.get(v,0),j0[P0]))}if(G.length!==u.length||T.determinant().equals(0))throw new m.exceptions.SolveError("System does not have a distinct solution");T=T.invert();var D=T.multiply(L);return m.Utils.isArray(p)&&D.each(function(B){return B.negate()}),s.systemSolutions(D,G,_)},quad:function(u,p,v){var b=a.subtract(a.pow(p.clone(),k0(2)),a.multiply(a.multiply(v.clone(),u.clone()),k0(4)));b=a.expand(b);var T=a.pow(b,k0(.5)),L=a.parse(a.multiply(new k0(2),v.clone())),_=[a.parse(V0("(-({0})+({1}))/({2})",p,T,L)),a.parse(V0("(-({0})-({1}))/({2})",p,T,L))];return _},cubic:function(u,p,v,b){var T=b.text(),L=v.text(),_=p.text(),G=u.text(),n0=`(-(${L})^3/(27*(${T})^3)+(${L})*(${_})/(6*(${T})^2)-(${G})/(2*(${T})))`,q0=`((${_})/(3*(${T}))-(${L})^2/(9*(${T})^2))`,j0=`(${L})/(3*(${T}))`,f0=`((${n0})+sqrt((${n0})^2+(${q0})^3))^(1/3)+((${n0})-sqrt((${n0})^2+(${q0})^3))^(1/3)-(${j0})`,R0="1/2+sqrt(3)/2*i";return[a.parse(f0),a.parse(`(${f0})(${R0})`),a.parse(`(${f0})(${R0})^2`)]},quartic:function(u,p,v,b,T){m.Utils.arrayUnique(Y0(T).concat(Y0(b)).concat(Y0(v)).concat(Y0(p)).concat(Y0(u))).map(function(n1){}),T=T.toString(),b=b.toString(),v=v.toString(),p=p.toString(),u=u.toString();var L,_,G,n0,q0,j0,f0,R0,w0;return L=a.parse(V0("(8*({0})*({2})-3*({1})^2)/(8*({0})^2)",T,b,v)).toString(),_=a.parse(V0("(({1})^3-4*({0})*({1})*({2})+8*({0})^2*({3}))/(8*({0})^3)",T,b,v,p)).toString(),G=a.parse(V0("12*({0})*({4})-3*({1})*({3})+({2})^2",T,b,v,p,u)).toString(),n0=a.parse(V0("2*({2})^3-9*({1})*({2})*({3})+27*({1})^2*({4})+27*({0})*({3})^2-72*({0})*({2})*({4})",T,b,v,p,u)).toString(),q0=a.parse(V0("((({1})+(({1})^2-4*({0})^3)^(1/2))/2)^(1/3)",G,n0)).toString(),F0=a.parse(V0("(1/2)*(-(2/3)*({1})+(1/(3*({0}))*(({2})+(({3})/({2})))))^(1/2)",T,L,q0,G)).toString(),j0=a.parse(V0("-(({1})/(4*({0})))-({4})+(1/2)*sqrt(-4*({4})^2-2*({2})+(({3})/({4})))",T,b,L,_,F0)),f0=a.parse(V0("-(({1})/(4*({0})))-({4})-(1/2)*sqrt(-4*({4})^2-2*({2})+(({3})/({4})))",T,b,L,_,F0)),R0=a.parse(V0("-(({1})/(4*({0})))+({4})+(1/2)*sqrt(-4*({4})^2-2*({2})-(({3})/({4})))",T,b,L,_,F0)),w0=a.parse(V0("-(({1})/(4*({0})))+({4})-(1/2)*sqrt(-4*({4})^2-2*({2})-(({3})/({4})))",T,b,L,_,F0)),[j0,f0,R0,w0]},divideAndConquer:function(u,p){var v=[],b=m.Algebra.Factor.factor(u);return b.group===O0&&b.each(function(T){T=k0.unwrapPARENS(T),v=v.concat(h(T,p))}),v},csolve:function(u,p){return m.Utils.block("IGNORE_E",function(){var v,b,T,L,_,G,n0,q0;if(q0=[],v=m.Utils.decompose_fn(u,p,!0),v.x.group===F0){b=a.parse(v.x.power),T=Number(b),L=a.pow(a.divide(v.b.negate(),v.a),b.invert()),_=k0.toPolarFormArray(L),G=_[0],_[1],n0=G.toString(),b.toString();for(var j0,f0,R0,w0=0;w0<T;w0++)j0=w0,R0=V0("({0})*e^(2*{1}*pi*{2}*{3})",n0,j0,b,m.Settings.IMAGINARY),f0=a.parse(R0),q0.push(f0)}return q0},!0)},getPoints:function(u,p,v){p=p||.01,v=v||[];var b=U(u),T=0,L=Math.round(T),_=b(L),G=_/Math.abs(_),n0=m.Settings.ROOTS_PER_SIDE,q0=n0;v.push(Math.floor(L/2)),v.push(Math.abs(L)),v.push(L),u.each(function(w0){w0.containsFunction(m.Settings.LOG)&&v.push(.1)});var j0=Q1(-m.Settings.SOLVE_RADIUS,L,p),f0=Q1(L,m.Settings.SOLVE_RADIUS,p),R0=function(w0,n1){for(var X0,g1,d1,X1=[],s1=0,P0=w0.length;s1<P0;s1++)X0=w0[s1],g1=b(X0),d1=g1/Math.abs(g1),!(isNaN(g1)||!isFinite(g1)||X1.length>n1)&&(d1!==G&&X1.push(X0),G=d1);v=v.concat(X1)};return R0(j0,q0),R0(f0,n0),v},bisection:function(u,p){var v=u-1,b=u+1;if(Math.sign(p(v))!==Math.sign(p(b))){var T=0,L,_;do{if(L=Math.abs(b-v),T++>m.Settings.MAX_BISECTION_ITER||isNaN(L))return;_=(v+b)/2,p(v)*p(_)>0?v=_:b=_}while(L>=D1.EPSILON);var G=(v+b)/2,n0=p(G);if(!isNaN(n0)&&Math.abs(n0)<=m.Settings.BI_SECTION_EPSILON)return m.Utils.round(G,13)}},Newton:function(u,p,v){var b=m.Settings.MAX_NEWTON_ITERATIONS,T=0,L=u,_;do{var G=p(L);if(L===0&&G===0){_=0;break}if(T++,T>b)return;_=L-G/v(L);var n0=Math.abs(_-L);L=_}while(n0>D1.NEWTON_EPSILON);if(Math.abs(p(_))<=D1.EPSILON)return _},rewrite:function(u,p,v){if(p=p||new k0(0),u.isComposite()&&u.isLinear()){var b=[],T=[];u.each(function(q0){q0=q0.clone(),q0.fname==="sqrt"&&q0.contains(v)?b.push(q0):T.push(q0)},!0),b.length===1&&(p=a.expand(a.pow(a.subtract(p,m.Utils.arraySum(T)),new k0(2))),u=a.expand(a.pow(k0.unwrapSQRT(b[0]),new k0(2))))}else u=k0.unwrapSQRT(a.expand(u));var L=0,_=u.length;if(u.group===e1&&u.contains(v)&&u.isLinear()){u.distributeMultiplier();var G=new k0(0);return u.each(function(q0){q0.contains(v)?(L++,G=a.add(G,q0.clone())):p=a.subtract(p,q0.clone())}),u=G,L!==_?s.rewrite(u,p,v):[u,p]}else if(u.group===O0&&u.contains(v)&&u.isLinear()){if(u.multiplier.lessThan(0)&&(u.multiplier=u.multiplier.multiply(new m.Frac(-1)),p.multiplier=p.multiplier.multiply(new m.Frac(-1))),p.equals(0))return new k0(0);var G=new k0(1);return u.each(function(j0){j0.contains(v)?G=a.multiply(G,j0.clone()):p=a.divide(p,j0.clone())}),u=G,s.rewrite(u,p,v)}else if(!u.isLinear()&&u.contains(v)){var n0=a.parse(u.power.clone().invert());return u=a.pow(u,n0.clone()),p=a.pow(a.expand(p),n0.clone()),s.rewrite(u,p,v)}else if(u.group===M0||u.group===F0||u.group===x0)return[u,p]},sqrtSolve:function(u,p){var v=new k0(0),b=new k0(0);if(u.isComposite()&&(u.each(function(_){_.fname==="sqrt"&&_.contains(p)?v=a.add(v,_.clone()):b=a.add(b,_.clone())}),!v.equals(0))){var T=a.expand(a.multiply(a.parse(u.multiplier),a.subtract(a.pow(b,new k0(2)),a.pow(v,new k0(2))))),L=h(T,p);return L=L.filter(function(_){if(_.isImaginary())return _;var G={};G[p]=_;var n0=N0(u,G);if(n0.equals(0))return _}),L}}},h=function(u,p,v,b,T){if(b=b||0,b++>D1.MAX_SOLVE_DEPTH)return v;if(u instanceof N1){if(u.isZero())return[new k0(0)];if(u.LHS.equals(p)&&!u.RHS.contains(p))return[u.RHS];if(u.RHS.equals(p)&&!u.LHS.contains(p))return[u.LHS]}if(u instanceof m.Vector&&(u=u.elements),p=p||"x",M1(u))return s.solveSystem.apply(void 0,arguments);v=v||[];var L={},_={};if(_[p]=0,D0(u)&&N0(u.getDenom(),_).equals(0)===!0)return v;var G=function(o0,b0){var B0=D0(o0);if(!(o0===void 0||typeof o0=="number"&&isNaN(o0))){if(M1(o0))o0.forEach(function(p1){G(p1)});else if(o0.valueOf()!=="null"){if(typeof m.Settings.PRE_ADD_SOLUTION=="function"&&(o0=m.Settings.PRE_ADD_SOLUTION(o0)),B0||(o0=a.parse(o0)),m.Settings.make_pi_conversions&&b0){var $0=a.divide(o0.clone(),new k0(Math.PI)),Z0=$0.multiplier,C1=Math.abs(Z0.num),u1=Math.abs(Z0.den);C1<10&&u1<10&&(o0=a.multiply($0,new k0("pi")))}var H0=o0.toString();L[H0]||v.push(o0),L[H0]=!0}}};if(u.group===F0&&u.contains(p)){try{var n0={};n0[p]=0,N0(T,n0,"numer"),G(new k0(0))}catch{}return v}if(u.group===O0){var q0=u.getNum();if(q0.group===O0){var j0=String(p);return q0.each(function(o0){o0.contains(j0)&&h(o0,p,v,b,u)}),v}return h(q0,p,v,b,T)}u.group===M0&&u.fname==="sqrt"&&(u=a.pow(k0.unwrapSQRT(u),new k0(2)));var f0=(m.Utils.isSymbol(u)?u:s.toLHS(u,!1)).getNum(),R0=m.Utils.variables(f0),w0=R0.length;if(m.Utils.isInt(f0.power)&&f0.power>0&&(f0=a.parse(f0).toLinear()),f0.group===F0||f0.group===O0&&f0.contains(p))return[new k0(0)];var n1={},X0,g1=function(o0){o0=a.expand(o0,{expand_denominator:!0,expand_functions:!0});var b0=o0.clone();if(o0.symbols)for(var B0 in o0.symbols){var $0=o0.symbols[B0],Z0=$0.getDenom();if(!Z0.isConstant(!0)&&o0.isComposite()){var C1=new k0(0);return o0.each(function(O1){C1=a.add(C1,a.multiply(O1,Z0.clone()))}),g1(a.multiply(a.parse(o0.multiplier),C1))}var u1=K0($0,p),H0=u1[1].fname===m.Settings.SQRT,p1=k0.unwrapSQRT(u1[1]),y1=p1.power.clone();if(!D0(y1)&&!y1.equals(1/2)){if(y1.den.gt(1)){if(H0)return o0=a.subtract(o0,$0.clone()),o0=a.add(o0,a.multiply(u1[0].clone(),p1)),g1(o0);var T1=n1[y1.den];n1[y1.den]=T1?T1++:1}else if(y1.sign()===-1){var P1=a.parse(p+"^"+Math.abs(y1));return o0.each(function(O1,o){O1.contains(p)&&(o0.symbols[o]=a.multiply(O1,P1.clone()))}),n1={},g1(a.parse(o0))}else if($0.group===x0){var _0=m.Utils.arrayMin(m.Utils.keys($0.symbols));if(_0<0){var P1=a.parse(p+"^"+Math.abs(_0)),v1=new k0(0);return b0.each(function(o){v1=a.add(v1,a.multiply(o.clone(),P1.clone()))},!0),v1}}}}return o0},d1=function(o0){var b0=new k0(0),B0=new k0(0);return o0.each(function($0){$0.contains(p,!0)?b0=a.add(b0,$0.clone()):B0=a.subtract(B0,$0.clone())}),[b0,B0]};if(s.inverseFunctionSolve=function(o0,b0,B0){var $0=K0(b0.args[0],p),Z0=$0[1];if(Z0.group===F0)return a.divide(a.symfunction(o0,[a.divide(B0,a.parse(b0.multiplier))]),$0[0])},f0=g1(f0),f0.equals(0))return[f0];var X1=m.Utils.keys(n1);if(X1.length===1&&(X0=X1[0],f0.each(function(o0,b0){if(o0.contains(p)){var B0=K0(o0,p),$0=B0[1],Z0=$0.power;Z0.den.gt(1)&&($0.power=Z0.multiply(new m.Frac(X0)),f0.symbols[b0]=a.multiply($0,B0[0]))}}),f0=a.parse(f0)),G(s.sqrtSolve(f0,p)),w0===1)if(f0.isPoly(!0)){var s1=new m.Algebra.Classes.Factors;if(m.Algebra.Factor.factor(f0,s1),s1.getNumberSymbolics()>1)for(var P0 in s1.factors)G(h(s1.factors[P0],p));else{var i1=m.Utils.getCoeffs(f0,p),R1=i1.length-1,Z1=!1;if(R0[0]===p){if(Q(i1,function(o0){return o0.group!==m.groups.N})){var c1=m.Algebra.proots(f0);Q(c1,function(o0){return!m.Utils.isInt(o0)})&&(Z1=!0,c1.map(function(o0){G(new k0(o0))}))}if(!Z1)if(u=a.parse(u),u instanceof m.Equation&&(u=u.toLHS()),R1===1)G(a.divide(i1[0],i1[1].negate()));else if(R1===2)G(a.expand(s.quad.apply(void 0,i1)));else if(R1===3){var v=[],D=m.Algebra.Factor.factor(u),v=[];v.length>0?G(v):G(s.cubic.apply(void 0,i1))}else y.proots(f0).map(G)}}}else try{var B=f0.hasTrig(),r0=s.getPoints(f0,.1),F=s.getPoints(f0,.05),t0=s.getPoints(f0,.01),A0=m.Utils.arrayUnique(r0.concat(F).concat(t0)).sort(function(o0,b0){return o0-b0}),z0,k,c,N=U(f0.clone()),z=[];for(z0=0;z0<A0.length;z0++){if(k=A0[z0],c=s.bisection(k,N),typeof c>"u"){z.push(k);continue}G(c,B)}A0=z;var x=h1.diff(f0.clone()),H=U(x);for(z0=0;z0<A0.length;z0++)k=A0[z0],G(s.Newton(k,N,H),B);v.sort()}catch(o0){console.log(o0)}else if(!f0.hasFunc(p)&&f0.isComposite())try{var D=m.Algebra.Factor.factor(f0.clone());if(D.group===O0)D.each(function(b0){G(h(b0,p))});else{var i1=m.Utils.getCoeffs(f0,p),K=i1.length,R1=K-1;switch(R1){case 0:var Z=d1(f0),O=Z[0],c0=Z[1];if(O.group===m.groups.EX){var g0=m.Settings.LOG,E0=`${g0}((${c0})/(${O.multiplier}))/${g0}(${O.value})/${O.power.multiplier}`;G(a.parse(E0))}break;case 1:G(a.divide(i1[0],i1[1].negate()));break;case 2:G(s.quad.apply(void 0,i1));break;case 3:G(s.cubic.apply(void 0,i1));break;case 4:G(s.quartic.apply(void 0,i1));break;default:G(s.csolve(f0,p)),v.length===0&&G(s.divideAndConquer(f0,p))}v.length===0&&G(h(D,p,v,b))}}catch{}else try{var a0=s.rewrite(f0,null,p),O=a0[0],c0=a0[1];if(O.group===M0)if(O.fname==="abs")G([c0.clone(),c0.negate()]);else if(O.fname==="sin")G(s.inverseFunctionSolve("asin",O,c0));else if(O.fname==="cos")G(s.inverseFunctionSolve("acos",O,c0));else if(O.fname==="tan")G(s.inverseFunctionSolve("atan",O,c0));else if(O.fname===m.Settings.LOG){var v0=K0(O.args[0],p),P0=v0[1];if(P0.group===F0){c0=a.divide(a.subtract(a.pow(O.args.length>1?O.args[1]:new k0("e"),a.divide(c0,a.parse(O.multiplier))),v0[3]),v0[0]);var f0=new N1(P0,c0).toLHS();G(h(f0,p))}}else G(a.subtract(O,c0));else{var u0=new N1(O,c0).toLHS();if(u0.equals(f0))throw new Error("Stopping. No stop condition exists");G(h(u0,p))}}catch{try{if(f0.group===O0)G(0);else if(f0.group===e1){var Z=d1(f0),O=Z[0],c0=Z[1];if(O.group===m.groups.EX&&O.value===p){var i0=O.power.clone().invert();G(a.pow(c0,i0))}}}catch{}}if(X0&&(v=v.map(function(o0){return a.pow(o0,new k0(X0))})),D0(u)){var T0={};v=v.filter(function(o0){try{T0[p]=o0;var b0=Number(N0(u,T0));return isNaN(b0),!0}catch{return!1}})}return v};j1.register([{name:"solveEquations",parent:"nerdamer",numargs:-1,visible:!0,build:function(){return h}},{name:"solve",parent:"Solve",numargs:2,visible:!0,build:function(){return m.Solve.solve}},{name:"setEquation",parent:"Solve",visible:!0,build:function(){return x1}}]),j1.updateAPI()})()})();function be(l1,j1){return l1.split(j1).length-1}function F2(l1){const j1="humn";if(be(l1,j1)!==1)throw`Invalid quantity of variable '${humn}' in equation:
${l1}`;if(be(l1,"=")!==1)throw"Equation contains invalid number of equality operators '='";return l1=l1.replaceAll(j1,"x"),console.log(l1),_2.solve(l1,"x")}function D2(l1){return be(l1[0]," ")&&(l1[0]="( "+l1[0]+" )"),be(l1[2]," ")&&(l1[2]="( "+l1[2]+" )"),l1.join(" ")}function P2(l1,j1){if(j1&&(typeof l1.monkeyOne=="string"||typeof l1.monkeyTwo=="string"))return D2([l1.monkeyOne.toString(),l1.operator,l1.monkeyTwo.toString()]);if(l1.operator==="+")return l1.monkeyOne+l1.monkeyTwo;if(l1.operator==="-")return l1.monkeyOne-l1.monkeyTwo;if(l1.operator==="*")return l1.monkeyOne*l1.monkeyTwo;if(l1.operator==="/")return l1.monkeyOne/l1.monkeyTwo;throw`Operator ${l1.operator} not recognised!`}function _e(l1,j1){return typeof l1!="number"&&j1.hasOwnProperty(l1)?j1[l1]:l1}function k2(l1,j1,m,a){if(!m.hasOwnProperty(l1))return[];const y=m[l1];y.monkeyOne=_e(y.monkeyOne,j1),y.monkeyTwo=_e(y.monkeyTwo,j1);let h1=[];return typeof y.monkeyOne=="string"&&!(a&&y.monkeyOne.includes("humn"))&&h1.push(y.monkeyOne),typeof y.monkeyTwo=="string"&&!(a&&y.monkeyTwo.includes("humn"))&&h1.push(y.monkeyTwo),h1.length===0&&(j1[l1]=P2(y,a),delete m[l1]),h1}function x2(l1,j1){const m=new Object,a=new Object;for(const y of l1){const h1=y[0].replace(":","");if(y.length===4)a[h1]={id:h1,monkeyOne:y[1],monkeyTwo:y[3],operator:y[2]};else if(y.length===2)m[h1]=Number(y[1]);else throw`Unrecognised input line split by ' ': ${y}`}return j1&&(a.root.operator="=",m.humn="humn"),[m,a]}function Ze(l1,j1){j1===void 0&&(j1=!1);const[m,a]=x2(l1,j1),y=["root"];for(;;){if(y.length===0)throw"Found no items to solve! priorityQueue has zero length.";const h1=y[0],K0=k2(h1,m,a,j1);if(K0.length===0){if(y.shift(),h1==="root")break}else y.unshift(...K0)}return m.root}function Te(l1){return l1.trim().split(`
`).map(j1=>j1.split(" "))}function B2(l1){return Ze(l1)}function G2(l1){const j1=Ze(l1,!0);return console.log("equation",j1),F2(j1)}const V2=`gmjv: rsqf * ggnm
thqw: wrgw + btbz
cssw: smvr * gwbr
gmph: hzbv * pzws
wntv: lnmb * jnsq
brlc: gtvz * vdqp
cvpl: 5
mgpr: nnzl - gdwn
ttzs: 3
jblz: 17
lbbq: 5
btsb: 2
ljfd: 5
cfcz: 3
ltgh: 4
gtrz: cfvz * hgmz
hrgp: sdhc * vgbn
nzrs: 5
brct: wrrf / gprl
flrp: 14
zbhd: 2
grww: 9
wrrf: vhjq * lmfc
fptm: vgfc * nnsp
zrtb: flds * jqqd
lfqd: 9
bbvm: 3
pjtn: 8
dhmz: ffbd + tjhv
swlv: 2
trpq: 3
hzlv: vbqc * hdzb
hmph: bsbm + ldrm
wtww: svhg * fnrl
lwgq: slqh * ngpr
rgzq: cncm * zrtb
ttdr: jbzt + cvvw
shnz: jzlz + sgpd
shcz: 9
sfqr: pqgf / cdbn
wnrn: dqcc + vsts
wmnf: 1
brrp: 3
hcqg: 5
vfrt: 5
lwrd: tggv * mbqj
hfvd: 3
nrgs: cphz + bqfr
dmgt: fzsj * qllg
clts: qncj * jftp
dtdp: 7
qlmj: zrbr + zrdf
fphw: 3
dlbl: vzrw + mgjt
gqnh: 4
bcps: sqrg + mvbr
zvnl: vlbl - fvvt
jllr: 1
fmll: djrb * ghng
hdbn: lvqd + ncnb
ncdr: nzvd * mfth
rjqp: vcgg + rrbc
bqzm: vsrn / prps
dbbl: 2
rrjs: smln / sqtl
zbpn: 4
bwqg: 5
vllh: stlp - zslr
zbbc: zcwg * czqm
lcgq: 5
vlbl: rhjz + rttz
wdrq: 3
shfd: hsdc + ghpn
nvdr: sfqr + qlsw
stdm: qlwl * tfrz
mvhz: 3
nrln: jtms / nclw
tlrr: qqlq - ppbq
gngb: 2
jsnw: 3
fswl: mznr - mgcs
vfvh: zsps * zdnf
szmf: pgsd + jfwr
mrns: 18
wsqq: nmds * nltg
hssr: bzqm + jgcq
vvmg: 4
jmvc: rqch + zpjm
lmfc: 7
lprt: nrlh * pjpr
vrhb: vjhz * tdjv
rgtg: 5
nvhd: 12
mlzw: 3
ppvm: snpt * qsgf
qgbr: 3
nmqs: cfpz + dzrp
glvh: gvvd * pvsl
jnrr: pgpt * gwqz
bzlh: 2
zvmn: bggp + gqnh
cmhb: 13
mjmt: 2
vflt: tpqz + cgsr
gprd: 1
twtm: 5
gmlw: 4
vlwd: mjqq * mbdf
brhw: zqqp + lrfb
pmts: sqlb * fsvv
zwgn: 2
djmc: 4
nchs: 8
tptr: wgqr * tbnn
mnpf: zfwz - rmzc
mrvh: 2
bwpq: 5
gptz: srmm - tgsn
fntv: 7
jndg: 3
qftb: bfdj + fdsw
hlbj: 7
cfmf: zfhl * ldpr
mczw: 7
tffw: 3
twzn: 3
gdwn: jjtc + vwrh
rgmh: 2
jpvh: vsnb * tjrp
fmth: 11
tlcj: 2
rrqv: 2
cbnf: 3
vgbn: 4
zcgn: hmts * lfpv
tcbr: 2
blpc: flgg + rsts
hzwf: brhw * jndg
nzvh: fhml + bzhg
lhjz: thqw + sjtm
cznh: qrtt + jbqp
bhnh: 10
blfc: 8
rpvb: lbhc * gcrf
rzdq: dmch * jvww
fnrl: 8
shpg: 1
jfch: 2
vwwg: 2
lnmb: 3
zpwd: 6
fbfp: 3
cczh: zlvz * shnz
znsw: 4
gczv: 2
ccjj: 6
gfvv: 11
ftjj: 2
mhsd: 7
sqbc: wpvc * dlbv
wbcs: 2
scrq: 5
nqrt: 2
gvnf: srvt * rrnz
wgml: flpf + pbwg
cprf: zrlh + vphq
vspl: bvtw + jlzw
clhv: lcth * wmlq
wmtc: thjq * tprz
hgcz: zqhw / ldrd
qgwn: 2
whwz: wsqs * fnsg
vzcz: 1
vzgh: pvmd - brlc
shgz: 6
psjs: ljhl - jrqf
slzq: 4
cspn: 10
lwtf: 2
ccml: tclr - zbgz
ddtr: 2
pvqh: 3
vpbw: wrhl + lbjs
mbvw: lljg + fwnn
jlfc: 5
pzbd: hfbn * wtww
gcrh: 2
sfdn: 2
sfqs: vtmb + gfnt
zwnv: 4
tdpm: nsjt * bvdt
qhsb: fzdv + rvgt
cchn: rmdw * ctrt
zgvm: vjgw * gmmm
bnjd: rszg * rmvj
sjpz: 2
ctbp: 3
gpdb: jwfv * vflt
gmlp: 1
lnhd: 5
fcjd: 3
blhv: 1
zppr: 2
czdl: gqlh * fmzl
qwlm: gqhs + fnvg
dmrp: qrqb * zttc
qqcd: 4
mftt: wtcm * crfg
zrqp: gtrz / gnrl
wrhl: cssf + drhc
dpdm: 13
qrlm: drbc - mclh
mhqt: mvcw * jblz
lpdz: 11
vqcc: lmph + mmdr
pgwv: 5
dvpc: grjq * nbhv
mzpl: 7
ggfn: bchc + whqc
bpqz: jlqt + jvgs
hzhc: mlds * chdw
trql: 4
rlbt: 6
tggf: 2
pgjt: 5
gwpb: sznl * tpgr
nbch: 2
fbtq: qgbr * cqvn
gqhq: 4
lggd: 5
jvql: 5
tlwp: ntqq * ljpv
swtq: 6
lnlw: 3
tpnq: 2
nvcd: 1
qjwv: wrdp + rcqj
gmfc: 13
ctcd: 2
rncn: 4
ccjs: 5
jzbc: hvzw * zbpn
pvmd: blnb * rvfp
rnds: 5
pqgf: hbzv + fsmc
lbfm: rjfh * lmbg
bpmn: 3
hwjh: cchn * hcqg
jwrj: 14
zqhc: jttd * zvfn
mjhh: 4
tjtc: 3
lpmd: vgqq * nfmj
wttq: 3
dsml: 2
rdqz: zhqh * pndc
jcnv: 3
znms: 8
jrhg: 2
lhfd: tgjq * nvdr
lzbd: glwc / lwsv
dtdf: lggd + hfvz
sqdq: hhhc * bpbp
crmm: 2
root: bhft + pzqf
wpvc: lzjd + fspr
rzlz: spdj - jsnw
ghwh: zwcc - lhwz
qbhj: 9
bpbp: 3
cbzr: 5
crvb: 4
nshz: 2
dpjr: fjnf * dmbw
rttt: 5
cgrj: 5
bvdt: 7
zcbq: 5
lvdn: cghg + nwrh
gcvp: 3
jtvr: zgzh + ccjj
dwlm: 4
cclm: 3
cbpn: zvtm * qbql
ccgc: 11
ltwh: 5
sqsp: 2
nqzn: 2
slzl: 2
jnbj: 2
jsbf: vlwd + rrsg
wwfz: qdns + fgcw
smsj: vrhb / twnr
lsrs: jtbj * chtp
rcfz: 3
rvfp: zpqs + nsqj
tpcn: gbrs * rmgq
tjhv: 9
bqbm: 1
czqs: 3
wpss: mwrd + nfps
vscq: mwsl * ldnh
tbpw: nshf - vzcz
wrgj: bvds * vjcf
hfvz: 2
cqjl: hmhr + lmcc
hngq: 3
rnqw: rcfz * lvjj
rqff: 5
vjrb: mvhz * fvtt
fsvv: 3
bbrm: 3
sbbp: mbqs * mpsg
shsj: mhqr - lthv
flpf: 5
gdlb: 2
lrfb: mdnw * dsml
sbwq: 5
mwfs: 2
zzhp: blrl + zqfm
jsgt: 12
dfhd: 3
mdrs: 3
fdqh: 12
dcww: 5
hrvl: 2
humn: 4108
zhlq: 1
cjnn: 2
dhzd: dfrt + pdlh
hzbv: 2
rtws: sdpr * hhsb
gqhs: wvcr * tzzs
rsfs: 5
qdns: zqpw * twrd
gmvr: 3
rsts: lvnl * dwmq
hhcm: vwwg * wcsd
dwqp: 14
tvcj: mrdz * vdft
bnml: 5
thwj: ldzq * jjsg
tfrr: 20
jplr: btzh + bntj
bjdt: 2
rrtb: vdcn / hddh
dnrg: qbcj * pnbf
wdvj: 4
cpwb: 2
dwvj: twrz * bpmn
dwlh: 15
ntrd: 3
jbqf: hsvd * hdbr
tjsv: cgrj + qcqm
cssf: dcww * dsnd
dvzp: 2
qrrz: vnpq + rgzq
lmmd: bfjm * jwbw
sphd: vwhw * nnrm
zvtm: 5
grrs: bnsp / bwll
vnpq: qscw * dhwg
pbjp: tgss + rbzh
vhsc: bvwq * gjqr
bvtw: cnpz * dqww
sjtm: 15
djgp: rmgd + bdpv
tzsn: 3
hmtm: dpnp * lwnh
qfdc: jdfc * sjlh
pbdt: 4
cbtp: 3
msnj: 4
lpqs: 7
mhqr: jsws / nqzn
hgtm: 11
gmzs: 2
prst: 20
wcmb: cttj + bjlf
llzr: tpsh * gvrf
zjlf: 5
gfpl: fmth * ppzs
bwbs: 2
jcls: gcqd + vzbj
mfrc: 2
qcqb: hjdn * mfrc
njsb: mqnq + fblt
smgc: 4
qrtt: 12
zzsb: 4
hzvh: 2
qggg: wlmd * tcrn
ngpr: 5
hcvg: 3
zdbj: 2
rzlh: 11
wzfn: 6
brvs: wnvz * fwcc
gpnq: 5
lzfw: pbqf * wbsg
dzdt: pvcf * twsp
gzhl: 4
prpz: lqvz * bmtt
fgqt: ddtr * hlfm
tnpw: lbbv + jbqf
llst: bzps * vbwd
lfpv: rmvd + llrm
rlvq: 2
fvmw: ggfn * cjvd
wgtb: 2
gbpr: rsdj * pqmp
tjht: 2
tvwn: cmhr + zdmv
fspr: rtvb + wgvq
bjjz: qqhz + lswh
lcth: 18
dfdg: qnzb * fmcc
pdlh: 3
rbjm: 4
wqrc: 3
bldz: 12
sdhc: zhnf * vbdj
cblj: hlln * mhdm
cfzz: 7
lwzw: gpgg / jvrc
jllc: 2
qmdh: 5
tghz: 3
qlqn: 2
gvvd: 7
wblp: 4
bvcg: 2
dwzl: nbcw + bwpq
jptv: 3
jncr: 13
glwm: ztld + dzdv
ddts: 11
fznh: grbw * bbvm
wtlf: ccmr * vtvs
ljbv: lznj + lhzz
jczm: dmfn - lsmd
jtgb: 2
jsrp: 7
lwrv: cnzj + fjmm
wmsv: 3
brjr: 5
pwfg: mdwq + qggg
hqnl: zpwd * lrhz
zgzh: gsfl + jvql
gnvz: smrv / rdds
mvrf: 11
mvbv: 14
wndt: 4
lrhz: qwlm * tggf
swvv: zpzs * cmbw
tndq: pwfg / lzcs
vvlg: 10
vfhw: 3
zgwc: 2
zljq: 14
qpgp: 4
fsrn: 2
lszz: hhpn * gcgg
lzzs: 16
dchj: 2
vvlq: vhnh + nddl
qrbt: cssw + cfzz
thnp: ntrt + dmrp
fsvh: ffhq / ttzf
hlln: fsfq + cctv
mvcw: 4
jmff: 12
bdbv: pgmr * nvlg
ggbp: 2
zvgl: 8
nwnv: jhft + swvv
bbqw: 6
lljg: dfsv + jsjw
wrbm: jthw - tttt
gcrf: vmlv + jrtr
jnsq: 3
mmmn: 15
jggs: 3
tpqz: hhrf * zldc
jszm: vtjg + nmqs
bntj: 5
pbwg: rrtb / lccq
jhsw: hlbj * pfth
lbhc: 3
tzmp: 4
gdvl: 4
lvnl: 13
mblw: 2
bzdj: vrhr * qmjf
rjfh: rnfs + gmph
rfdw: qpvl * btsb
sqtl: 2
pcpd: 10
stqd: 4
pvqf: fpdw + mhvg
zcwg: 13
spqd: 6
njmw: 2
zlwt: 11
rptv: 2
qsbn: 4
hlnd: thcw * tbqd
dmbw: 3
blld: blhv + tqzd
zvfn: hgcz + mwmv
bvmh: 3
lmgr: vdpc - gvlc
dvrq: 7
bhps: 9
gqrh: 4
dgrp: czdl + mqrs
svhj: tbqg * qqqz
fvsm: rzhl + jpvh
wsss: 2
fcrz: nvhd * thnp
zqhw: lhfd - hzwf
crrl: bldz + gdvs
jvgs: 1
vpsq: 2
dfrt: trql * vlzq
pwbm: 2
cflw: frls + hjzb
fsfq: 3
blsp: 3
gqcp: ctbp * lhbv
gfdt: tlwj * mdrs
jdmz: 5
zcjg: 3
qbsp: 3
nlwc: zpwg + mjmt
bmtt: 4
rhmb: fdfq + jtcq
wwcz: glpm * vgsv
hsvd: hdmq + rdqz
jfzq: 4
wwhm: 5
mwsl: 4
pwwb: 2
ntwf: cfmc * nmdb
nrlr: qlpn * zcvr
szcl: tmgr + pglw
mpzb: 2
hjtg: 2
jmql: vpbw + llzr
tprz: tghz * wtlf
jttd: gcjm / mlhr
dnbn: 2
tqzd: hmbn * cdtn
lqbs: 6
pnhc: gsqq - pprj
tjrp: bbqw * bvmq
jtcq: 5
nlbn: 2
lwnh: 2
zzrm: 13
wcgn: 2
zsps: mbmh + rdmc
mlhr: 2
zvhq: nrnb * qmcv
ggbm: 7
rrrt: 2
fhbh: wcqq + znsd
mctr: wfwm / nbch
rmdw: hczq + gqhq
cvzm: 7
zjvm: 3
pzwd: 4
vgsb: prcv + mrvh
sdwq: wnqd * mvcf
fvfv: psjs / dnqq
jrwd: 10
bsvd: clhv * jrsf
njzz: npnp / vqzm
tdjv: 11
swwf: 3
rltc: 4
cnzj: 5
mddm: vpvc * wlpm
czhs: shqc + wpdb
nnsp: tdvt + dcbs
cnpz: 5
zqfm: 10
dtdg: 3
gdcg: 2
wbtc: jnzt - pzbd
cmdz: qfbn + pmft
drhc: cgvj + pwlm
tbqg: 2
qrbw: wfpr - nnjc
cdbn: 3
vqfv: 2
vphq: 4
tcgl: 2
hctg: tptr * tpcn
whqc: zrch / ngzn
ttdd: 14
mbqs: wvfz * fzpg
hdrn: mfhw + wbhw
csml: 12
ngfh: 3
rphg: 3
vlzc: gjbp * zmwf
vmvd: 6
flds: 11
vldm: 2
tjcb: 5
vfzl: 9
mbzd: 1
njhh: 8
ljcf: 11
sdtn: wqrc * bwbs
vrjn: 2
mmdr: 6
ghpn: sctq + bhnh
bzjr: spzl + hpbv
tshg: 2
jlzw: 8
gpqt: 2
bszc: 10
nqbh: 2
pbwq: bjzv * njhh
jtms: wsqq - rgtz
rqch: 12
tcqj: qtns / fsrn
vctt: 8
rsmt: 11
tplv: 2
jqhg: jtgb * fsqh
hfsv: 7
gwbr: vpsq + svzc
csqb: 4
mwmv: zjbz + dgtz
srhv: 3
tztp: 5
pgbv: 4
twnr: 2
vbmd: jllc * qnqj
jmnb: ndfj + drdg
rbhg: wzmf * tbgm
pccn: 14
crhv: 2
vqzm: 2
gcdt: nbtf * fgjm
bfdj: 12
sfph: dpfq + qcpt
qqhz: 3
jsws: wwcz + vtmg
lhjc: tncv * fdzg
bvds: fzpq + lsvp
twrz: 3
tstq: pgjt * tpss
jzhb: 8
tpgr: 4
ljhl: pdhg * pbdt
pnjn: hccb * tfpq
jrww: 5
rgrr: humn - hdgh
rnfs: gcdt + sbfp
zmwf: bwfj + pnzr
zvgs: dfzd / nlvd
zbrj: bnts / nlbn
bsdp: psnn * dhpv
qbgz: 18
bpfr: 2
cfbz: 5
rlzj: ncqw + mdzd
lwhj: pljv * bjdm
vfrr: fwmj + czrd
tsjw: msnj * scqj
pwqq: 2
fnwl: 7
hwrl: 3
vjns: 3
vwmv: wvfc * npjp
rwlm: qbvs * jppr
nmdt: 1
fwcc: vmml + blfc
jjnl: gzfd * jggs
lsqs: 11
mbts: tvwc + gmjv
zpst: bszc * nbwf
dsng: hwjs * pqzz
btfg: 4
vpzt: 17
gvzj: glvh + lzzs
sjdm: 4
przq: zpft * qmgq
nndt: 3
mnpc: 1
vzqw: 5
dbct: ccdd + pznh
hwqp: wgtb * mzpl
whwt: wrgj - fznh
hchd: dsng * vlcq
tzfl: 4
fgnt: 2
dmfn: vjwv * tlfg
vsrn: wlcd * hwhr
wjjs: zqhf + hzlv
pnlp: 3
jjmz: 12
jzlz: 2
pvsl: 3
svzc: wlbb + dlmf
rnrl: 7
rmqn: 2
jpvn: mztd * bcqp
tqsj: ppvm - srch
czqm: 14
nznl: 3
cvgl: nbpp * fssz
wtcn: crpz + mttp
wrgw: lwrd * slzl
fpvr: bgtw / jfch
tbft: gdzz - wbrq
cgwz: 2
spnt: bmmv + bnpt
rvgt: 13
nzvd: 7
nwrh: rwlm + lhjz
wtlj: 4
zswv: 3
zcsc: 2
fqcs: lwsg + dtrt
cvrl: 20
csmc: 5
jvrc: 2
vnvb: 3
gmqr: 3
sdcw: ffpz + smwb
chdw: 5
hhdg: 2
zzgl: 2
rrdg: 7
wwqz: 2
grjq: 3
twcz: 5
qmcv: 4
hmjd: ttdw - sdtn
rbqj: nqwq + djzd
bjzv: lprt * rlvq
wvbf: lbbq * frbs
cnhj: 2
bfjf: 1
wnbt: 12
lfvz: sbbp + wmtc
ttqr: hdrn / ltff
vnpt: 5
pfzm: 4
snzm: 1
tjgd: 2
rldj: 3
cdjq: bbvd + stpt
bcwl: gprb * crwv
fzpg: jrfc + hmtr
gvrf: 2
nfmj: 3
jqgf: qrbw / wwml
drlc: znqw * rtzf
nrlh: 3
vfvv: 7
gncs: 15
bpmd: mdbv + nnlt
cjcs: tqsj - lbrq
jqpd: 3
clfm: 3
mfth: 3
pgsd: ccml * zmzj
dtwg: wcnr + tcjz
chnh: 3
rvfs: vnvb * zrmn
vjsz: tdnn * bvcg
zdjc: rbhg + ntbm
lmcs: jlhd + qjwv
vjgv: 9
zvmq: 4
wdnn: ppbv + jncw
btbz: nshz * swwf
gwlw: ttqr * lqmf
bfjm: qtlq * hllg
zbhg: 4
snwv: rvfs + rsrp
dzpg: 3
stlp: mhhd * zvmq
qdpw: qlcr * hwnf
rlth: 3
tqfs: hjtq + dqjc
hcqv: 2
cfvc: 8
ghfg: 18
lpfh: gnml + grww
bhft: jczm * hrjc
bncf: twll * cvrl
hfrm: wpsz + cmdz
pmjw: 5
fdzg: rlbt + cczh
lqvz: rvhh + mqcm
rmvd: 7
mzpv: 4
tspb: 1
wrbw: qcfz + hpmv
qlpl: 2
vlzq: 2
crpz: 8
mjqq: 5
lmqd: 2
zgzr: mbws * jmql
dlmr: 18
ctjn: 3
vzws: 3
dzdv: 1
nnlt: tbpw * wwjg
rrnz: 4
tjsz: wfqw / wlbs
mnqf: mjvc * lpcz
jnzt: bbmb * bjdt
twzs: 3
bqrp: 3
vjcf: 9
dhww: mhjm + nnvj
wpsz: 3
bjlf: 20
ppzs: 3
jlzq: bhjq - mcvf
fnpn: szrs * lnhd
dlmf: 4
lvjz: 2
jcgt: 2
qzjs: qtgv - qcrh
ttjn: lrcz * nqbh
zbgz: qsbn + jccl
gfgg: 8
sjlh: 19
qbcj: 4
gfhw: vpcn + rrbm
glwc: jhnn / ldfn
pjgl: jpvn + tztp
jbzt: htft + wrlz
jwbw: 3
gpmd: 2
zpft: jncr - bpfr
gdfn: 5
sghd: 15
vjdm: bbpn * lwgq
lthv: dppw + fflc
ldcm: 1
bsfl: gwlw / wzfn
gcjm: znms * nndt
hlfm: qhhh + ccqc
rlgt: rchs + wcgn
vcgs: tlvz / vtvv
brpj: 19
spng: plln * gpmd
mgcs: bqdn * gnrc
vfsw: ctqf + tzng
wgvp: 2
fvst: dbqz * dpdm
tbts: gczv * pcdr
dgvz: 5
rszg: flrp + zcjg
ghhv: gqcm + bsdp
srcr: 11
qcpg: 11
mnhg: 2
ltjn: 3
jmpb: jsbf * zjlf
fbvl: ljfd + gqqv
jdfc: 3
ffbd: gsbv * mjtg
czbr: 2
fchb: 2
mqnb: gcqm * jbps
wjrm: 2
qqln: 2
scqj: 2
wfml: 3
jdhd: dvrg * rsmt
rntb: 5
zpzs: lwwh * gmqr
pndc: 17
wcsd: drqq + vchd
tpss: 5
lhdc: 11
pfdz: vgsb + fhfm
cfpz: mjfd * hlnd
nvvv: rmpf / spwp
tspf: 4
tbgm: rddf * dlvs
bthq: 11
qrdn: 2
pprj: 6
ccdd: 2
lrcz: 4
qzcl: 13
vdqp: rlqs + tptv
lsmd: dqhr / lnlw
vcgp: 6
vplz: vzlp + tfrr
lwzv: 12
fgbb: 2
fsgt: 2
mfhw: jmtj * zbrj
zrmn: 2
gcrj: 7
bnch: 3
dlpj: vzgm * jlgg
hpbv: mrns * fbfp
zhnf: 3
lvmq: qcqb + rqws
lqmf: 3
ncqd: 1
gjqh: wpss + hgnv
hjzb: dfvm * fnbc
ggnm: 5
rmgd: tjgd * cqqq
crpc: dwqp + mcfl
szdr: 3
wqfs: 3
tdnn: hngq * bpmd
ccmr: 3
pnbf: crrl - lvmq
fhml: lzjt + fcpq
qghw: 3
zpjm: 16
ltnb: 11
sswr: djqt * lggf
ljtj: zzvg + fhzd
hhwm: 16
wrzb: 1
zpqs: twtq - nfwm
htnj: 2
snnw: qgnc * gmzs
tzzm: 2
tlfb: 2
dnjd: zppr * sqsh
tgjq: 3
hjtq: 2
hzmn: hcvg * gwms
bgnv: 15
zrvz: zdjc + psft
tzzs: ghwh + grrs
gcqm: jzhb + wpcd
wlcd: fvgw + rszl
bqjd: 2
bssl: fsgt * mzsg
tlwj: hcqv * tzfl
tlrt: 1
fnvg: cdjq * jmlf
bbhv: rbrq * bzlh
mjtg: 2
pdcf: vllh / gmlw
jmpd: 3
nltm: 2
fnsg: vfvv * dtdp
hmts: 7
jtbj: zzvv + nbnq
fssz: dlpj + snzm
hhrf: 2
bwsm: mnhg * cntl
bwpb: hssr + ttsl
drbc: 20
mdrz: gpnq * vqcc
crfg: vblv - dhmz
vjhz: 2
vjjh: zlzc + fptm
vsnt: 2
spdj: dmqh * tlwb
jqqd: csml + mnpc
gwdj: nrlf * lzbn
cdrd: mczw * mhsd
hdmq: dgvq * qsvq
prwt: grwj * fdtf
cpbc: 19
drbt: 3
nmnw: shfd + slcd
mhhd: fvfv + prqs
fbsh: 6
wgvq: 5
jfpw: ttdd + fqcq
bbcq: cgcj * ltfr
dmdf: zgbw * zwgn
qmwg: 4
zqqp: bzjz / gcrh
hwjw: jvvw - lwrv
slmf: 10
vgsv: qhqf + tffq
rzsr: tnpw - vlzc
vtmb: mdqt * lhjc
drpt: 4
lntn: 5
bbvd: rlzj * mwpb
lzjt: 14
wwml: 3
wfwm: mczt * vpdp
nbpp: 3
lcnp: 2
nhwl: fnfq + jtvr
tncv: tzws + tspb
ttzm: 1
mbmh: 12
zqjh: 11
hdmr: fmll + wmgv
ldzq: vcgs - ncqd
jcrn: dvpc + pnjn
spzl: stch - rrjs
hbdl: gbnp * pnlp
rbzh: lrqw * dzlv
lrwm: srhv * smgc
mzsg: 3
bzhg: 16
prcv: 9
blrl: 7
srhm: 2
gmnz: 8
hhpn: 5
dbqz: 2
hbzv: lwhj * wssr
nvmz: 7
rlws: gncs * rzgt
zvcf: 1
bpzn: 3
qgff: 2
crch: ldsd / lwtf
nflq: pvbv * zqjh
rmzc: wnwg + jjmz
gnbw: 2
qhqf: zgzv * pcgl
gnrp: nbcm + gcvp
bmrj: 3
nfgg: rqvb * smlz
bbmb: gdft + zqhc
fbfs: svmh * cwgt
grfw: czhs * rsjd
bdpv: 1
qwmn: gbpr * cnhj
cmbw: vjns * qghw
qtgv: nlvw * zghw
qbjs: cdrd + qhdv
tdpp: 3
gbdq: rfrm + gprd
ltwt: jcrp * rwwp
rwpr: zljq + szcl
mrsg: ddts * fwcp
cmfn: 8
cjns: 3
dcbs: fvqh + rfdd
bdsm: 1
drwr: 8
ttdw: jlqn / pfsn
fqnp: dhzd - mwfs
pwqw: fhbh + prcl
ldnh: 2
fvqh: vjgv + pchg
pbpt: 3
hnnj: 2
gzfd: 2
vfbm: 3
fltn: cwch + wnbt
zbsf: 17
hmtr: qbcp * ptvm
ffzn: przq * dbvb
lmcc: zcdc * mdrz
hvzw: 2
ldrm: ncnv / jdvn
mgjq: 2
bpbn: 10
dwmq: 3
slcd: lmwq + sjtg
ssjs: pqvs * chnh
njhf: hqjj * hnzw
tfwq: 2
flwg: 4
cfmc: jwzn + nbnf
fgzs: szrc * rmcd
hddh: 2
tptv: ncdr + dqtm
tclr: bfhf + gfdt
dqjc: 5
dlnb: 1
tcjz: zdcr + hzvq
smhd: 16
wsqs: 2
zzlg: zjlp * lgwj
tffq: vgvg / spgr
rdds: 2
jjtc: pvnb * fcjd
dsnd: 9
fdfq: njhf * bnmz
hpqs: bmlv * vqfv
zcjd: 2
shpr: vvmg * rmqn
pzws: bztq + rgwq
pdjz: jlrt * mtzp
vzlp: rlth + lfvn
mhzs: rwjd + ztvz
wtcm: 3
zqhf: 5
bnpt: zbbc + cfmf
mdnw: qbsp * vcfz
gnrl: 4
fqcq: 14
zglh: rphg * fsfp
pfbs: gwmh * gqcp
qgnc: dshh + crpc
rszl: whnc * brjr
wpcd: 5
dgvq: 3
nghd: nmwj * twzs
vzrw: 1
ltff: 2
sfhp: zzgl + vjzl
cbwq: 3
vtjg: rgrr * zbhg
gsbv: 11
vblv: pbcm * jsgt
fzsj: mmmn + hfss
rsdj: 3
ttzf: 2
lwsg: shgz + twcz
bqfr: glwm * jcmp
fqqr: lcnp * dhww
gwmh: 8
rjnl: 4
zlzc: 17
zfwz: jgzj * jcgt
fdbc: 17
ndhg: 14
hnwq: 10
lpwb: 2
rztq: lzbd + dzht
nlls: bncf + hdfr
szrs: 4
rddf: 2
tsfp: brrp + cwnq
lmph: 1
blnp: 3
nqwq: 14
lhwz: vznl + pjrv
qbfc: rchz + vfzl
stvr: 2
dvjv: 5
sjrv: sdwq * tvdn
phcg: 7
qhwc: jfjv + lvnb
dfsv: bnch * qrhm
jlrt: jvmn * lqmg
nhzc: 13
nbnq: 14
mqcm: 9
vrpl: 5
twrd: pmhb * rbqj
lswh: 10
ghng: bcwl + jcrn
hpwh: 6
rlqs: hmgd * fcgf
gqlh: 2
lbct: jlfc * hnnj
zgzv: dnrg - hffd
nqvw: 2
bhns: 1
szmp: ffzn / vrjn
hwjs: 3
tttj: vtbm + fdqh
djzd: qbjd + hgzf
qnqj: dnjd / wbcs
clct: jsmj + mvqw
twsp: bbcq + gscg
zshv: 7
zfhl: njpz * nlls
rlzb: 3
nfwm: 3
dzlv: 5
ftgz: mmgj + gmnz
hccb: 5
dhpq: 2
tsmn: 7
rgwq: 17
gdft: qrrz + swrh
dbms: 3
vfgh: 3
hzbp: mrsg + dwcl
snpt: 5
bbpn: twzn * dmdf
swgp: mnhf * jzhn
hcch: 3
gnrc: glcd * rnrl
pmft: 4
wwjg: snnw / ggbp
sbdq: vfrt * dzdt
nclw: 4
gfjh: bslb / bgvw
czdw: 5
dfvm: 5
tlfg: cqjl * dbbl
dmqh: 2
pbwz: szmf + mbts
gwfr: whtg * dvrq
vdlh: 2
prps: 7
mbct: bssl + vvln
gdcs: qwsj + hzbq
rwsl: 2
zqdh: dtwg - mbqm
ngzn: hcch + wqjn
hqjp: tdcl * rhtm
svht: qhsb - lvhf
ccqc: fgzs / zvgl
qnvv: 2
nsjt: 4
qncj: 16
zmgc: 8
cvtd: jszm / blld
gqqv: hwqp * wvct
bjdm: 13
jfmb: 11
hwnf: 4
qpzt: 4
gnml: 1
szpd: brzz - hzpl
vdzw: 3
pbcm: 10
sbfp: rjng * dzgh
vhnh: 18
znqw: 2
hthq: 2
ddwj: 11
jnzv: 2
hdfr: qqcd + pbbp
fljh: 3
ldpr: 3
wbhw: hctg + hpsd
bngq: tvwn + ljtj
gptw: qnwg - vzqw
jhnn: drpr * lpdz
ntbh: slmf + ldcm
dqww: 5
bvnp: vfhw * lwtq
wqjn: 4
zzvv: 8
ttsl: jdrv * bmhh
zzvg: gpdb + vtgr
ntqq: 14
qpvl: 5
lfvn: wrgb * thdq
mbhm: fglm + rzpl
rmcd: 16
dqcc: 2
jrtr: 1
tvwc: whwz * cflw
rlqm: ggsw * bfvz
gffq: 2
jppr: brsr * cldp
smvr: 3
dtdq: 5
jfwr: bsvd + vjsz
vgwc: 4
fcpq: pnjr + fnpn
dtvg: 5
zwcc: hzbp + lfjv
vrgt: 5
wbrq: wmfq * nrtq
szzl: qmqr + nqfd
clqw: lztt + clct
ttgt: 4
zpmr: 3
swvm: hnnd * mhqt
hwnc: 1
cgcj: 2
zrdf: wvfh + hbrp
mbdf: cbwq * lvjz
ldrd: 3
dbbj: wgmd / lmzm
cbrg: cblc * vdzw
wmfq: 12
nlvw: 10
pjpr: 3
dlvs: tjjp + lqbs
tbnn: 3
bnmf: pjtn + pjgl
vtmg: smwf + tbft
jdvn: 5
zhqh: tjfz / zmjf
rqfd: bdvf * wffc
jlqn: mjgd + dwzl
wjww: 2
bzqm: hgwj * hjtg
fzdv: prpz + fqcs
rhjl: 3
zjqq: pccn / lwss
bmmv: 12
nbnf: 1
cmbl: gdfn + shpr
vlcq: jztn / pzwd
fwcp: 7
mzfp: jhqp * bsfl
fwnn: vgwc * hpwh
slfq: tgjf * fbtn
vtvs: 17
mgjt: lshm + pbpt
vrqj: 6
mwrd: scdb + phcg
shpq: 7
mzqf: vfbm * wmsv
cccs: nchs + rwsg
nrrl: 2
vzjs: sqbc - bpcq
whtg: 2
dmch: 2
phlt: hbdl + svtt
nprv: fgnt * cbnf
cqzv: qrvm * zwnv
hmhr: jnrr - wwfz
mjfd: 2
jhft: hzmn * zgwc
qbvs: 11
msfq: cdfq + bzjr
ndfj: ghfg + qftb
hntj: 4
qtdq: ttjn * lfvz
pdjf: prwt * tplv
cvvw: 3
bzbf: 4
mlvq: 5
pqvs: 4
rcms: blnp + hjdm
lbjs: nhnc * hstn
mdzd: grdc + gzzc
zcdc: gnql * rzsr
gdvs: ttpb * pcwg
sjtv: 2
qbql: 7
tlwb: rlsp + dgmz
pgmr: 5
qnwg: tlgf / bdpp
jmfd: stvr * jdlb
tgss: 1
pspt: zglb + pfbs
tdvt: 15
nfmz: 2
ztzq: vjjh - hrgp
lgwj: sswr + pdmb
hllg: 4
tfrz: 2
frbs: 5
zmjf: 2
zgbw: 4
hmnh: pzls * dzjs
mbws: lzfw + hqnl
fllv: zgmf * sshb
vrhr: wrbw + gmlp
mdvs: 5
nhws: jrhg * ntbh
dmwp: jmnb * lpwb
wvct: 3
nnjc: 9
bfhf: mcfz * cbtp
wzbc: rztq * blnc
hgsc: wblp + twvs
zbwq: 3
rqvb: rffr * bqrp
lztt: fvst * lvvd
gbnp: 3
ctqf: bpqz * cfcz
lvvm: cjlh - wpgh
vslq: 3
dwcl: jdhd + jsrp
rbrq: hpqs + shcz
fzcc: 1
tbpd: prst * sbnv
shqq: pwqw * chmt
pqzz: 3
vcgg: jqhv + rfdw
fvbl: 4
jzdf: mtzj * pspt
fflc: rntb * qbfc
mcpl: srhm * bnmf
glrd: jpmd * jzgw
lpcz: 5
hgzf: gvnf + gfgg
jhqp: 2
ntqh: 2
fdsw: 1
cwwm: 3
jrsf: fbtq + fchb
rpjj: 2
wbsg: pdbt + pbwz
sgpd: 5
lrgh: vdrw * bqpb
dmgl: pnbd + wcrl
wvrf: 7
twvs: 3
bcmj: 5
fsnn: szpd + vhmg
clpb: qrpf * cjnn
mmdn: 3
gvlc: 2
hpmv: dvsm * hzvh
fnnl: slfq * qpzt
cllm: 6
dzcv: nzrs + hbwp
hhwn: 5
lzpv: 3
blnb: 9
gscg: mnpf + tdpm
stpt: ccgc * rlgt
mgbw: hmtm - fgnm
zplz: 2
hwgd: llcj * qmwg
ttcp: blsp * cmhb
rhjz: dtdq * qlhn
lzcs: 2
bnwq: bcmj * wqnz
qqlq: cvgl * tdsn
dwps: 17
pcdr: zlwt + mcpl
vgmj: gdwv * szcw
hfss: mlvm * rrdg
ncnb: zzrm + vzds
lsvp: vmvd * vvlq
ldfn: 2
zgmt: zmdm * pbsg
zwbs: bgbf + bmvd
wqnz: rpjv * mjhh
vlqf: 3
nvft: bhps + hhcm
bnts: dgrp * fgbb
hhhc: dwlm + mlvq
qbcp: zvnl / qnvv
mttp: 3
jbvt: htpz * wtlj
smwb: 8
nnvq: jmpb * pwwb
djnw: pbjp * dqgg
pvnb: 3
vqgw: dhpq * gjng
pfth: 4
rfmw: qhwc / czqq
tbqd: 13
bnvb: bvqb * snwv
bqvc: 2
vbdj: 2
tmgr: 2
sctq: 13
hmwn: 5
pdbt: bzdj * vsps
lwsv: 2
gssn: 7
ndbg: blpc * cslb
lmwq: zjvm * vrpl
hgwj: lsch + qjlf
fblt: 3
vpdp: tspf + jqgf
rmlj: 7
fjnf: vhtc * rnds
vmlv: 5
gzzc: hmjd * tlcj
bgbz: rrrt * szdr
vlbt: 18
bqpb: 7
fnwq: sjpz + tjrr
rzzn: 9
nhgf: 2
qjmp: sqdq - cmfn
wtvq: crtz * wdvj
lsch: tcqj * tjht
jdlb: 11
njpz: 5
fvvl: bzpz / jnzv
bcqp: 3
mwzw: 1
mcvm: rqff + qscq
bdpp: 2
jfjv: qpgp + brpj
rzpl: 1
mbqj: cfbz + snsr
blhj: gfvv * vlqf
srch: 19
rgtz: vffr * hdbn
vdcn: shqq * djmc
fvvt: zcsc * lvdn
wnqd: 2
smrv: zqdh * qrdn
ghfr: zdwp / gpqt
lhzz: 2
jftp: 8
pnwj: btws + rjnl
bvcb: fpzw + hqjp
tjjp: pfzm + vspl
fhzd: rqmm * bjjz
jgzj: ghhv / gqrh
hcdd: cprf * wgps
tdcl: sfhp + jdmz
btwn: vfvh + lfbv
wznm: whwt / ndcj
plbl: 14
sbnj: 10
dppw: qrbt + vfrr
sjzd: bnwq + pdcf
rrcm: 2
bcnz: 1
jrlq: ztzb / tzzm
nbzp: lbct + cmbl
ffpz: zgmt + bcnz
fhdn: dfdg + fbvl
jsjw: qfdc + jhsw
ljpv: 2
pqmp: 2
wsrj: 6
vjgw: gngb * dlbl
rnzl: 2
zfsb: 5
bzpz: mbsh + vzgh
dfqf: mmdn * zllq
mhjm: 4
wmgv: 10
vrrv: 2
vhmg: nprv + svht
jlvm: bbgq * sjzd
spgr: 5
lvqd: llst / mgjq
nnjb: jcnv * cpwb
pglw: bjhj * lvvm
qbbm: lmmd / qvdc
lbrq: cznh - hmwn
lbbv: lpqs * sldf
ltfr: dfbp * mblw
nnzl: bbhv * dbct
lpjg: phlj * rhmm
trmb: 2
czrd: zhtv * ntqh
gdzz: qdpw / tshg
vchd: 6
mqnq: 16
bdbq: wwhc + hchd
lggf: vcgp + mpql
tzwg: 2
ztld: zbwq * djjf
rfdd: mlzw * lfnl
qmgq: 2
vswj: vvlg + pnwj
ndcj: 3
wrgb: 2
zcvr: vrgt * rgtg
pzqf: zgzr * gccz
tgsn: 1
gjqr: ttzm + gjqh
hdgh: sjrv + ngzj
bjhj: 3
zhqs: tsmn * zswv
rqmm: 13
qcrh: ndhg + zvgs
jhbm: 4
lrpv: 2
vgqq: 18
rfrm: gmpb * rsfs
dpnp: hcdd + jlvm
bchc: qbcs * tlrr
cdpf: 5
mvcf: 7
gsfl: btfg * qqln
pljv: 4
rtzf: smsj + sgph
tlvz: cnrc + mtsw
fwmj: dfhd * tsfp
mjmr: rnqw - ltjn
tnlh: 2
nshf: 8
wpnq: 5
qlwl: 6
cfjw: 4
lvnb: fdbc * rgmh
nddl: jrzq + qgwn
mdwz: 3
sbnv: 2
mhdm: 2
cqvn: gptw + bhns
spwp: jrmq / fdns
gprl: wsrj + bfjf
cwgt: zvhq + dwlh
mftj: 11
rtvb: dnhj * cspn
ltqz: wztg + ghfr
zjlp: 2
jpmd: 5
njnz: 2
pcwg: 5
hllm: 7
jlhd: jzqg * sphd
gmpb: jjnl + jzbc
pnzr: rwpr * mbct
rsjd: 2
mmbp: 2
qsgf: nvvv - swtq
zfzd: zhlq + ggsz
wfpr: lspc * cnfn
bbgq: 2
cctv: 8
qwsj: 8
wlbb: 7
bslb: vrrv * vzbr
wzgj: 12
sqrg: 2
vsps: wzbc / tnlh
shqc: dfwg * qgff
qllg: 2
swrh: mqnb * cclm
wlbs: 3
zgmf: tbpd + dpjr
nqhr: 11
nbcw: fnwq + dzrs
dldr: 3
hzpl: 18
rcdl: 2
psnn: 13
lfjv: 4
gtng: dmgl - tlwp
nzfl: vfng * rrcm
hmbn: 2
wcrl: mmbp * qlmj
jbpl: ztps * lrgh
lmzm: 2
rsrp: 1
jlww: mwzw + sfgg
vzbr: lrwm + nvft
jbps: 5
qhdv: gwcn * nbfj
tzqs: 2
bvwq: 3
wlmd: dzcv + pdjz
nfps: ctjn * ggbm
rwjd: dwvj * grmj
gwcn: gnbw + nlwc
ntbm: fqhw * gptz
hpcn: 3
htft: 2
fsmc: qwqw + dmbq
jrfc: sgvs + nrlr
jvtz: lfqd * ctcd
gwwl: 20
ghzz: 4
rmpf: nwnv + ttdr
pfsn: 2
hsdc: pgbv * gwdj
gjnq: 4
jrzq: 9
btws: tsjw + qhcd
gsqq: dtdf * fntv
jvww: 4
dnhj: nznl * dbms
qnmr: 3
twtq: drlc + fljh
sqlb: 17
zlvz: 5
bvqb: 3
dtnd: wpnq * qmdh
hpsd: mftt + rtws
hhsb: jbpl - pvqf
bdvf: qbsw + nbwc
fncl: 2
cjvd: htnj * gmvr
srmm: 8
bzps: 2
gwms: jdfd + tzmp
fsmm: zshv * wgfl
phlj: zwbs * clfm
hstn: 6
rlsp: 1
gjbp: 5
fpdw: 18
fgjm: hmph + qslh
prcl: tjsv * tzwg
mcfz: 11
qrqb: 2
zglb: shpq + nnjb
smln: tzqs * sfph
vvln: 7
pwlm: rbcv + cbrg
jqzd: 3
vtgh: vnpt * tstq
mrdz: zgvm + rlws
pmbr: shsj / hhdg
fgwq: tlrt + vdml
qfbn: 12
sgph: 2
vqcg: 3
jzqg: cvpl * gffq
dfzd: vpzt * qbbm
qcpt: gfjh * qlqn
bfbt: 5
pqls: pwcc + rhmb
qhcd: 10
zmzj: dtdg * pqls
sthz: 3
vmgt: vbbj * vtgh
vtbm: lsqs + gfrc
zlcl: dpsr * tlfb
dzqz: btwn + zmgc
jvvw: tspv * qdpf
hgmz: 4
pnjr: jqhg + rzlz
csgr: fdgc + jsfl
frls: tlqf + mhrt
qcll: 8
vtfb: bpzn * ndvf
bnsp: gnvz * tfwq
bgtw: jqzv + fgqt
zdnf: 3
ltvw: zpmr * mdwz
hzbq: 7
cmdf: drwr * qzcl
qhhh: hhwn * drbt
qbjd: pcpd + rzlh
phvt: 3
gccz: nvcd + jmfd
bfvz: 3
dzgh: 2
nsqj: rmlr * wfcl
rmlr: 7
nmwj: zrgc / rttt
gdql: bnvb + gpqh
gslh: qrlm * wqfs
zldc: 3
vffr: 20
fcgf: 2
zczv: psvn * hwpc
cphz: czbr + mddm
zdwp: nqrt * jfpw
fqgh: 2
msnm: zdbj + lntn
wwhc: wnrn * hpcn
fqng: bpsr + jhpl
bscw: cccs * sfdn
jwfv: 17
zpwg: sthz * zrnv
zbhf: 13
ndvf: 7
hjdm: spqd + njnz
gvsp: csqb * clbs
pcgl: 2
dgtz: sjdm + vdlh
zgms: 1
rchs: 5
bmvd: 4
tbzz: 2
qlcr: hscp + zcgn
cfvz: cbpn / scrq
wvcr: zglh / ntrd
scdb: mzpv + zcjd
crwq: hwjh - grfw
cncm: 2
tccm: 2
dpsr: nmnw * tvdc
sfgd: 8
zczm: zvcf + nfgg
nbfj: 4
bztq: zmhj * svvg
wfcl: vrqj * ttgt
dbvb: swgp - hqdd
sttg: 4
pvcf: tcbr + twtm
jncw: tzsn * nqvw
fgcw: tvcj * tzjf
hvtz: 3
zdmv: cwwm * nbzp
wqmg: ppff * vqcg
grbw: 7
rdmc: 1
hffd: jcls / gdcg
mcvf: 2
scjl: clqw - wvbf
vdml: bjcw * fsvh
vsgz: flwg * sdfv
nbtf: 2
qmmq: jnbj * wfml
gfnt: wbtc / qcll
mtzj: 4
sjtg: zbsf * lcgq
mcfl: hwrl * lvqj
vhtc: 7
dgfs: 2
zrlh: 3
cldp: 3
bzjz: cpbc * dnbn
pbqf: gqnj + wtvq
cdtn: 3
qlhn: hftq + mbhm
blnc: ghzz + rncn
qhvw: 3
czqq: 3
hbdz: stbs * rqfd
mtsw: 5
nrwc: 17
hczq: gwwl + tjcb
qdcb: qzjs * stdm
hnnd: 8
hwpc: 4
tggv: 2
lqmg: 11
dfwg: 4
pdmb: clpb / bwqg
mhvg: hgsc * rzcq
ncnv: gdlb * gdcs
thjn: 3
lvhf: ftgz - nrwc
bpsr: fvsm / dvjv
smwf: mzjm + zczv
wvfz: 2
jjsg: dvhm + jhbm
hzvq: hfrm * hllm
szcw: 2
qwdr: 7
qjlf: 5
npnp: bptz + swvm
dfnf: 2
ctbf: nzfl * bvcb
rhmm: 2
qrpf: 20
vbbj: ztzq + wrbm
zrnv: 3
wdsh: zzlg - vrtq
smlz: 3
lprj: 4
gwqz: qdcz + bngq
crtz: cfwh + pdjf
pbsg: 7
zttc: 5
hdzb: mftj * bqjd
nqfd: shdh * zrqp
qgnq: 11
djjf: 2
fqhw: svhj + csgr
pchg: njmw + vctt
tvdc: 2
jjtq: lsrs + mnqf
wmlq: 3
ptjq: 5
dqhr: szhd + spnt
mztd: pmjw * fncl
ppzj: 3
nrrr: 2
jdrv: 8
wvfh: pvqh * dzpg
bnmz: 2
vwrh: crvb * rmlj
gpqh: djnw + brvs
svmh: 3
gdfg: 3
fjmm: 2
wssr: dbbj / wgvp
bmhh: 11
mjgd: nchl * sfgd
wnbl: ndbg / bhtp
zghw: 10
rzhl: crmm * vplz
mlds: 5
vtgr: fpvr + bnjd
ggsz: cdpf + shpg
drdg: fqgh * qbjs
vdpc: wvrf + bgnv
dpsh: 5
qrvm: 2
qqmn: gmfc + mbdz
mzjm: vnqh * zczm
bggp: zcbq + swlv
cntl: rpjj + vjrb
qcqm: 2
jwzn: gnrp * vsnt
zslr: jzdf * nhgf
qbtw: 1
vtvv: 4
mlvm: 14
qmqr: nzvh * bbrm
sqsh: gvzj + stqd
rbcv: 3
tttt: 3
djrb: 3
qrhm: lszz / ltwh
lzbn: 2
rzcq: 5
jmtj: lwzw * gssn
fglm: gtng * wdrq
jghm: 2
qnmd: ghfw * zzhp
lfnl: 3
hgnv: ltqz + jrwd
ttpb: 3
zrbr: trpq * hhwm
rhtm: 3
wffc: 2
fgnm: jqbw * dgfs
gcqd: spng + nwzl
brzz: vhsc / bvmh
zdcr: dldr * wnmg
dzrp: qqmn * hrvl
llrm: rzdq * vfgh
chmt: 3
bpnq: lvbn + wnbl
qsvq: jplr * trmb
glpm: 3
hscp: rcdl * gbdq
cfwh: 5
cdfq: zlcl / lntb
mwpb: 13
gqnj: rjqp * sbwq
ngzj: lpjg + hcqb
rqjg: nzjz + hmnh
zqpw: rhjl * lmcs
mqrs: jmvc + srcr
pmhb: 2
nrnb: 7
fsqh: 5
sdpr: 17
vwrp: qtdq - lbfm
hwhr: 7
hmgd: 11
mnhf: 7
sznl: 4
cjlh: hwgd + ljcf
hqdd: zjts * dtlr
tlqz: hbdz - vtfb
rjng: rpvb + dtnd
vsnb: cvtd - njzz
lccq: 3
jqzv: tjtc * smhd
wztg: lwzv * nrrl
lspc: rldj * ptjq
dgmz: wnwp * wsss
gprb: 9
flgg: 2
rwwp: tcnd + fqnp
cgsr: 1
vnqh: phlt + ssjs
qlsw: nnvq + nflq
mgzn: grfz * fphw
gtpg: 2
qtns: gtpg * brct
jgrv: 3
jqhv: 16
plln: nmdt + hptt
wrdp: wwhm * hgtm
twll: 2
jbqp: 8
qjcr: fqqr + qbtw
wpdb: bvnp * hftp
rppv: 5
dzrs: 2
qslh: jptv * bbcb
vwhw: 2
bgbf: 3
fdtf: 3
dzjs: 2
jrqf: sqsp * dmgt
mvbr: 8
pvbv: 4
gtvz: 3
vpvc: 3
ffhq: qmmq + ttmt
zhtv: cjcs + nhws
fdgc: bfbt + zgms
vjzl: 6
qlpn: hqww + wmnf
dnqq: 4
qdpf: msnm * dpsh
wnwg: 11
pjrv: 4
qcfz: czqs * gzhl
qtlq: 2
zdhc: 3
hdrj: 17
sfgg: bthq + bwtn
bhtp: 4
hcqb: 4
rrbc: glrd + ljbv
ztps: 20
vmpz: 7
nltg: cgwz * hntj
trwl: 6
tfpq: 2
wgqr: zgtj * fltn
mblq: fnnl + mhzs
ctrt: 3
hftq: fbfs + zpst
bqdn: 2
zmhj: 6
vhjq: 7
mznr: sfqs * zbhd
vrtq: 14
fwnp: 2
bvmq: tffw * zplz
mhrt: bdbq / rrqv
grmj: tcgl * vslq
shdh: 7
tcrn: 2
rpjv: tttj - cbzr
dhwg: 5
nvdp: 5
bwfj: plbl * gdql
qscw: hdrj * tdpp
nlvd: dvzp + cfjw
jgcq: dfqf * cfvc
pzls: hwnc + jvtz
bbcb: 5
mtzp: 2
hnzw: 3
nrlf: 16
mdwq: fbsh * rzzn
wcqq: jmpd * jmff
ppff: 15
jzgw: 2
vzbj: 3
wnvz: rwsl * gdfg
grfz: jfmb + ftjj
gmmm: 8
gnql: 2
fhfm: gvsp * jghm
lvvd: 2
djqt: 3
wnwp: crch / wjww
bmlv: 4
rqws: 2
gqcm: rbjm + pnhc
qwqw: mzqf * gfhw
dvhm: 3
brsr: 5
rchz: 20
jlgg: stmv + bnml
dqtm: sjhn + bscw
pdcn: 2
tdsn: 6
ldsd: ltgh * qgnq
cnfn: 2
jccl: 15
fnbc: 3
tlgf: nfmz * nhwl
dhpv: 9
cslb: 4
cgvj: 2
fmzl: hwjw + qnmd
nwzl: dlmr + ccjs
mbqm: wdnn * jqpd
wgfl: 2
nbcm: 14
fvtt: 3
jvmn: 2
qwmp: 2
llcj: 2
pdhg: pmbr + szzl
jqbw: pmts + jbvt
lshm: 3
grwj: 7
ncqw: qwmn * qnmr
jcrp: 4
jcmp: 2
hqww: lqwb + bgbz
jdfd: 3
wrlz: 5
rlmh: jlww * dtvg
jzhn: gfpl - rltc
rwsg: 1
htpz: 13
sdfv: 3
pbbp: 9
drqq: 5
svtt: 2
wcnr: cmdf + sqpq
mmcb: 16
rmvj: 3
bhjq: wspr * bdbv
jmlf: sbdq - dmwp
nbwc: 7
rcqj: fhdn * pwqq
ptvm: 2
jhpl: rqjg * mvrf
qvdc: 4
vbqc: 5
cwch: 5
stmv: 2
jztn: wcmb * qwmp
lzjd: gwfr + vswj
sgvs: vmgt / gjnq
qnzb: rlzb + bpbn
lwwh: 3
ztvz: wtcn * nvmz
mbsh: mbvw + wjjs
lhbv: 2
ntrt: 3
mpql: 5
jrmq: 14
zgtj: 3
tzjf: pwbm + ltvw
tpsh: szmp + fsnn
zzpd: gdvl * wndt
dvrg: 5
nrtq: 19
rrbm: 2
hfbn: clts / zzsb
lvbn: qlpl * wdsh
znsd: 11
svhg: 2
vmml: 4
vzds: ppzj * mdvs
fvgw: 9
fmcc: 2
szhd: fswl / fvbl
ztzb: fqng + vwmv
fbtn: 5
pgpt: dwps * scjl
qqqz: 5
tvdn: fcrz / lzpv
jsfl: 1
wgps: gcrj * cvzm
nbwf: 3
spzr: 13
mpsg: 2
nnrm: bqbm + mmcb
bwll: 2
jthw: 20
vcdr: bcps + jllr
grdc: gslh - hnwq
szrc: mpzb * zfsb
stbs: 2
sldf: fgwm * tlqz
vsts: 11
qdcz: crwq * hthq
nmds: jrlq - msfq
lwtq: 3
sjhn: tbzz * nqhr
gnzc: 2
nhnc: vzws * vcdr
mclh: 3
bgvw: 2
jsrl: rnzl * dzqz
gfrc: mvbv - dlnb
tzws: ttzs * nltm
dmbq: fvmw - fvvl
btzh: hzhc + ddwj
rvhh: 2
rmgq: nvdp * qjcr
clbs: 2
nnvj: nvbt + rppv
stch: jjtq + mblq
dqgg: 16
wpgh: 2
qscq: 2
rrsg: 1
gjng: czdw * pgwv
tspv: 2
ppbv: wqmg + rptv
mmgj: jgrv * gwpb
tcnd: 16
hdbr: 2
bpcq: zvmn * csmc
tzng: vbmd * tpnq
gcgg: blhj + cllm
bsbm: 10
dvsm: 3
nzjz: 3
bptz: ctbf / zfzd
zrch: wznm - bwpb
tgjf: 2
zjts: 3
gzsw: tndq / nrrr
nmdb: 2
cwnq: rfmw * dchj
svbm: zrvz * jsrl
wvfc: 3
dpfq: cjns * qwdr
lfbv: wzgj * hfsv
fdns: 2
vdft: 3
ppbq: lhdc + pbwq
glcd: 5
wgmd: lrpv * mtqm
dzht: ttcp * bzbf
cblc: bmrj * hvtz
vbwd: 19
nlmc: 2
vpcn: 18
ttmt: jwrj + fwnp
lqwb: bqvc * qcpg
rmhm: 3
pznh: 5
hptt: vmpz + drpt
psft: thwj * dfnf
tjfz: vldm * spzr
mdbv: jqzd * tbts
mczt: zjqq * cqzv
rsqf: jlzq * qjmp
dtrt: tjsz + mcvm
gdwv: nrln + qdcb
npjp: lpmd + rlmh
hqjj: zdhc * phvt
lmbg: zhqs * zbhf
dfbp: 13
fzpq: mgbw / rcms
drpr: 4
lvqj: 3
jlqt: sdcw * gnzc
qmjf: lmgr + tqfs
hbwp: 18
pwcc: sbnj * vsgz
tjrr: 5
rffr: 2
rzgt: wttq + vscq
thdq: fzcc + vlbt
mvqw: fnwl + slzq
nchl: 3
mbdz: ltnb * wjrm
wnmg: 2
whnc: 2
vjwv: vwrp + svbm
lvjj: 11
hjdn: 3
bwtn: 5
nttb: 2
zmdm: 5
mtqm: nrgs + wrzb
cmhr: zzpd * cblj
jsmj: nlmc * nhzc
vznl: qbgz + njsb
ggsw: pbbw + lprj
dlbv: 2
nvbt: 2
nvlg: 5
crwv: 3
wspr: 3
pnbd: djgp + mjmr
ghfw: 2
dshh: tccm * lpfh
fnfq: 4
gbrs: 3
cttj: rmhm * fsmm
chtp: 4
zrgc: cvsg * bqzm
zjbz: dgvz * wgml
pbbw: 3
lznj: rlqm + vqgw
mdqt: 2
lrqw: 2
cghg: wntv * pfdz
qbcs: 2
bjcw: 2
vgvg: fllv / pdcn
thcw: 4
sqpq: mctr - mgzn
dtlr: jfzq + sghd
vdrw: 2
vzgm: 4
lntb: 4
slqh: 5
hftp: 7
wfqw: gzsw * ngfh
fsfp: mzfp / wwqz
sshb: 2
tlqf: jrww * lmqd
hbrp: 14
cnrc: qbhj * thjn
wzmf: 2
zllq: 11
fpzw: 4
cvsg: 5
psvn: vgmj - mgpr
rttz: vfsw - ltwt
vgfc: 2
fgwm: vjdm - fgwq
vcfz: 3
nbhv: 2
srvt: 6
prqs: hdmr * qhvw
hrjc: bwsm + mbzd
qbsw: 10
vfng: ntwf / crhv
thjq: bpnq / hfvd
mjvc: nghd + znsw
snsr: 18
lwss: 2
cqqq: 13
svvg: sjtv + sttg
wlpm: trwl + bdsm
gpgg: vzjs * nttb

`,H2=`

root: pppw + sjmn
dbpl: 5
cczh: sllz + lgvd
zczc: 2
ptdq: humn - dvpt
dvpt: 3
lfqf: 4
humn: 5
ljgn: 2
sjmn: drzm * dbpl
sllz: 4
pppw: cczh / lfqf
lgvd: ljgn * ptdq
drzm: hmdt - zczc
hmdt: 32
`;function X2(l1){let j1,m;return j1=new T2({props:{part1:B2,part2:G2,preprocessor:Te,metadata:$2}}),{c(){j2(j1.$$.fragment)},l(a){M2(j1.$$.fragment,a)},m(a,y){E2(j1,a,y),m=!0},p:q2,i(a){m||(b2(j1.$$.fragment,a),m=!0)},o(a){N2(j1.$$.fragment,a),m=!1},d(a){A2(j1,a)}}}const $2=R2;function Z2(l1){return C2.set(Te(V2)),I2.set(Te(H2)),[]}class K2 extends z2{constructor(j1){super(),S2(this,j1,Z2,X2,m2,{})}}export{K2 as default,$2 as myMetadata};
