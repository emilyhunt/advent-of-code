import{s as q,n as v}from"./scheduler.82952e60.js";import{S as y,i as x,k as j,m as k,o as N,p as D,q as _,r as E}from"./index.4f02d16c.js";import{c as S,a as $}from"./stores.7b94593c.js";import{R as P}from"./Runner.63361570.js";const r="Hill Climbing Algorithm",h="12",d="2022",l="We need to find the shortest path up the hill to get the best signal for our communicator! It took me SO LONG to implement Djikstra's algorithm for this one, honestly I should have just brute forced it. But oh well, it was fun =) I feel I understand JS classes better now.",p=!1,u="Length of shortest path to highest point",f="Length of shortest path from lowest point to highest",g=["sets","arrays","classes","Djikstra's algorithm","pathfinding"],b=!0,I={title:r,day:h,year:d,description:l,longRuntime:p,result1:u,result2:f,keywords:g,visible:b},C=Object.freeze(Object.defineProperty({__proto__:null,day:h,default:I,description:l,keywords:g,longRuntime:p,result1:u,result2:f,title:r,visible:b,year:d},Symbol.toStringTag,{value:"Module"}));class R{constructor(c,t,a,e,s){this.neighbors=[],this.distance=1e100,this.nearestNode=-1,this.isStart=!1,this.isEnd=!1,this.height=this.calculateHeight(c),[this.id,this.neighborIDs]=this.calculateNeighborIDs(t,a,e,s),this.stringValue=c,this.visited=!1}calculateHeight(c){if(c==="S")return this.isStart=!0,1;if(c==="E")return this.isEnd=!0,26;const t=Number(c.charCodeAt(0))-96;if(t<1||t>26)throw`Character ${c} out of bounds`;return t}calculateNeighborIDs(c,t,a,e){const s=t+c*e;let i=[];return t>0&&i.push(s-1),t<e-1&&i.push(s+1),c>0&&i.push(s-e),c<a-1&&i.push(s+e),[s,i]}setNeighbors(c){for(const t of this.neighborIDs)this.neighbors.push(c[t]);if(this.neighbors.length<2)throw`Current node id '${this.id}' has fewer than 2 neighbors. That should be impossible on a grid.`}testDistance(c,t){if(t(c.height,this.height))return;const e=c.distance+1;e<this.distance&&(this.distance=e,this.nearestNode=c.id)}visit(c,t){this.setNeighbors(c);for(const a of this.neighbors)a.visited||a.testDistance(this,t);this.visited=!0}getDistance(){return this.distance}getPath(){return this.nearestNode}}class m{constructor(c){this.nColumns=c.columns,this.nRows=c.rows,this.nodes=[],this.visitedNodeIDs=new Set,this.possibleNextNodes=new Set,this.idStart=-1,this.idEnd=-1,this.bestPath=[],this.bestPathEdges=[],this.initialiseNodes(c.data)}initialiseNode(c,t,a){const e=new R(c,t,a,this.nRows,this.nColumns);e.isStart&&(this.idStart=e.id),e.isEnd&&(this.idEnd=e.id),this.nodes.push(e)}initialiseNodes(c){for(let t=0;t<this.nRows;t++)for(let a=0;a<this.nColumns;a++)this.initialiseNode(c[t][a],t,a);if(this.idStart===-1)throw"Unable to find starting node during graph construction";if(this.idEnd===-1)throw"Unable to find ending node during graph construction"}getNextNodeToVisit(){if(this.possibleNextNodes.size===0)throw"No valid visitable nodes were found";let c=1e100,t=-1;for(const a of this.possibleNextNodes)this.nodes[a].distance<c&&(c=this.nodes[a].distance,t=a);if(t===-1)throw"Unable to find a new node to visit with a finite distance";return t}visitNode(c,t){this.nodes[c].visit(this.nodes,t),this.visitedNodeIDs.add(c),this.possibleNextNodes.delete(c);for(const a of this.nodes[c].neighbors)a.distance<1e100&&!this.visitedNodeIDs.has(a.id)&&this.possibleNextNodes.add(a.id)}evaluateGraphDjikstra(c,t,a){this.nodes[c].distance=0,this.visitNode(c,a);let e=this.getNextNodeToVisit();for(;!t(e);)this.visitNode(e,a),e=this.getNextNodeToVisit();return e}findBestPath(c,t){let a=t,e=[],s=[];for(;e.push(a),s.push(this.nodes[a].distance),a!==c;)a=this.nodes[a].nearestNode;e.reverse(),s.reverse();for(let i=1;i<s.length;i++)s[i]=s[i]-s[i-1];return{path:e,edges:s}}getShortestPath(c,t,a){let e;t==="lowest"?e=i=>this.nodes[i].height===1:e=i=>i===t;const s=this.evaluateGraphDjikstra(c,e,a);return this.findBestPath(c,s)}}const w=1;function o(n){n=n.trim().split(`
`);const c=n[0].length,t=n.length;return{data:n,columns:c,rows:t}}function M(n){const c=new m(n),{path:t}=c.getShortestPath(c.idStart,c.idEnd,(a,e)=>a+w<e);return t.length-1}function z(n){const c=new m(n),{path:t}=c.getShortestPath(c.idEnd,"lowest",(a,e)=>a-w>e);return t.length-1}const B=`abccccccccaaaaccccaaacaccccaaaaaacccccccccccaaaccccccccccaaaaaaacccccccccccccccccccccccccccccacaaaccccccccccccccccccccccccccccccccccccccccaaaaa
abccccccccaaaaccaaaaaaaacccaaaaaacccccccccccaaaacccccccccaaaaaaaaaacccccccccccccccaaccccccccaaaaaccaaaccaacccccccccccccccccccccccccccccccaaaaaa
abcccccccccaacccaaaaaaaaccccaaaaacccccccccccaaaacccccccaaaaaaaaaaaaaccccccccccaaaaaaccccccccaaaaaaaaaaaaaaccccccccccccccccaaaccccccccccccaaaaaa
abcccccccccccccccaaaaaccccccaacaaccccaacccccaaacccccccaaaaaaaaaaaaaaccccccccccaaaaaaacccccccccaaaaacaaaaaaccccccccccccccccaaccccccccccccccccaaa
abccccccccccccccccaaaaaccccccccccaaccaacccccccccccccccaaaaacaaaacacacccccaacccaaaaaaaacccccccaaaaacaaaaaaaccccccccccccccccaaacccccccccccccccaaa
abcccccccccccccccaaaaaaccccccccccaaaaaaccccccccccccccccaaaaaaaacaaaaacaaaaaccccaaaaaaacccccccaacaacaaaaaaaaccccccccaaaaccaakcccccccccccccccccaa
abcccccccccccccccaaaccacccccccccccaaaaaaacccccccaaaccccccaaaaaacaaaaaccaaaaaccaaaaaaccccccccccccaacaaaaaaaacccccccccaaaakkkklllcccccccccccccccc
abcccccaaaccccccccccccccccccccccccaaaaaaacccccccaaacacccaaaaaaaaaaaaacaaaaaaccaaaaaacccccccccccccccccaaaccccccccccccaaakkkkkllllcccccccaacccccc
abccccaaaacccccccccccccccccccccccaaaaaacccccccaccaaaaaccaaaaaaaaaaaaacaaaaccccccccaaccccccccccccccccccaaccccccccccccckkkkkkpllllccccaaaaaaccccc
abccccaaaacccccccccccccccccaaacccaaaaaacccccccaaaaaaaacccaaaaacaaaaaacccaaaccccccccccccccccccccccccccccccccccccccccckkkkpppppplllcccaaaaacccccc
abcccccaaaccccccccccccccccaaaacccccccaaccccccccaaaaacccccaaaccccaaacccccccccccccccccccccccccaaccccccccccccccccccjjjkkkkpppppppplllcccaaaaaacccc
abccccccccccccccccccccccccaaaaccccccccccccccccccaaaaacccccccccccccccccccccccccccccccccccccccaaaaaccccccccccccjjjjjjkkkrppppuppplllccccaaaaacccc
abccccccccccccccaaaccccccccaaaccccccccccccccccccaacaaccccccccccccccccccccccaaaccccccccaacccaaaaaccccccccccccjjjjjjjjrrrpuuuuuppplllcccccaaacccc
abcccccaaccaacccaaacacccccccccccccccccccccccccacaaaaccccccccccccccccccccccaaaaaaccccaaaacccaaaaaaccaccccccccjjjrrrrrrrrruuuuuppplllmcccddcccccc
abcccccaaaaaacaaaaaaaaccccccccccccccccccccccccaacaaaccccccccccccccccccccccaaaaaaccccaaaaaacccaaaaccaaacaaacjjjrrrrrrrrruuuxuuupqqlmmmmddddccccc
abcccccaaaaaccaaaaaaaaccccccccccccccccccccccccaaaaaccccaacccccccccccccccccaaaaaacccccaaaacccaacccccaaaaaaacjjjrrrrtuuuuuuxxyuvqqqqmmmmmddddcccc
abaacccaaaaaaccaaaaaccccccccccccccccccaaaaccccaaaaaaccaaaccccccccccccccccccaaaaaccccaaaaaccccccccccaaaaaaccjjjrrrtttuuuuuxxyvvvqqqqqmmmmdddcccc
abaaccaaaaaaaaccaaaaaccccccccccccccccaaaaaaaaaaaaaaaacaaacaaaccccccccccccccaacaacaacaacaaccccccccaaaaaaaaccijjqqrtttxxxxxxyyvvvvvqqqqmmmmdddccc
abaaccaaaaaaaacaaaaaaccccccccccccccccaaaaaaaaaaaaaaaaaaaaaaaacccccccccccccccaaacaaaccccccccccaaccaaaaaaaaaciiiqqqttxxxxxxxyyvvvvvvvqqqmmmdddccc
abaaaccccaaccccaaaccacccccccccccccccccaaaaaaccccaacaaaaaaaaaaccaaaccccccccccaaaaaaaccccccccccaaaaaaaaaaaaaaiiiqqqtttxxxxxxyyyyyyvvvqqqmmmdddccc
SbaaaccccaacccccccccccccccccccccccccaaaaaaaaccccaacccaaaaaaccaaaaaaccccccccccaaaaaacccccccccccaaaaacaaacaaaaiiiqqqttxxxxEzzyyyyyvvvqqqmmmdddccc
abaaaccccccccccccccccccccccccccccccaaaaaaaaaaccccccccaaaaaaccaaaaaaccccccccccaaaaaaaaccccccccaaaaaacaaaccaaaiiiqqqtttxxxyyyyyyvvvvqqqmmmdddcccc
abaccccccaacccccccccccccccccccccccccaaaaaaaaaaaacccccaaaaaaacaaaaaacccccccccaaaaaaaaacccccccaaaaaaaacaaaaaaaiiiqqqtttxxyyyyyyvvvvqqqqnnmeddcccc
abccccccaaaaccccccccccccaaaccccccccccccaaaaaaaaaaacccaaacaaacaaaaacccccccccaaaaaaaaaacccccccaaaaaaaaccaaaaaaaiiiqqtttxxyyyyyywvrrrrnnnneeeccccc
abccccccaaaacccccaacccccaaaacccccccccccaaaccaaaaaacccacccccccaaaaacccccccccaaacaaacccccccccccccaacccccccaaaaaiiqqqttxxwywwyyywwrrrnnnneeeeccccc
abccccccaaaaccaacaaaccccaaaaccccccaacccaacccaaaaaccccccccccccccccccccccccccccccaaacccccccccccccaaccccccaaaaaaiiqqqttwwwwwwwwywwrrrnnneeeecccccc
abccccccccccccaaaaacccccaaaccccacaaacccccccccaaaaacccccccccccccccccccccccccccccaaacccccccccccccccccccccaaaaaaiiqqpsswwwwsswwwwwrrnnneeeeccccccc
abcccccccccccccaaaaaacccccccccaaaaacaacccccccaacaacccccaaccccccccccccccccccccccccccccccccccccccccccccccaccaahhhpppssssssssswwwwrrnnneeeaccccccc
abcccccccccccaaaaaaaacccccccccaaaaaaaacccccaaccccccaaacaaccccccccccccccccccccccccccccccccccccaaaccaccccccccchhhpppsssssssssswwrrrnnneeeaaaacccc
abcccccccccccaaaaacaacccccccccccaaaaaccaaaaaaccccccaaaaaaccccccccccccccccccccccccccccaaccaaccaaaaaacccccccccchhpppppsspppossrrrrrnnneeeaaaacccc
abccccccccccccacaaaccccccccccccaaaaacccaaaaaaaacccccaaaaaaaccaaaccccccccaaaacccccccccaaaaaacccaaaaacccccccccchhhpppppppppoosrrrroonffeaaaaacccc
abccccccccccccccaaaccccccccccccaacaaaccaaaaaaaaccccaaaaaaaaacaaaccccccccaaaacccccccccaaaaaccaaaaaaacccccccccchhhhpppppppoooooooooonfffaaaaccccc
abcccccccccccccccccccccccaaaccccccaaccccaaaaaaaccccaaaaaaaaaaaaaaaccccccaaaacccccccccaaaaaacaaaaaaaacccccaacchhhhhhhhgggggoooooooofffaaaaaacccc
abcccccccccccccccccccccccaaaaacccaacccccaaaaaccccccaaaaaacaaaaaaaaccccccaaacccccccccaaaaaaaaaaaaaaaaccccaaacccchhhhhgggggggooooooffffaaaaaacccc
abccaaacccccccccccccccccaaaaaaccaaaccccaaaaaacccccccccaaacccaaaaacccccccccccccccccccaaaaaaaaccaaacacccccaaacaaachhhggggggggggfffffffcaacccccccc
abcaaaaccccccccccaacccccaaaaaaccaaacaaaccccaaccccccccccccccaaaaacccccccccccccccccccccccaacccccaaaccccaaaaaaaaaacccccccccaagggffffffcccccccccccc
abcaaaaccccccccccaaccccccaaaaaaaaaaaaaaccccccccccccccccccccaaaaaaccccccccccccccccccccccaaccccccccccccaaaaaaaaaccccccccccaaacgfffffcccccccccccaa
abccaaacccccccaaaaaaaacccaaaaaaaaaaaaaaccccccccaaaaaccaaaaaaaaaaaaaacaacccccccccaaaccacccccccccccccccccaaaaacccccccccccaaaaccccccccccccccccccaa
abccccccccccccaaaaaaaacccccccccaaaaaaccccccccccaaaaaccaaaaaaaaaaaaaacaaaaaacccccaaaaaacccccccccccccccccaaaaaacccccccccccaacccccccccccccccacacaa
abccccccccccccccaaaacccccccccccaaaaaacccccccccaaaaaacccaaaaaaaaaaaaacaaaaaacccccaaaaaacccccccccccccccccaaaaaaaccccccccccaacccccccccccccccaaaaaa
abcccccccccccccaaaaaaccccccccccaaaaaaaccccccccaaaaaaccccccaaaaaacccaaaaaaaaccccaaaaaaaaccccccccccccccccaaacaaacccccccccccccccccccccccccccaaaaaa

`,G=`

Sabqponm
abcryxxl
accszExk
acctuvwj
abdefghi
`;function L(n){let c,t;return c=new P({props:{part1:M,part2:z,preprocessor:o,metadata:O}}),{c(){j(c.$$.fragment)},l(a){k(c.$$.fragment,a)},m(a,e){N(c,a,e),t=!0},p:v,i(a){t||(D(c.$$.fragment,a),t=!0)},o(a){_(c.$$.fragment,a),t=!1},d(a){E(c,a)}}}const O=C;function T(n){return S.set(o(B)),$.set(o(G)),[]}class V extends y{constructor(c){super(),x(this,c,T,L,q,{})}}export{V as default,O as myMetadata};
